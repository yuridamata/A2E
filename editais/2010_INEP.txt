MINISTÉRIO DA EDUCAÇÃO INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA ­ INEP DIRETORIA DE GESTÃO E PLANEJAMENTO COORDENAÇÃO-GERAL DE RECURSOS LOGÍSITICOS, AQUISIÇÕES E CONVÊNIOS SRTVS Quadra 701, Bloco M, Asa Sul, Ed. Sede do Inep, 2º Andar. CEP: 70340-909 CNPJ. 01.678.363/0001-43 (61) 2022-3236 / 3240 / 3235 ­ Fax. 2022-3249 e-mail: pregao@inep.gov.br

EDITAL DO PREGÃO ELETRÔNICO N.º 11/2010
.

DTDIE/INEP

PROCESSO N.º 23036.000324/2010-16

OBJETO: Prestação de serviços técnicos de Tecnologia da Informação, compreendendo o desenvolvimento e manutenção de sistemas de informação, de acordo com as especificações, padrões técnicos de desempenho e qualidade estabelecidos pelo INEP, mediante ordens de serviço dimensionadas pela métrica de pontos de função, em regime de fábrica de software, limitada ao quantitativo máximo de 20.000 (vinte mil) pontos de função anuais, sem garantia de consumo mínimo.
1

MINISTÉRIO DA EDUCAÇÃO INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA ­ INEP DIRETORIA DE GESTÃO E PLANEJAMENTO COORDENAÇÃO-GERAL DE RECURSOS LOGÍSITICOS, AQUISIÇÕES E CONVÊNIOS SRTVS Quadra 701, Bloco M, Asa Sul, Ed. Sede do Inep, 2º Andar. CEP: 70340-909 CNPJ. 01.678.363/0001-43 (61) 2022-3236 / 3240 / 3235 ­ Fax. 2022-3249 e-mail: pregao@inep.gov.br

PREGÃO ELETRÔNICO Nº 11/2010
DTDIE/INEP

PROCESSO N.º 23036.000324/2010-16
O INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA ­ INEP, torna público, por intermédio de seu Pregoeiro, designado pela Portaria nº 72, de 27 de abril de 2009, do seu Presidente, que fará realizar licitação, na modalidade PREGÃO ELETRÔNICO ­ TIPO MENOR PREÇO GLOBAL, que será regido pela Lei nº 10.520, de 17 de julho de 2002, pelo Decreto nº 3.555, de 8 de agosto de 2000, alterado pelos Decretos nº 3.693, de 20 de dezembro de 2000, nº 3.931 de 19 de setembro de 2001 e nº 3.784, de 6 de abril de 2001, Decreto nº 5.450, de 31 de maio de 2005, Lei Complementar nº 123, de 2006, Decreto nº 6.204/2007, Lei nº 8.078/90 ­ Código de Defesa do Consumidor, IN-MPOG nº 02, de 30 de abril de 2008, e suas alterações posteriores, IN-MPOG nº 4, de 19 de maio de 2008, IN-MPOG nº 01, de 20 de janeiro de 2010, e demais legislações correlatas, aplicando-se subsidiariamente, no que couber, as disposições da Lei nº 8.666, de 21 de junho de 1993, com suas alterações, mediante as condições e exigências estabelecidas neste Edital e nos anexos que o integram.

Data: 10 de junho de 2010 Horário: 10 horas Endereço eletrônico: www.comprasnet.gov.br

2

1. DO OBJETO 1.1. A presente licitação tem por objeto a contratação de prestação de serviços técnicos de Tecnologia da Informação, compreendendo o desenvolvimento e manutenção de sistemas de informação, de acordo com as especificações, padrões técnicos de desempenho e qualidade estabelecidos pelo INEP, mediante ordens de serviço dimensionadas pela métrica de pontos de função, em regime de fábrica de software, limitada ao quantitativo máximo de 20.000 (vinte mil) pontos de função anuais, sem garantia de consumo mínimo, pelo prazo de 12 (doze) meses, renováveis por iguais períodos até o limite de 60 (sessenta) meses, conforme quantidade e especificações mínimas do Termo de Referência e seus Encartes. 1.2. Constituem Anexos a este Edital, dele fazendo parte integrante como se transcritos estivessem: a) Termo de Referência ­ Anexo I e seus Encartes: i. ii. iii. iv. v. vi. vii. viii. ix. x. xi. xii. xiii. xiv. xv. Encarte A ­ Modelo de Atestado de Vistoria Encarte B ­ Modelo de Termo de Sigilo e Responsabilidade Encarte C ­ Modelo de Ordem de Serviço Encarte D ­ Ambiente Computacional do Inep Encarte E ­ Relação dos Sistemas que compõem o Legado do Inep Encarte F ­ Metodologia de Gestão e Desenvolvimento de Sistemas do Inep (MGDS) Encarte G ­ Guia de Desenvolvimento de Sistemas Encarte H ­ Guia de Arquitetura (para Java e PHP) Encarte I ­ Guia de Segurança da Informação para Desenvolvimento de Sistemas Encarte J ­ Guia de Banco de Dados Encarte K ­ Guia de Contagem de Pontos de Função do Inep Encarte L ­ Modelo de Declaração de Propriedade Intelectual Encarte M ­ Modelo de Planilha de Custos e Formação de Preços Encarte N ­ Modelo de Declaração de Proteção contra o Trabalho do Menor Encarte O ­ Modelo de Declaração de Pleno Conhecimento e Atendimento às Exigências de Habilitação
3

xvi. xvii. xviii.

Encarte P ­ Modelo de Declaração de Inexistência de Fatos Impeditivos Encarte Q ­ Modelo de Apresentação da Proposta de Preços Encarte R ­ Modelo de Relatório Mensal de Ordens de Serviço

b) Declaração de Elaboração Independente de Proposta ­ Anexo II c) Minuta do Contrato ­ Anexo III 2. DA QUALIFICAÇÃO DAS MICROEMPRESAS E DAS EMPRESAS DE PEQUENO PORTE PARA FRUIÇÃO DOS BENEFÍCIOS PREVISTOS NA LEI COMPLEMENTAR Nº 123, DE 2006. 2.1. No ato de envio de sua proposta, em campo próprio do sistema, a microempresa e a empresa de pequeno porte deverá declarar, sob as penas da Lei, que cumprem os requisitos estabelecidos no Art. 3º da Lei Complementar nº 123, de 14 de dezembro de 2006, alterada pela Lei nº 11.488, de 15 de junho de 2007, em seu Art. 34, que essa Empresa está apta a usufruir do tratamento favorecido estabelecido nos artigos 42 ao 49 da referida Lei Complementar. 2.2. Para os efeitos deste Edital, consideram-se microempresas ou empresas de pequeno porte a sociedade empresária, a sociedade simples e o empresário a que se refere o art. 966 da Lei no 10.406, de 10 de janeiro de 2002, devidamente registrados no Registro de Empresas Mercantis ou no Registro Civil de Pessoas Jurídicas, conforme o caso, desde que: I - No caso das microempresas, o empresário, a pessoa jurídica, ou a ela equiparada, aufira, em cada ano-calendário, receita bruta igual ou inferior a R$ 240.000,00 (duzentos e quarenta mil reais); II - No caso das empresas de pequeno porte, o empresário, a pessoa jurídica, ou a ela equiparada, aufira, em cada ano-calendário, receita bruta superior a R$ 240.000,00 (duzentos e quarenta mil reais) e igual ou inferior a R$ 2.400.000,00 (dois milhões e quatrocentos mil reais). 2.3. Não fará jus ao regime diferenciado e favorecido previsto no art. 42 e seguintes da Lei Complementar nº 123, de 14 de dezembro de 2006, a microempresa ou empresa de pequeno porte: I - De cujo capital participe outra pessoa jurídica; II - Que seja filial, sucursal, agência ou representação, no País, de pessoa jurídica com sede no exterior; III - De cujo capital participe pessoa física que seja inscrita como empresário, ou seja, sócia de outra empresa que receba tratamento jurídico diferenciado nos termos desta Lei Complementar, desde que a receita bruta global ultrapasse o limite de que

4

trata o inciso II do caput do art.3º da Lei Complementar nº 123. de 14 de dezembro de 2006; IV - Cujo titular ou sócio participe com mais de 10% (dez por cento) do capital de outra empresa não beneficiada por esta Lei Complementar, desde que a receita bruta global ultrapasse o limite de que trata o inciso II do caput do art.3º da Lei Complementar nº 123. de 14 de dezembro de 2006; V - Cujo sócio ou titular seja administrador ou equiparado de outra pessoa jurídica com fins lucrativos, desde que a receita bruta global ultrapasse o limite de que trata o inciso II do caput do art. 3º da Lei Complementar nº 123, de 14 de dezembro de 2006; VI - Constituída sob a forma de cooperativas, salvo as de consumo; VII - Que participe do capital de outra pessoa jurídica; VIII - Que exerça atividade de banco comercial, de investimentos e de desenvolvimento, de caixa econômica, de sociedade de crédito, financiamento e investimento ou de crédito imobiliário, de corretora ou de distribuidora de títulos, valores mobiliários e câmbio, de empresa de arrendamento mercantil, de seguros privados e de capitalização ou de previdência complementar; IX - Resultante ou remanescente de cisão ou qualquer outra forma de desmembramento de pessoa jurídica que tenha ocorrido em um dos 05 (cinco) anoscalendário, anteriores; X - Constituída sob a forma de sociedade por ações. 2.4. O Sistema verificará automaticamente junto a Receita Federal o porte da Empresa que atende os requisitos do artigo 3º da Lei Complementar nº 123/2006. 3. DA IMPUGNAÇÃO DO EDITAL E DOS PEDIDOS DE ESCLARECIMENTOS 3.1. Até dois dias úteis antes da data fixada para abertura da sessão pública, qualquer pessoa poderá impugnar o ato convocatório do Pregão, na forma eletrônica. (Art.18 do Decreto nº 5.450/2005); 3.2. Caberá ao Pregoeiro, auxiliado pelo setor responsável pela elaboração do edital, decidir sobre a impugnação no prazo de até vinte e quatro horas (Art.18, § 1º do Decreto nº 5.450/2005); 3.3. Acolhida a impugnação contra o ato convocatório, será definida e publicada nova data para realização do certame. (art.18, § 2º do Decreto nº 5.450/2005). 3.4. As impugnações deverão ser apresentadas exclusivamente na forma eletrônica, através do e-mail: pregao@inep.gov.br, até às 18hs, do segundo dia útil anterior à data fixada para abertura da sessão pública.

5

3.5. Os pedidos de esclarecimentos referentes ao processo licitatório deverão ser enviados ao Pregoeiro, até às 18hs do terceiro dia útil anterior à data fixada para abertura da sessão pública, exclusivamente por meio eletrônico via Internet, no e-mail: pregao@inep.gov.br (Art.19 do Decreto nº 5.450/2005). 3.6. As respostas às impugnações e aos esclarecimentos solicitados serão disponibilizadas no endereço eletrônico www.comprasnet.gov.br, por meio do link Acesso livre > Pregões > Agendados, para conhecimento da sociedade em geral e dos fornecedores, cabendo aos interessados em participar do certame acessá-lo para a obtenção das informações prestadas. 4. DA MODIFICAÇÃO DO EDITAL Qualquer modificação no presente Edital será divulgada pela mesma forma que se divulgou o texto original, reabrindo-se o prazo inicialmente estabelecido, exceto quando, inquestionavelmente, a alteração não afetar a formulação da proposta. 5. DAS CONDIÇÕES GERAIS PARA PARTICIPAÇÃO 5.1. Poderão participar deste Pregão os interessados que: a) Pertençam ao ramo de atividade do objeto licitado e atendam às condições deste Edital e de seus Anexos, inclusive quanto à documentação, e estejam devidamente credenciadas na Secretaria de Logística e Tecnologia da Informação (SLTI), do Ministério do Planejamento, Orçamento e Gestão, por meio do sítio www.comprasnet.gov.br para acesso ao sistema eletrônico; e b) Atenderem a todas as exigências constantes deste Edital e que estejam devidamente CADASTRADAS e HABILITADAS PARCIALMENTE no Sistema de Cadastramento Unificado de Fornecedores ­ SICAF; 5.2. Os interessados não cadastrados no SICAF, e que tiverem interesse em participar do presente Pregão, deverão providenciar o seu cadastramento e sua habilitação junto a qualquer Unidade Cadastradora dos órgãos da Administração Pública, até o terceiro dia útil anterior à data da abertura da sessão (Parágrafo único do art. 3º do Decreto nº 3.722/01 c/c o Parágrafo único do Art. 14 do Decreto nº 5.450/2005); 5.3. NÃO PODERÃO CONCORRER, DIRETA OU INDIRETAMENTE, NESTA LICITAÇÃO: a) Empresas em estado de falência, de concurso de credores, de dissolução ou liquidação e em recuperação judicial e extrajudicial; b) Empresas que tenham sido declaradas inidôneas por qualquer órgão/entidade da Administração Pública, direta ou indireta, federal, estadual ou municipal, bem como as que estejam punidas com suspensão do direito de contratar ou licitar com a Administração Pública Federal;
6

c) Empresas reunidas em consórcio e/ou que sejam controladoras, coligadas ou subsidiárias entre si; d) Servidor de qualquer órgão ou entidade vinculada ao órgão/entidade promotor(a) da licitação, bem assim a empresa da qual tal servidor seja sócio, dirigente ou responsável técnico; e) Empresas estrangeiras que não funcionem no País; f) Sociedades Cooperativas 6. DO CREDENCIAMENTO 6.1. Deverão ser previamente credenciados perante o provedor do sistema eletrônico a autoridade competente da entidade promotora da licitação, o Pregoeiro, os membros da equipe de apoio e os licitantes que participam do Pregão na forma eletrônica. (Art. 3º do Decreto nº 5.450/2005). 6.2. O credenciamento dar-se-á pela atribuição de chave de identificação e de senha, pessoal e intransferível, para acesso ao sistema eletrônico (Art. 3º, § 1º, do Decreto nº 5.450/2005), no sítio: www.comprasnet.gov.br. 6.3. O credenciamento do(s) licitante(s) dependerá de registro atualizado no Sistema de Cadastramento Unificado de Fornecedores ­ SICAF, que também será requisito obrigatório para sua habilitação. (Art. 3º, § 2º, do Decreto nº 5.450/2005). 6.4. O uso da senha de acesso pelo licitante é de sua responsabilidade exclusiva, incluindo qualquer transação efetuada diretamente ou por seu representante, não cabendo ao provedor do sistema ou ao INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANISIO TEIXEIRA - INEP, promotor da licitação, responsabilidade por eventuais danos decorrentes do uso indevido da senha, ainda que por terceiros. (Art.3º, § 5º, do Decreto nº 5.450/2005). 6.5. O credenciamento junto ao provedor do sistema implica responsabilidade legal do licitante ou de seu representante legal e a presunção de sua capacidade técnica para realização das transações inerentes ao Pregão Eletrônico (Art. 3º, § 6º, do Decreto nº 5.450/2005). 7. DO ENVIO DA PROPOSTA DE PREÇOS 7.1. Após a divulgação do Edital no sítio www.comprasnet.gov.br, os licitantes deverão encaminhar suas propostas com a descrição do objeto ofertado e os preços com valores unitários e totais do item, o(s) respectivo(s) anexo(s), até a data e hora marcadas para abertura da sessão, ou seja, até as 10 horas do dia 10 de junho de 2010, horário de Brasília, exclusivamente por meio do sistema eletrônico, quando, então, encerrar-se-á, automaticamente, a fase de recebimento de propostas. A proposta será analisada pelo Pregoeiro, que desclassificará as propostas em desconformidade com o Edital e seus Anexos. (Art. 21 e § 2º do Art. 22, do Decreto nº 5.450/2005).

7

7.2. A participação no Pregão Eletrônico dar-se-á pela utilização da senha privativa do licitante (Art. 21, § 1º, do Decreto nº 5.450/2005). 7.3. Para participação no Pregão Eletrônico, o licitante deverá manifestar, em campo próprio do sistema eletrônico, que cumpre plenamente os requisitos de habilitação e que sua proposta está em conformidade com as exigências do instrumento convocatório (Art. 21, § 2º, do Decreto nº 5.450/2005). 7.4. A declaração falsa relativa ao cumprimento dos requisitos de habilitação e proposta sujeitará o licitante à sanção prevista neste Edital e no Decreto nº 5.450/2005, nos termos do Art. 21, § 3º, do Decreto nº 5.450/2005. 7.5. As declarações de que tratam os subitens 12.3.3 e 12.3.4, deste Edital, serão enviadas, de forma virtual, no momento da elaboração e envio da proposta, as quais somente serão visualizadas pelo pregoeiro na fase de habilitação, quando também poderão ser alteradas ou reenviadas pelos licitantes, por solicitação do pregoeiro. 7.6. Até a abertura da sessão, o licitante poderá retirar ou substituir a proposta anteriormente apresentada, nos termos do Art. 21, § 4º, do Decreto nº 5.450/2005. 7.7. O licitante responsabilizar-se-á formalmente pelas transações efetuadas em seu nome, assumindo como firmes e verdadeiras suas propostas e lances, inclusive os atos praticados diretamente ou por seu representante, não cabendo ao provedor do sistema ou ao órgão/promotor(a) da licitação, responsabilidade por eventuais danos decorrentes de uso indevido da senha, ainda que por terceiros. (Art.13, Inciso " III ", do Decreto nº 5.450/2005). 7.8. Incumbirá ao licitante acompanhar as operações no sistema eletrônico durante a sessão pública do Pregão, ficando responsável pelo ônus decorrente da perda de negócios diante da inobservância de quaisquer mensagens emitidas pelo sistema ou de sua desconexão (Art. 13, Inciso IV, do Decreto nº 5.450/2005). 7.9. A proposta deverá conter: 7.9.1. ESPECIFICAÇÃO CLARA E COMPLETA DO OBJETO OFERECIDO, OBEDECIDA PREFERENCIALMENTE A MESMA ORDEM CONSTANTE NO TERMO DE REFERÊNCIA, E SEU ENCARTE "Q", ANEXO A ESTE EDITAL, DEVENDO CONTER O DETALHAMENTO DE TODAS AS CARACTERÍSTICAS DOS EQUIPAMENTOS E SERVIÇOS OFERTADOS, ASSIM COMO ESPECIFICAÇÃO DA GARANTIA DOS SERVIÇOS E DOS PRAZOS DE EXECUÇÃO/ENTREGA AO INEP; 7.9.2. PLANILHA DE CUSTOS E FORMAÇÃO DE PREÇOS que contenha as especificações detalhadas dos serviços, conforme modelo ENCARTE "M" do Termo de Referência ­ ANEXO I, parte integrante deste Edital, em moeda corrente nacional, expresso em algarismos e por extenso nos valores unitários e totais do equipamento e/ou serviços ofertados. 7.9.3. Prazo de validade mínima da proposta que deverá ser de 60 (sessenta) dias, a contar da data de sua apresentação;

8

7.9.4. Declaração expressa de que os preços contidos na proposta incluem todos os custos, despesas e encargos; 7.9.5. A razão social, o CNPJ, colocando o número do Edital do Pregão, dia e hora de abertura, endereço completo, o número do telefone, fac-símile e e-mail, bem como, o número de sua conta corrente, o nome do Banco e a respectiva Agência onde deseja receber seus créditos, não sendo fator de desclassificação o descumprimento deste item; 7.9.6. Apresentar quaisquer outras informações afins que julgar necessárias ou convenientes, não sendo fator de desclassificação o descumprimento deste item. 7.9.7. As empresas licitantes deverão apresentar, juntamente com a Proposta de Preços, o Atestado de Vistoria devidamente preenchido e assinado pela DTDIE, conforme consta do item 11.3 do do Termo de Referência e seu Encarte A anexos a este Edital, afirmando que a licitante visitou as dependências do INEP, onde serão prestados os serviços objeto do presente termo, tomando conhecimento de todos os aspectos que possam influir direta ou indiretamente na execução dos mesmos. 7.9.8. Todos os requisitos técnicos deverão ser indicados na documentação técnica (incluindo número da página e sua respectiva fonte). 7.10. A apresentação da proposta implicará em PLENA ACEITAÇÃO, por parte do proponente, das condições estabelecidas neste Edital e seus Anexos. 7.11. Aberta a sessão do Pregão Eletrônico, não caberá desistência da proposta, salvo por motivo justo, decorrente de fato superveniente e aceito pelo Pregoeiro. 7.12. Fica vedado ao licitante identificar-se quando do registro de sua proposta, planilha ou outros anexos exigidos nesse edital, sob pena de desclassificação do certame pelo Pregoeiro. 8. DA RECEPÇÃO, JULGAMENTO E DIVULGAÇÃO DAS PROPOSTAS 8.1. A partir das 10 horas do dia 10 de junho de 2010, data e horário previstos no preâmbulo deste Edital, terá início a sessão pública do Pregão Eletrônico n º 11/2010, com a divulgação e julgamento das Propostas de Preços recebidas e início da etapa de lances, conforme Edital e de acordo com o Decreto nº 5.450/2005. 8.2. No julgamento das Propostas serão observadas as especificações constantes deste Edital e seus Anexos. 8.3. Será verificada a conformidade das Propostas apresentadas com os requisitos estabelecidos neste Edital e seus Anexos. 8.4. A classificação das propostas será pelo critério do TIPO MENOR PREÇO GLOBAL tomando-se como base na PLANILHA DE CUSTO E FORMAÇÃO DE PREÇOS do ENCARTE "M" DO TERMO DE REFERÊNCIA ­ parte integrante deste Edital. 8.5. Serão desclassificadas as propostas que: a) Não atenderem às exigências do presente Edital e seus Anexos;

9

b) Apresentarem valores simbólicos, irrisórios, inexeqüíveis ou excessivos, consideradas as condições já dispostas neste Edital e seus Anexos; e c) Apresentarem propostas alternativas. 8.6. A desclassificação da proposta será fundamentada e registrada no sistema. 8.7. Somente os licitantes com propostas classificadas participarão da fase de lances. 8.8. O Pregoeiro poderá solicitar parecer(es) técnico(s), para orientar sua(s) decisão(ões). 9. DA FORMULAÇÃO DOS LANCES 9.1. Classificadas as Propostas, o Pregoeiro dará início à fase competitiva, quando então os licitantes poderão encaminhar lances exclusivamente por meio do sistema eletrônico. (Art. 24, do Decreto nº 5.450/2005). 9.1.1. Assim como as propostas, os lances serão ofertados pelo MENOR PREÇO GLOBAL, incluídos todos os custos incidentes; e 9.1.2. Não poderá haver desistência dos lances ofertados, sujeitando-se o proponente desistente às sanções administrativas constantes neste Edital. 9.2. Os licitantes poderão oferecer lances sucessivos, observados o horário fixado para abertura da sessão pública e as regras estabelecidas neste Edital. 9.3. O licitante somente poderá oferecer lance inferior ao último por ele ofertado e registrado pelo sistema. 9.4. Havendo mais de um lance de igual valor, prevalecerá aquele que for recebido e registrado em primeiro lugar. 9.5. Durante o transcurso da sessão pública, os licitantes serão informados, em tempo real, do valor do menor lance registrado que tenha sido apresentado pelos demais licitantes, vedada a identificação do licitante. 9.6. No caso de desconexão do Pregoeiro, no decorrer da etapa de lances, se o sistema eletrônico permanecer acessível aos licitantes, os lances continuarão sendo recebidos, sem prejuízo dos atos realizados. (Art.24, § 10, do Decreto nº 5.450/2005). 9.6.1. Quando a desconexão do Pregoeiro persistir por tempo superior a 10 (dez) minutos, a sessão do Pregão será suspensa e terá reinício somente após comunicação expressa do Pregoeiro aos participantes, no sítio www.comprasnet.gov.br (Art.24, § 11, do Decreto nº 5.450/2005). 9.6.2. No caso de desconexão do licitante proponente, este deverá de imediato, sob sua inteira responsabilidade, providenciar sua conexão ao sistema.

10

9.7. A etapa de lances da sessão pública será encerrada, por decisão do Pregoeiro, mediante aviso de fechamento iminente dos lances, emitido pelo sistema eletrônico aos licitantes, após o que transcorrerá período de tempo de até 30 (trinta) minutos, aleatoriamente determinado pelo sistema eletrônico, findo o qual será automaticamente encerrada a recepção de lances. 10. DA PREFERÊNCIA EM FAVOR DAS MICROEMPRESAS E DAS EMPRESAS DE PEQUENO PORTE (LEI COMPLEMENTAR Nº 123, DE 14 DE DEZEMBRO 2006). 10.1. Após o encerramento da etapa de lances, o SISTEMA DE PREGÃO ELETRÔNICO COMPRASNET IDENTIFICARÁ EM COLUNA PROPRIA AS ME/EPP PARTICIPANTES, FAZENDO A COMPARAÇÃO ENTRE OS VALORES DA PRIMEIRA COLOCADA, CASO ESTA NAO SEJA UMA ME/EPP, E DAS DEMAIS ME/EPPS NA ORDEM DE CLASSIFICACAO. 10.2. Considerar-se-ão empatados todos os lances apresentados pelas microempresas e empresas de pequeno porte que atenderam subitem 2.1, deste Edital, que sejam iguais ou até 5% (cinco por cento) superiores ao lance mais bem classificado. 10.2.1. Não ocorrerá empate quando o melhor lance tiver sido apresentado por microempresa ou empresa de pequeno porte que atendeu o subitem 2.1, deste Edital. 10.3. ocorrendo empate, nos termos do subitem 10.2, do Edital: I) A proposta que se encontrar na faixa ate 5% acima da proposta de menor preço estará empatada com a primeira colocada e terá o direito, no prazo de 5 (cinco) minutos controlados pelo sistema, de encaminhar uma ultima oferta, obrigatoriamente abaixo da primeira colocada para o desempate. II) Para viabilizar tal procedimento, o sistema selecionara os itens com tais características, disponibilizando-os automaticamente nas telas do pregoeiro e fornecedor, encaminhando mensagem também automática, por meio do Chat, convocando a ME/EPP que se encontra em segundo lugar, a fazer sua ultima oferta no prazo de 5 (cinco) minutos sob pena de decair do direito concedido. III) Caso a ME/EPP classificada em segundo lugar desista ou não se

manifeste no prazo estabelecido, o sistema convocara as demais ME/EPPS participantes na mesma condição, na ordem de classificação. havendo êxito neste procedimento, o sistema disponibilizara a nova classificação dos fornecedores para fins de aceitação.
11

IV) Não havendo êxito, ou não existindo ME/EPP participante, prevalecera a classificação inicial. V) Caso sejam identificadas propostas de ME/EPPS empatadas em segundo lugar, ou seja, na faixa dos 5% da primeira colocada, e permanecendo o empate ate o encerramento do item, o sistema fará um sorteio eletrônico entre tais fornecedores, definindo e convocando automaticamente a vencedora para o encaminhamento da oferta final do desempate. VI) A negociação de preço junto ao fornecedor classificado em primeiro lugar, quando houver, será sempre apos o procedimento de desempate de propostas e classificação final dos fornecedores participantes. os demais procedimentos ou fase permanecem inalterados. 10.4. Anunciado o vencedor o Pregoeiro poderá encaminhar pelo sistema eletrônico contraproposta diretamente ao licitante que tenha apresentada a oferta mais vantajosa, para que seja obtida a melhor proposta, observado o critério de julgamento, não se admitindo negociar condições diferentes daquelas previstas no Edital, bem assim decidir sobre sua aceitação. 10.5. A negociação será realizada por meio do sistema, podendo ser acompanhada pelos demais licitantes. 11. DO ENVIO DAS PROPOSTAS DE PREÇOS READEQUADAS AO LANCE VENCEDOR. 11.1.Após o encerramento da etapa de lances e, o licitante classificado em primeiro lugar deverá, no prazo de 24 (vinte e quatro) horas, encaminhar, por meio do fax (0xx61) 2022-3249, sua proposta de preços readequada à oferta vencedora, com posterior encaminhamento da original ao Pregoeiro, no prazo máximo de 3 dias úteis. (§6º do Art. 25 do Decreto nº 5.450/2005). 11.2.O proponente que não atender o disposto no subitem anterior será desclassificado. 11.3.Caso haja a desclassificação da licitante mais bem classificada, o pregoeiro chamará, via Chat, o(s) próximo(s) licitante(s) para confirmar o envio de sua proposta conforme o subitem 11.1; 11.4.O licitante que não responder ao chamemento a que se refere o subitem anterior, no prazo estipulado pelo pregoeiro via Chat, será desclassificado.

12

12. DA HABILITAÇÃO 12.1.A habilitação do licitante será verificada por meio do SICAF, nos documentos por ela abrangidos, e por meio da documentação complementar especificada neste Edital. 12.1.1. A licitante que estiver com alguma restrição na comprovação da regularidade fiscal, ressalvado o que trata o subitem 12.2, será desclassificada. 12.2.Havendo alguma restrição na comprovação da regularidade fiscal das microempresas ou das empresas de pequeno porte, será concedido um prazo de 02 (dois) dias úteis, contados do momento em que o licitante foi declarado vencedor do certame, prorrogáveis por igual período, para a regularização da documentação, pagamento ou parcelamento do débito, e emissão de eventuais certidões negativas ou positivas com efeito de certidão negativa. 12.2.1. Antes de ser efetivada a contratação, da licitante vencedora, deverá ser realizada consulta junto ao SICAF, SIAFI e CADIN, para verificação da regularidade da licitante. 12.2.2. A prorrogação do prazo para regularização fiscal será concedida pelo Inep quando requerida pelo licitante, a não ser que exista urgência na contratação ou prazo insuficiente para o empenho; 12.2.3. A não-regularização da documentação fiscal, no prazo previsto no subitem anterior, implicará decadência do direito à contratação, sem prejuízo das sanções previstas no art. 81, da Lei n. 8.666, de 21 de junho de 1993, sendo facultado ao INEP convocar os licitantes remanescentes, na ordem de classificação, ou revogar a licitação. 12.2.4. A existência de qualquer outra restrição na habilitação da licitante diversa da regularidade fiscal, ensejará a desclassificação imediata da proponente. 12.3. Para fins de habilitação, todos os licitantes deverão apresentar, ainda, a seguinte documentação complementar: 12.3.1. um ou mais atestado(s) de capacidade técnica, emitido(s) por pessoa jurídica de direito público ou privado, em documento timbrado, comprovando experiência na prestação de serviços técnicos de desenvolvimento e manutenção de sistemas em regime de fábrica de software, totalizando um montante mínimo de 10.000 (dez mil) pontos de função, equivalentes a 50% (cinquenta por cento) dos pontos de função estimados para este certame, atendendo aos padrões de qualidade de forma satisfatória; 12.3.1.1. O(s) atestado(s) apresentado(s) deverá(ão) atender à seguinte proporcionalidade entre as plataformas que representam parcelas mais relevantes em termos do volume de serviço a ser contratado:

13

Java PHP ASP com componentes em VB, Delphi e Joomla!

46% 31% 23%

12.3.1.2. É obrigatória a comprovação, através do atestado ou do conjunto de atestados, da experiência nas plataformas listadas acima, com a utilização dos bancos de dados Oracle, MySQL e PostGreSQL; 12.3.1.3. O Inep poderá realizar diligência nos atestados de capacidade técnica apresentados para verificação da autenticidade de seu conteúdo, conforme previsto no Art. 43, § 3º da Lei 8.666/93; 12.3.1.4. A quantidade de 10.000 (dez mil) pontos de função é justificável por representar 50% (cinquenta por cento) do total a ser contratado, sendo este percentual considerado razoável e plenamente compatível em quantidade, características e prazo, para demonstrar a capacidade do futuro fornecedor em prestar a integralidade dos serviços, nos termos do inciso II do Art. 30 da Lei Nº 8.666/93. 12.3.2. Comprovação de capital social registrado ou patrimônio líquido mínimo de 10% (dez por cento) do valor estimado da contratação, de acordo com os parágrafos 2º e 3º, do artigo 31, da Lei nº 8.666/93, a qual será exigida somente no caso de o licitante apresentar resultado igual ou inferior a 1 (um) em qualquer dos índices Liquidez Geral, Liquidez Corrente e Solvência Geral, calculados e informados pelo SICAF; 12.3.3. Declaração, nos moldes do Anexo IV da IN do extinto MARE nº 05/95, republicada com alterações no Diário Oficial da União de 19/04/96, de que não há fato impeditivo de sua habilitação, obrigando-se a informar a superveniência de ocorrências posteriores (conforme Encarte "P" do Termo de Referência anexo a este Edital); 12.3.4. Declaração em cumprimento ao disposto no inciso XXXIII, do art. 7º, da Constituição Federal (confomre Encarte "N" do Termo de Referência anexo a este Edital); 12.3.5. Declaração nos moldes do Anexo II deste Edital, em cumprimento à Instrução Normativa nº 02, de 16 de setembro de 2009, publicada no DOU, nº 178, seção 1, página 80, de 17 de setembro de 2009; 12.4. Para fins de habilitação, a verificação em sítios oficiais de órgãos e entidades emissores de certidões constitui meio legal de prova.

14

12.5. Os documentos necessários à habilitação ­ os que não estejam contemplados no SICAF ou os necessários à atualização ou regularização dos dados constantes do SICAF ­ bem como a Proposta de Preços vencedora ajustada ao lance dado serão imediatamente encaminhados ao Pregoeiro, no prazo máximo de 24 (vinte e quatro) horas contadas a partir do encerramento da etapa de lances, para o Fax (0XX61) 2022-3249, com posterior envio do original ou cópia autenticada (via SEDEX ou pessoalmente), no prazo máximo de 3 (três) dias úteis, ao seguinte endereço: INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA - COORDENAÇÃO-GERAL DE RECURSOS LOGÍSITICOS, AQUISIÇÕES E CONVÊNIOS - SRTVS Quadra 701, Bloco M, Asa Sul, Ed. Sede do Inep, 2º Andar. CEP: 70340-909- Brasília-DF ­ Tels: (61) 2022-3236 / 3240 / 3235 ­ Fax. 2022-3249. O envelope deverá ser identificado da seguinte maneira: PREGÃO ELETRÔNICO Nº 11/2010 ­ DTDIE/INEP RAZÃO SOCIAL E CNPJ PROPOSTA E DOCUMENTOS DE HABILITAÇÃO 12.6. Será considerada na apuração do prazo de encaminhamento do original da Proposta e da documentação, a data de postagem dos referidos documentos. 12.7. Os documentos encaminhados para habilitação deverão estar em nome do licitante, e, preferencialmente, com o número do CNPJ e o respectivo endereço. 12.8. Se o licitante for à própria matriz, todos os documentos deverão estar em nome da matriz. Sendo o licitante filial, todos os documentos deverão estar em nome da filial, exceto aqueles documentos que, pela própria natureza ou por força de Lei, comprovadamente somente possam ser emitidos em nome da matriz. 12.9. Os documentos necessários à habilitação poderão ser apresentados em original, ou qualquer processo de cópia autenticada através de cartório competente ou publicação em órgão da imprensa oficial. 12.10. Não serão aceitos "protocolos de entrega" ou "solicitação de documento" em substituição aos documentos requeridos no presente Edital e seus Anexos. 12.11. Documentos apresentados com a validade expirada acarretarão a inabilitação do proponente. Os documentos que não possuírem prazo de validade, somente serão aceitos com data não excedente a 30 (trinta) dias de antecedência da data prevista para apresentação das propostas, ressalvado aqueles que por sua característica não se sujeitam a prazo de validade. (Exemplo: Atestado de Capacidade Técnica). 12.12. Na assinatura do contrato, será exigida a comprovação das condições de habilitação consignadas no edital, as quais deverão ser mantidas pelo licitante durante a vigência do contrato.

15

12.13. O vencedor da licitação que não fizer a comprovação referida no subitem anterior ou quando, injustificadamente, recusar-se a assinar o contrato, poderá ser convocado outro licitante, desde que respeitada a ordem de classificação, para, após comprovados os requisitos habilitatórios e feita a negociação, assinar o contrato, sem prejuízos das multas previstas em edital e no contrato e das demais cominações legais. 12.14. Serão inabilitados os licitantes que não atenderem às exigências deste item. 13. DOS RECURSOS 13.1. Declarado o vencedor, qualquer licitante poderá, durante a sessão pública, de forma imediata e motivada, em campo próprio do sistema, manifestar sua intenção de recorrer, quando lhe será concedido o prazo de 3 (três) dias para apresentar as razões de recurso, ficando os demais licitantes, desde logo, intimados para, querendo, apresentarem contra-razões em igual prazo, que começará a contar do término do prazo do recorrente. 13.2. A falta de manifestação imediata e motivada do licitante quanto à intenção de recorrer, nos termos do subitem 13.1 deste Edital, importará na decadência desse direito, ficando o Pregoeiro autorizado a adjudicar o objeto ao licitante declarado vencedor (Art.26, § 1º, do Decreto nº 5.450/2005). 13.3. O acolhimento de recurso importará na invalidação apenas dos atos insuscetíveis de aproveitamento (Art.26, § 2º, do Decreto nº 5.450/2005). 13.4. Não serão conhecidos os recursos interpostos sem manifestação prévia no ato da sessão pública, em campo próprio do sistema e fora dos respectivos prazos legais, 13.5. Os autos do processo permanecerão com vista franqueada aos interessados, no SRTVS Quadra 701, Bloco M, Asa Sul, Ed. Sede do Inep, 2º Andar. CEP: 70340-909, em Brasília-DF, nos dias úteis, no horário de 09:00 às 12:00 horas e de 14:00 às 17:00 horas.

14. DA ADJUDICAÇÃO E HOMOLOGAÇÃO 14.1. A adjudicação do objeto deste certame caberá ao Pregoeiro, quando não houver recurso. Existindo recurso hierárquico, o objeto será adjudicado pela autoridade competente para o seu julgamento. 14.2. A homologação da licitação é de responsabilidade da autoridade competente e só poderá ser realizada depois da adjudicação do objeto ao licitante vencedor. 15. DAS CONDIÇÕES E PRAZO DE PAGAMENTO 15.1.Para a realização do pagamento, a Contratada deverá atender às exigências do art. 36 da IN SLTI nº 2/2008, além de fazer constar da nota fiscal/fatura emitida, sem

16

rasura, em letra legível, o nome do banco, o número da agência e da respectiva conta bancária. 15.2.O pagamento será realizado em moeda corrente, mediante emissão de ordem bancária para crédito em conta da licitante vencedora, até o 5º dia útil do mês subsequente ao do aceite da nota fiscal/fatura. 15.3.Para realização do pagamento será necessária a apresentação de Nota Fiscal pela Contratada, devidamente atestada pela Diretoria de Tratamento e Disseminação de Informações Educacionais - DTDIE. 15.4. No caso de incorreção na Nota Fiscal/Fatura, será restituída à empresa contratada para as correções solicitadas. O prazo de pagamento será contado a partir da data da regularização do serviço ou do documento fiscal, a depender do evento, não respondendo o INEP por quaisquer encargos resultantes de atrasos na liquidação dos pagamentos correspondentes. 15.5. Os pagamentos serão precedidos de Ordem de Serviço, conforme preceitua o item 6.9 do Termo de Referência; 15.6. Quando da ocorrência de eventuais atrasos de pagamento provocados exclusivamente pela Administração, o valor devido deverá ser acrescido de atualização financeira, e sua apuração se fará desde a data de seu vencimento até a data do efetivo pagamento, em que os juros de mora serão calculados à taxa de 0,5% (meio por cento) ao mês, ou 6% (seis por cento) ao ano, mediante aplicação das seguintes formulas:

I = (TX /100) 365 EM = I x N x VP, onde: I = Índice de atualização financeira; TX = Percentual da taxa de juros de mora anual; EM = Encargos moratórios; N = Número de dias entre a data prevista para o pagamento e a do efetivo pagamento; VP = Valor da parcela em atraso. 15.7. Na hipótese de pagamento de juros de mora e demais encargos por atraso, os autos devem ser instruídos com as justificativas e motivos, e ser submetidos à apreciação da autoridade superior competente, que adotará as providências para verificar se é ou não caso de apuração de responsabilidade, identificação dos envolvidos e imputação de ônus a quem deu causa.
17

15.8. A irregularidade Fiscal da Contratada ensejará a suspensão do pagamento, limitada a 30 (trinta) dias a contar do recebimento da notificação pela contratada, após o que, em não havendo regularização, o contrato poderá ser rescindido de pleno direito; 15.9. O INEP não acatará a negociação de duplicatas com bancos ou outras instituições financeiras; 15.10. Em cumprimento ao disposto em legislação vigente, a Coordenação-Geral de Orçamento, Finanças e Contabilidade do INEP reterá na fonte os tributos pertinentes às áreas federal, estadual, distrital ou municipal, e previdenciários que incidirem sobre os pagamentos que efetuar à Contratada, conforme o caso; 15.11. Poderá ser deduzida do valor da Nota Fiscal de Serviços/Fatura, multa imposta pelo INEP, se for o caso; 15.12. Antes de efetuar qualquer pagamento será verificada a regularidade da empresa contratada junto ao Sistema Unificado de Cadastro de Fornecedores ­ SICAF e ao CADIN, mediante consulta "on line", cujos documentos serão anexados ao processo de pagamento, para comprovação da regularidade das certidões: Certificado de Regularidade da Previdência, Certificado de Regularidade do FGTS, Certificado de Regularidade quanto à Dívida Ativa da União e Certificado de Regularidade de Débitos de Tributos e Contribuições Federais, Estaduais ou Municipais, bem como registro no CADIN. Caso alguma certidão estiver vencida, a Contratada terá o prazo de 5 (cinco) dias úteis para providenciar a regularização. 16. DAS SANÇÕES ADMINISTRATIVAS 16.1. Aquele que, convocado dentro do prazo de validade de sua proposta, não assinar o Contrato, deixar de entregar a documentação exigida no edital, apresentar documentação falsa, ensejar o retardamento da execução do seu objeto, não mantiver a proposta, ficará impedido, assegurado o direito à ampla defesa, de licitar e de contratar com a União e com o INEP, e será descredenciado no SICAF, pelo prazo de até cinco anos, nos termos do art. 28 do Decreto nº 5.450, de 31 de maio de 2005. 16.2. A recusa injustificada em assinar o contrato, dentro do prazo fixado pelo INEP, caracterizará o descumprimento total da obrigação assumida, ensejando a aplicação de multa ao adjudicatário de 5% (cinco por cento) sobre o valor previsto no Termo de Referência (Anexo I), parte integrante deste Edital. 16.3. Mensalmente, de acordo com a Nota Mensal de Avaliação (NMA) obtida, conforme subitem 6.2 do Termo de Referência, e garantida prévia defesa à Contratada, o Inep aplicará as seguintes penalidades: 16.3.1. Sempre que a NMA for maior ou igual a 6,0 e menor que 8,0 ­ a Contratada receberá advertência; 16.3.2. Sempre que a NMA for menor que 6,0 ­ a Contratada receberá multa de 2% (dois por cento) sobre o valor faturado no mês de sua aplicação, após o que será zerado o contador de advertências;
18

16.3.3. Sempre que a Contratada acumular duas advertências, receberá multa de 2% (dois por cento) sobre o valor faturado no mês de sua aplicação; 16.3.4. Quando a Contratada receber quatro multas no decorrer de um ano, estará caracterizada a inexecução contratual, ensejando a sua rescisão. 16.4. As deduções de valores relativos a multas serão efetuadas na fatura do mês subsequente à apuração da NMA que motivou a aplicação da penalidade financeira. 16.5. Se, ao término do contrato, após o pagamento da última fatura, ainda houver penalidade financeira a aplicar, o valor de tal penalidade será descontado da garantia contratual. 16.6. Os primeiros noventa dias após a emissão da primeira Ordem de Serviço do contrato serão considerados como período de adaptação e ajustes. Nesse período, a Nota Mensal de Avaliação (NMA) será calculada para fins de histórico, porém não incidirão penalidades. 16.7. Em caso de inexecução parcial ou total do objeto contratado, o Inep poderá aplicar as seguintes penalidades: 16.7.1. Multa de 10% (dez por cento) sobre o valor dos serviços não prestados, sem embargo de indenização dos prejuízos porventura causados ao Inep pela inexecução parcial ou total do contrato. A aplicação desta multa independe da multa moratória eventualmente aplicada ou em fase de aplicação, sendo aplicável cumulativamente. 16.7.2. Suspensão do direito de licitar e de contratar com a Administração Pública, pelo prazo de até 05 (cinco) anos, garantido o direito prévio da citação e da ampla defesa, enquanto perdurarem os motivos determinantes da punição ou até que seja promovida a reabilitação perante a própria autoridade que aplicou a penalidade. Essa penalidade também será aplicada ao licitante, que convocado dentro do prazo de validade da sua proposta, não celebrar o contrato, deixar de entregar a documentação exigida para o certame, apresentar documentação falsa, ensejar o retardamento da execução do seu objeto, não mantiver a proposta, falhar ou fraudar na execução do objeto pactuado, comportarse de modo inidôneo ou cometer fraude fiscal. 16.8. A multa por inexecução contratual e a suspensão do direito de licitar e de contratar com a Administração Pública poderão ser aplicadas juntamente com as dos subitens 16.3.1, 16.3.2, 16.3.3 e 16.3.4, descritas no item 16.3 deste Edital, facultada a defesa prévia do interessado, no respectivo processo, no prazo de 05 (cinco) dias úteis. 16.9. Se a multa for superior ao valor da garantia prestada, além da perda desta, responderá a Contratada pela sua diferença, a qual será descontada dos pagamentos devidos pela Administração ou, quando for o caso, cobrada judicialmente.

19

16.10. As penalidades serão obrigatoriamente registradas no SICAF, e, no caso de suspensão de licitar, o licitante deverá ser descredenciado por igual período, sem prejuízo das multas previstas no Edital e das demais cominações legais 16.11. As multas aplicadas poderão ser descontadas da garantia prevista no contrato, ou dos pagamentos, ou recolhidas à conta Única do Tesouro Nacional em favor do Inep, no prazo de 10(dez) dias corridos contados a partir do recebimento da notificação, ou ainda, se for o caso, poderão ser cobradas judicialmente, nos termos dos parágrafos 2º e 3º, do art. 86 da Lei 8.666/93. 16.12. As multas não têm caráter indenizatório e seu pagamento não eximirá a empresa contratada de ser acionada judicialmente pela responsabilidade civil derivada de perdas e danos junto ao INEP, decorrentes das infrações cometidas. 16.13. Mesmo em caso de rescisão, será aplicada a penalidade cabível. 17. DA CONTRATAÇÃO 17.1. Após a homologação da licitação o adjudicatário terá o prazo de 10 (dez) dias, contados a partir da data de convocação pelo Inep, podendo ser prorrogado uma vez, por igual período, quando solicitado pela parte e desde que ocorra motivo justificado e aceito pelo Órgão, na forma da minuta apresentada no Anexo III do Edital, sob pena de decair o direito à contratação. 17.2. Na assinatura do contrato, será exigida a comprovação das condições de habilitação consignadas no edital, as quais deverão ser mantidas pelo licitante durante a vigência do contrato. 17.3. O vencedor da licitação que não fizer a comprovação referida no subitem anterior ou quando, injustificadamente, recusar-se a assinar o contrato, poderá ser convocado outro licitante, desde que respeitada a ordem de classificação, para, após comprovados os requisitos habilitatórios e feita a negociação, assinar o contrato, sem prejuízos das multas previstas em edital e no contrato e das demais cominações legais. 17.3.1. Somente será considerada habilitada a licitante que houver preenchido os requisitos de habilitação na data da primeira sessão. 17.3.2. Os concorrentes remanescentes convocados na forma do subitem anterior se obrigam a atender a convocação e a assinar o Contrato/retirar a Nota de Empenho, no prazo fixado pelo INEP, ressalvados os casos de vencimento das respectivas propostas, sujeitando-se às penalidades cabíveis no caso de recusa ou de não atendimento das condições de habilitação. 17.4. A licitante vencedora deverá comprovar a qualificação profissional para a prestação dos serviços que trata o subitem 6.13 do Termo de Referência anexo I deste Edital. 17.5. A licitante vencedora deverá prestar garantia contratual, nos termos do art. 56 da Lei nº 8.666/93, no prazo máximo de 10 dias úteis contatos a partir da assinatura do
20

contrato. Como garantia da execução plena do seu objeto e fiel cumprimento do presente Contrato, a CONTRATADA prestará garantia correspondente a 5% (cinco por cento) do valor global do Contrato, na forma do art. 56, § 1°, da Lei n° 8.666/93. 17.6. A vigência do contrato será de 12 (doze) meses, prorrogáveis por iguais e sucessivos períodos, limitada a sessenta meses, conforme previsto no inciso II do art. 57, da Lei nº 8.666/1993. 17.7. A Contratada responderá civil, penal e administrativamente por qualquer prejuízo que venha a causar ao INEP, decorrente da execução imperfeita ou da inexecução parcial ou total do contrato. 18. DA ESTIMATIVA DE CUSTOS E DA DOTAÇÃO ORÇAMENTÁRIA A estimativa de custo foi realizada de acordo os métodos estipulados no item 7 do Termo de Referência anexo I deste Edital. 18.1. De acordo com pesquisas de preços efetuadas no mercado, o custo médio total da contratação foi estimado em R$ 15.947.600,00 (quinze milhões, novecentos e quarenta e sete mil e seiscentos reais), conforme consta no detalhamento do item 7 do Termo de Referência anexo I deste Edital. 18.2. O recurso orçamentário para atender a despesa com a manutenção está previsto no Orçamento Geral do INEP ­ Ação 2272 ­ PTRES 021112. 19. DAS DISPOSIÇÕES GERAIS 19.1. A autoridade competente para a aprovação do procedimento licitatório somente poderá revogá-lo em face de razões de interesse público decorrentes de fato superveniente devidamente comprovado, pertinente e suficiente para justificar tal conduta, devendo anulá-lo por ilegalidade, de ofício ou por provocação, mediante ato escrito e devidamente fundamentado, nos termos do art. 18 do Decreto nº 3.555/00 e art. 29 do Decreto nº 5.450/05, c/c art. 49 da Lei nº 8.666/93. 19.2. Havendo indícios de conluio entre os licitantes ou de qualquer outro ato de má-fé, o INEP comunicará os fatos verificados à Secretaria de Direito Econômico do Ministério da Justiça e ao Ministério Público Federal, para as providências devidas. 19.3. É faculdade do Pregoeiro ou da Autoridade Superior, em qualquer etapa da licitação, a promoção de diligência destinada a esclarecer ou complementar a instrução do processo. 19.4. Fica assegurado ao INEP, o direito de no interesse da Administração, anular ou revogar, a qualquer tempo, no todo ou em parte, a presente licitação, dando ciência aos participantes, na forma da legislação vigente. 19.5. Os licitantes assumem todos os custos de preparação e apresentação de suas propostas e o INEP não será, em nenhum caso, responsável por esses custos, independentemente da condução ou do resultado do processo licitatório.
21

19.6. Os serviços e bens deverão ser entregues com todas as despesas por conta exclusiva da contratada e quaisquer ações civis/penais/trabalhistas ou de qualquer natureza que decorram de ato ou omissão da prestação de seus serviços serão de exclusiva responsabilidade da empresa contratada, bem assim como todas as despesas de entrega dos referidos bens no endereço indicado da contratada. 19.7. Os proponentes são responsáveis pela fidelidade e legitimidade das informações e dos documentos apresentados em qualquer etapa da licitação. 19.8. As normas que disciplinam este Pregão Eletrônico serão sempre interpretadas em favor da ampliação da disputa entre os interessados, sem comprometimento da segurança da futura prestação dos serviços. 19.9. Este Edital será fornecido a qualquer interessado, através do sítio http://www.comprasnet.gov.br. 19.10. A homologação do resultado desta licitação, não implicará em direito à contratação do objeto licitado, no todo ou em parte. 19.11. Como condição para emissão da Nota de Empenho, será verificada a regularidade do adjudicatário, vencedor da licitação, junto ao SICAF, SIAFI e CADIN. 19.12. Aos casos omissos aplicar-se-ão as demais disposições constantes da Lei nº 10.520, de 17 de julho de 2002, dos Decretos nºs. 3.555, de 8 de agosto de 2000, 3.693, de 20 de dezembro de 2000, 5.450, de 31 de maio de 2005, 3.784, de 6 de abril de 2001, IN-MPOG nº 02 de 30 de abril de 2008, e suas alterações posteriores, IN-MPOG nº 4, de 19 de maio de 2008, Lei Complementar nº 123/2006, Decreto nº 6.204/2007, Lei nº 8.078 de 11/09/1990, e subsidiariamente a Lei nº 8.666/93 e suas alterações posteriores. 19.13. A DTDIE exercerá a fiscalização da execução do contrato por meio de servidor público habilitado e nomeado. 19.14. As disposições e especificações contidas neste Edital serão parte integrante do contrato, devendo ser observadas e atendidas em sua plenitude, cabendo a aplicação de penalidades no descumprimento de qualquer dos seus itens e no que couber a INMPOG nº 02, de 30 de abril de 2008, e suas alterações posteriores, e IN-MPOG nº 4, de 19 de maio de 2008. 19.15. A existência de Fiscalização não diminui ou atenua a responsabilidade da Contratada pela execução de qualquer serviço. 19.16. A Fiscalização deverá recusar qualquer serviço executado fora das condições contratuais ou do bom padrão de acabamento. 19.17. O INEP poderá, a seu exclusivo critério, solicitar à Contratada a substituição de qualquer profissional vinculado a essa, cuja atuação, permanência e/ou comportamento sejam julgados prejudiciais, inconvenientes ou insatisfatórios à disciplina da repartição ou ao interesse da Administração Pública.

22

19.18. Caso haja peças a serem substituídas, estas deverão ser novas e de fabricação recente, podendo a Fiscalização exigir as notas fiscais e comprovantes de aquisição. 19.19. Se julgar necessário, o INEP poderá solicitar da Contratada a apresentação de informação por escrito dos locais de origem dos itens adquiridos ou de certificados de ensaios relativos aos mesmos. Os ensaios e as verificações serão providenciados pela Contratada sem ônus para o INEP e executados por laboratório aprovado pelo INEP. 19.20. Não será permitida a subcontratação dos serviços objeto deste Termo de Referência por parte da empresa vencedora. 19.21. Fica eleito o Foro da Justiça Federal, Seção Judiciária do Distrito Federal DF, para solucionar quaisquer litígios oriundos desta licitação.

Brasília, 25 de maio de 2010.

LUIZ AUGUSTO LUCINDA Pregoeiro do INEP

23

MINISTÉRIO DA EDUCAÇÃO INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA ­ INEP DIRETORIA DE GESTÃO E PLANEJAMENTO COORDENAÇÃO-GERAL DE RECURSOS LOGÍSITICOS, AQUISIÇÕES E CONVÊNIOS SRTVS Quadra 701, Bloco M, Asa Sul, Ed. Sede do Inep, 2º Andar. CEP: 70340-909 CNPJ. 01.678.363/0001-43 (61) 2022-3236 / 3240 / 3235 ­ Fax. 2022-3249 e-mail: pregao@inep.gov.br

PREGÃO ELETRÔNICO Nº 11/2010 ­ DTDIE/ INEP

ANEXO "I" TERMO DE REFERÊNCIA

24

MINISTÉRIO DA EDUCAÇÃO INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA DIRETORIA DE TECNOLOGIA E DISSEMINAÇÃO DE INFORMAÇÕES EDUCACIONAIS COORDENAÇÃO-GERAL DE SISTEMAS DE INFORMÁTICA

TERMO DE REFERÊNCIA

1. APRESENTAÇÃO
Este TERMO DE REFERÊNCIA tem como objetivo definir condições para a contratação da prestação de serviços técnicos na área de tecnologia da informação para o Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira ­ Inep. 1.1. Referencial normativo adotado Este TERMO DE REFERÊNCIA foi elaborado à luz dos seguintes normativos: a) Lei nº 8.666/1993 ­ Regulamenta o art. 37, inciso XXI, da Constituição Federal, institui normas para licitações e contratos da Administração Pública e dá outras providências; b) Lei nº 10.520/2002 ­ Institui, no âmbito da União, Estados, Distrito Federal e Municípios, nos termos do art. 37, inciso XXI, da Constituição Federal, modalidade de licitação denominada pregão, para aquisição de bens e serviços comuns, e dá outras providências; c) Decreto n.º 3.555/2000 ­ Especifica que são licitáveis mediante pregão, na área de informática, os serviços de apoio como manutenção de equipamentos e digitação, o que é bem distinto do objeto da licitação em tela; d) Instrução Normativa SLTI nº 2/2008 ­ Dispõe sobre regras e diretrizes para contratação de serviços continuados ou não. Essa norma aplica-se subsidiariamente à IN/SLTI 4/2008; e) Instrução Normativa SLTI nº 4/2008 ­ Dispõe sobre o processo de contratação de serviços de Tecnologia da Informação pela Administração Pública Federal direta, autárquica e fundacional; f) Acórdão nº 2.533/2008 ­ Plenário ­ Esclarece pontos relevantes e orienta sobre a contratação de empresa de desenvolvimento de sistemas;

g) Acórdão 2.471/2008 ­ Plenário ­ "Terceirização na Administração Pública Federal", sub-tema "Terceirização em Tecnologia da Informação"; h) Acórdão 2.094/2007 ­ Plenário ­ Define que a licitação na modalidade Pregão é admitida para a aquisição de softwares desde que classificados como "bem comum", nos termos da definição contida no parágrafo único do art. 1º da Lei 10.520/2002; i) j) Acórdão nº 786/2006 ­ Plenário ­ Monitoramento de licitação para contratação de serviços de informática nas áreas de desenvolvimento de sistemas e acompanhamento de projetos; Acórdão 313/2004 ­ Plenário ­ Manifestou entendimento de que a Lei nº 10.520/2002 revogou as disposições contrárias a ela contidas no Decreto nº 1.070/1994, onde exigia "técnica e preço" para toda e qualquer licitação para contratação de "bens e serviços". Também orienta o administrador público analisar onde a modalidade pregão é aplicável;

k) Acórdão nº 1.558/2003 ­ TCU ­ 2ª Câmara ­ Orienta, quando da "contratação de serviços técnicos de informática (gerência estratégica, desenvolvimento de software, gerenciamento de

25

dados, administração de rede, suporte a usuários, manutenção de hardware, operação de microcomputadores e digitação), no sentido de que o processo de contratação especifique, licite e contrate separadamente os referidos serviços, utilizando-se o parcelamento ou a adjudicação por itens como forma de obtenção do melhor preço entre os licitantes, conforme preceituado no art. 23, § 1°, da lei 8.666/93"; l) Acórdão nº 1099/2008 ­ Plenário ­ Manifestou entendimento de que, havendo dependência entre os serviços que compõem o objeto licitado, a opção pelo não-parcelamento mostra-se adequada, no mínimo do ponto de vista técnico;

m) Nota Técnica nº 01/2008 ­ SEFTI/TCU ­ Estabelece o conteúdo mínimo do projeto básico ou termo de referência para contratação de serviços de tecnologia da informação ­ TI; n) Nota Técnica nº 02/2008 ­ SEFTI/TCU ­ Estabelece o uso do pregão para aquisição de bens e serviços de tecnologia da informação.

1.2. Lista de acrônimos em uso no texto APF ASP CASE CFPS CGSI CMMI COBIT CPM CSM CSS DTDIE EGTI E-MAG ENADE ENCCEJA ENEM E-PING HTML IES IFPUG IN Inep INPI ISO ITIL MEC MGDS MP MPS.BR NBR NESMA ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ Análise de Pontos de Função; Active Server Pages; Computer­Aided Software Engineering; Certified Function Point Specialist; Coordenação-Geral de Sistemas de Informação; Capability Maturity Model Integration; Control Objectives For Information and Related Technology ; Counter Practices Manual; Certified Scrum Máster; Cascade Style Sheet; Diretoria de Tecnologia e Disseminação de Informações Educacionais; Estratégia Geral de Tecnologia da Informação; Modelo de Acessibilidade de Governo Eletrônico; Exame Nacional de Desempenho de Estudantes; Exame Nacional para Certificação de Competências de Jovens e Adultos; Exame Nacional do Ensino Médio; Padrões de Interoperabilidade de Governo Eletrônico; Hyper Text Markup Language; Instituição de Ensino Superior; International Function Point Users Group; Instrução Normativa; Instituto Nacional de Pesquisas Educacionais Anísio Teixeira; Instituto Nacional de Propriedade Intelectual; International Organization for Standardization ; Information Technology Infrastructure Library; Ministério da Educação; Metodologia de Gestão e Desenvolvimento de Sistemas; Ministério do Planejamento, Orçamento e Gestão; Melhoria de Processos do Software Brasileiro; Norma da Associação Brasileira de Normas Técnicas (ABNT); Netherlands Software Metrics Association;

26

NMA O&M OS PDTI PF PHP PMBOK PMI PMP RE SAEB SCBCD SCDJWS SCJD SCJP SCWCD SEFTI SICAF SINAES SISP SLTI SQL TCU TI TIC UML UP VB XML XSL ZCE

­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­ ­

Nota Mensal de Avaliação; Organização e Métodos; Ordem de Serviço; Plano Diretor de Tecnologia da Informação; Ponto de Função; Hypertext Preprocessor; Project Management Body of Knowledge; Project Management Institute; Project Management Professional; Relação de Empregados; Sistema de Avaliação da Educação Básica; Sun Certified Business Component Developer; Sun Certified Developer For Java Web Services; Sun Certified Java Developer; Sun Certified Java Programmer; Sun Certified Web Component Developer; Secretaria de Fiscalização de Tecnologia da Informação; Sistema Integrado de Cadastro de Fornecedores; Sistema Nacional de Avaliação da Educação Superior; Sistema de Administração dos Recursos de Informação e Informática; Secretaria de Logística e Tecnologia da Informação; Structured Query Language; Tribunal de Contas da União; Tecnologia da Informação; Tecnologias da Informação e Comunicação; Unified Modeling Language; Unified Process; Visual Basic; Extensible Markup Language; Extensible Stylesheet Language; Zend Certified Engineer.

2. DEFINIÇÃO DO OBJETO
O objeto desta contratação é a prestação de serviços técnicos de Tecnologia da Informação, compreendendo o desenvolvimento e manutenção de sistemas de informação, de acordo com as especificações, padrões técnicos de desempenho e qualidade estabelecidos pelo INEP, mediante ordens de serviço dimensionadas pela métrica de pontos de função, em regime de fábrica de software, limitada ao quantitativo máximo de 20.000 (vinte mil) pontos de função anuais, sem garantia de consumo mínimo.

27

3. FUNDAMENTAÇÃO DA CONTRATAÇÃO
3.1. Justificativa O Inep é uma autarquia federal vinculada ao Ministério da Educação, cuja missão é promover estudos, pesquisas e avaliações sobre o Sistema Educacional Brasileiro, com o objetivo de subsidiar a formulação e implementação de políticas públicas para a área educacional a partir de parâmetros de qualidade e equidade, bem como produzir informações claras e confiáveis aos gestores, pesquisadores, educadores e público em geral. Para gerar seus dados e estudos educacionais o Inep realiza levantamentos estatísticos e avaliativos em todos os níveis e modalidades de ensino como, por exemplo:    Censo Escolar: levantamento anual de informações estatístico-educacionais de âmbito nacional. Censo Superior: coleta anual de uma série de dados do ensino superior no País, incluindo cursos de graduação, presenciais e à distância. Avaliação dos Cursos de Graduação: é um procedimento utilizado pelo MEC para o reconhecimento ou renovação de reconhecimento dos cursos de graduação, representando uma medida necessária para a emissão de diplomas. Avaliação Institucional: compreende a análise dos dados e informações prestadas pelas Instituições de Ensino Superior no Formulário Eletrônico e a verificação, in loco, da realidade institucional, dos seus cursos de graduação e de pós-graduação, da pesquisa e da extensão. Sinaes: Criado pela Lei n° 10.861, de 14 de abril de 2004, o Sinaes é o novo instrumento de avaliação superior do MEC/Inep. Ele é formado por três componentes principais: a avaliação das instituições, dos cursos e do desempenho dos estudantes. ENEM: exame de saída facultativo aos que já concluíram e aos concluintes do ensino médio. ENCCEJA: é um instrumento de avaliação que mede as competências e habilidades de jovens e adultos, residentes no Brasil e no exterior, em nível de conclusão do Ensino Fundamental. SAEB: é uma pesquisa realizada por amostragem a cada dois anos com os alunos do ensino fundamental e médio.





  

Além dos levantamentos estatísticos e das avaliações, o Inep promove encontros para discutir os temas educacionais e disponibiliza também outras fontes de consulta sobre educação. O Inep conta hoje com um legado de 26 (vinte e seis) sistemas de informação, construídos em diversas tecnologias como Delphi, ASP, PHP, Java e Joomla!, cuja manutenção é provida por equipe composta de servidores do Inep, consultores de organismos internacionais e colaboradores terceirizados, estes últimos alocados por força de contratos de alocação de mão-de-obra com as empresas Cast Informática S/A e Poliedro Informática, Consultoria e Serviços Ltda. Além da manutenção do legado, essa equipe também atua desenvolvendo novos sistemas para atender às demandas das áreas de negócio. O momento atual da administração pública necessita de um maior controle da governança de TI, necessidade essa exaustivamente relatada na jurisprudência do Tribunal de Contas da União. Tal jurisprudência acabou por fomentar a origem da Instrução Normativa SLTI/MP Nº 4/2008, publicada pela Secretaria de Logística e Tecnologia da Informação do Ministério do Planejamento, Orçamento e Gestão, para disciplinar os processos de contratação de serviços de TI e de gestão dos respectivos contratos.

28

A IN 4/2008 disciplina a contratação a partir da adoção de uma métrica que permita a vinculação dos pagamentos ao tamanho dos serviços solicitados e entregues, o que se contrapõe à situação atual, na qual os pagamentos são realizados com base na quantidade de homens/hora necessários para a realização dos serviços solicitados. Essa mudança de paradigma levou à necessidade de substituição dos contratos atuais, que estão baseados em homens/hora e postos de trabalho.

3.2. Quantidade a ser contratada Serão contratados 20.000 (vinte mil) pontos de função por ano, para cobrir as demandas de desenvolvimento de novos sistemas e de manutenção nos sistemas existentes. O método utilizado para estimar a quantidade a ser contratada encontra-se documentado no item 6.4 ­ Estimativa do Volume de Serviços.

3.3. Resultados esperados De acordo com o item 3.2 dos princípios norteadores de governança do Sistema de Administração dos Recursos de Informação e Informática do Governo Eletrônico, dispostos na Estratégia Geral de TI para 2010: "O exercício de atividades de TI no âmbito do SISP deve contemplar basicamente a gestão, sendo recomendável que atividades de execução se façam na forma de contratação de serviços, preservados os casos em que condições especiais exijam execução por servidores públicos e os órgãos que possuam carreira com quadros específicos para área de TI". Como membro do SISP, o Inep espera obter, com esta contratação, o total alinhamento com as orientações emanadas da EGTI-2010 e com a legislação vigente, no que diz respeito à substituição dos contratos de postos de trabalho e homens/hora, de difícil aferição dos resultados. Com esta contratação, os recursos humanos atualmente disponíveis no quadro de servidores da DTDIE serão melhor aproveitados em atividades relacionadas ao negócio da Instituição como, por exemplo: mapeamento e modelagem dos processos de negócio diretamente relacionados aos sistemas que serão desenvolvidos ou que sofrerão manutenção, detalhamento das demandas de manutenção, levantamento do escopo preliminar dos projetos, avaliação da qualidade dos produtos executados e validação das estimativas realizadas pela pessoa jurídica contratada. Além disso, serão também responsáveis por auxiliar o Gestor do Contrato no Inep durante a gestão das Ordens de Serviço entregues à contratada. 3.4. Alinhamento estratégico No Plano Diretor de TI do Inep encontram-se, na perspectiva do cliente interno, os seguintes objetivos estratégicos:  Simplificar o cotidiano nas rotinas de trabalho estratégicas, táticas e operacionais; e  Prover recursos de TIC que viabilizem a execução das atividades-fins de cada Diretoria. Na perspectiva do cliente externo encontram-se os seguintes objetivos estratégicos:  Prospectar e desenvolver serviços de governo eletrônico;  Disponibilizar os serviços de governo eletrônico; e  Assegurar dados e informações educacionais qualificadas à sociedade.

29

Para a consecução desses objetivos, foi identificada uma iniciativa estratégica que trata do alinhamento dos recursos de tecnologia da informação e comunicações às necessidades do negócio. Essa iniciativa foi desmembrada em várias ações, dentre as quais citamos as seguintes:  Evolução e manutenção dos atuais sistemas;  Desenvolvimento de sistemas para a área meio. Essas duas ações fornecem o alinhamento estratégico desta contratação, na medida em que contemplam todas as necessidades relacionadas ao desenvolvimento e à manutenção de sistemas, que, uma vez satisfeitas, contribuirão para o alcance da missão do Inep, que é a de promover estudos, pesquisas e avaliações sobre o Sistema Educacional Brasileiro, com o objetivo de subsidiar a formulação e implementação de políticas públicas para a área educacional, a partir de parâmetros de qualidade e equidade, bem como produzir informações claras e confiáveis aos gestores, pesquisadores, educadores e público em geral.

4. REQUISITOS DOS SERVIÇOS
Os serviços contratados serão regidos pelos seguintes requisitos:  Execução sob demanda por Ordens de Serviço, mensuradas pela técnica de Análise de Pontos de Função descrita no Guia de Contagem de Pontos de Função do Inep, anexo a este TERMO DE REFERÊNCIA; Utilização da infraestrutura computacional do Inep, descrita em documento anexo a este TERMO DE REFERÊNCIA; Execução disciplinada pela Metodologia de Gestão e Desenvolvimento de Sistemas do Inep, descrita em documento anexo a este TERMO DE REFERÊNCIA; Atendimento aos seguintes padrões definidos pelo Inep e descritos em documentos anexos a este TERMO DE REFERÊNCIA: o o o o  Guia de Desenvolvimento de Sistemas; Guia de Arquitetura (para Java e PHP); Guia de Segurança da Informação para Desenvolvimento de Sistemas; e Guia de Banco de Dados.

  

Garantia de 1 (um) ano após o aceite definitivo da Ordem de Serviço.

5. MODELO PARA PRESTAÇÃO DOS SERVIÇOS 5.1. Descrição da solução de TI
A solução de TI a ser contratada compõe-se de serviços de desenvolvimento de sistemas, para produção de novos sistemas e manutenção do parque legado de sistemas do Inep. Os serviços serão prestados preferencialmente no ambiente do Inep, podendo eventualmente ser prestados no ambiente da pessoa jurídica contratada.

30

A solicitação e autorização dos serviços dar-se-á sempre por meio de Ordens de Serviço, cujo ciclo de vida será orientado, padronizado e conduzido pela Metodologia de Gestão e Desenvolvimento de Sistemas do Inep. A métrica adotada para esta contratação é a APF ­ Análise de Pontos de Função, estando previstas duas modalidades de medição:   Medição estimada ­ realizada pela aplicação da técnica de contagem estimativa NESMA, descrita no Guia de Contagem de Pontos de Função do Inep; Medição detalhada ­ realizada pela aplicação da técnica de contagem descrita no guia CPM do IFPUG.

O valor do ponto de função proposto pela licitante deverá ser capaz de cobrir todos os custos necessários à execução dos serviços, conforme as etapas previstas pela Metodologia de Gestão e Desenvolvimento de Sistemas do Inep, anexa ao presente Termo de Referência. Todas as medições realizadas pela CONTRATADA somente serão aceitas após passarem por validação pelo Inep. Uma Ordem de Serviço só poderá ser aceita e liberada para pagamento após o aceite dos pontos de função da medição detalhada, realizada após a homologação do serviço pela área de negócio cliente. A fase de iniciação prevista na MGDS (correspondente ao detalhamento das demandas/levantamento do escopo dos projetos) será realizada preferencialmente por servidores do Inep. Porém, poderá haver casos em que, por razões diversas, o Órgão decida que essa fase será realizada pela CONTRATADA. Nesses casos, será emitida uma Ordem de Serviço específica para essa fase, a qual remunerará a CONTRATADA em 5% (cinco por cento) da quantidade de pontos de função estimada para toda a demanda/projeto, após validação e aceite pelo Inep. Os serviços realizados pela CONTRATADA serão cobertos por garantia de 1 (um) ano após o aceite definitivo da Ordem de Serviço original. Durante o período de garantia, os defeitos que porventura sejam identificados farão parte de uma Ordem de Serviço de Garantia e não gerarão ônus para o Inep.

5.2. Soluções Similares na Administração Pública
A contratação objeto deste TERMO DE REFERÊNCIA toma como exemplo a experiência do Ministério da Agricultura, Pecuária e Abastecimento, do Ministério da Justiça e do Conselho Nacional de Justiça, no que diz respeito ao uso da métrica de pontos de função para a medição, tanto do desenvolvimento de novos sistemas, quanto da manutenção nos sistemas existentes.

5.3. Alternativas de Mercado
Devido ao contexto das necessidades do Inep, cujos sistemas devem atender a um negócio muito especializado, não estão disponíveis soluções que possam atender a essa especificidade, obrigando o Órgão a desenvolver seus próprios aplicativos. No entanto, o Inep utiliza-se de plataforma de software livre para a produção de seus sistemas.

5.4. Aderência às Políticas Governamentais na área de TI
Os sistemas que venham a ser desenvolvidos/mantidos pelo instrumento oriundo deste processo de contratação deverão aderir ao Modelo de Acessibilidade em Governo Eletrônico ­ e-MAG, e, sempre que possível, aos Padrões de Interoperabilidade de Governo Eletrônico ­ e-PING.

31

5.5. Parcelamento do Objeto
Diversos acórdãos do TCU, como os de nº 1331/2003 e 1327/2006, prevêem que os serviços contratados devem ser divididos em tantas parcelas quantas se comprovarem técnica e economicamente viáveis, tendo em vista o melhor aproveitamento dos recursos disponíveis no mercado e a ampliação da competitividade. No acórdão nº 1099/2008, o ministro-relator Marcos Vinícios Vilaça, sustenta que a manutenção adaptativa e o desenvolvimento de sistema não devam ser parcelados, porquanto aquela tem como finalidade ajustar os sistemas existentes a um novo ambiente operacional, ou seja, determinados sistemas preexistentes, que devam continuar ativos, ficarão incompatíveis com os novos softwares que estão sendo contratados, necessitando, portanto, de intervenções para conformação. Segundo o Ministro-Relator, "É de se admitir, por evidente, que quem terá plena capacidade para o serviço de manutenção adaptativa será a mesma empresa contratada para desenvolver os novos softwares, que os conhecerá a fundo. Assim, não há como sustentar o parcelamento". No caso da manutenção corretiva, deve-se destacar que não haverá superposição dela com a garantia dos novos sistemas, haja vista que está claramente posto no TERMO DE REFERÊNCIA que os pontos de função utilizados para a manutenção corretiva em garantia não serão cobrados ao Inep pela CONTRATADA. Assim, a manutenção corretiva estará vinculada a novo software após o prazo de garantia ou às novas funcionalidades desenvolvidas nos sistemas antigos. Para os novos sistemas, sustenta o Ministro-Relator, "...parece-me natural que a empresa que os desenvolveu terá mais habilidade para a correção de falhas. Restariam os sistemas antigos, que, de fato, poderiam ser mantidos por empresa diversa. Entretanto, por uma questão de ganho de escala, penso que o parcelamento apenas por conta dessa fração seria irracional." Nesse passo, o MinistroRelator, no acórdão 1099/2008, conclui que, técnica e economicamente, são inviáveis os parcelamentos, nesses casos, para efeito do que prescreve o § 1º. do art. 23 da lei 8.666/93. Com base no exposto, o objeto desta contratação não será parcelado em licitações individuais distintas, para desenvolvimento e manutenção de sistemas, conforme previsto no Art. 23, § 1º da lei nº 8.666/1993.

5.6. Local de Execução dos Serviços
Os serviços serão executados nas instalações do Inep, no Setor de Rádio e TV Sul, Quadra 701, Bloco M, Edifício Sede do Inep, em Brasília ­ DF. Eventualmente, o Inep poderá solicitar a execução de serviços fora de suas instalações, no ambiente da CONTRATADA.

5.7. Forma de Execução dos Serviços
A forma de execução deste contrato será a execução indireta, com medição por resultados. Os serviços serão remunerados com base no preço unitário do ponto de função do lance vencedor do pregão, multiplicado pelo total de pontos de função da Ordem de Serviço. Todas as regras de condução da execução dos serviços estão descritas na Metodologia de Gestão e Desenvolvimento de Sistemas do Inep, anexa ao presente TERMO DE REFERÊNCIA.

32

6. ELEMENTOS PARA GESTÃO DO CONTRATO 6.1. Critérios de Mensuração dos Serviços
Para a medição dos serviços será adotada a métrica de pontos de função, conforme descreve o Guia de Contagem de Pontos de Função do Inep, anexo a este TERMO DE REFERÊNCIA, considerando que o valor do PF deverá cobrir todas as fases dos ciclos de vida do desenvolvimento e da manutenção de software previstos na MGDS do Inep. As manutenções serão cobertas por um conjunto de redutores de pontos de função, correspondentes à estratificação dos tipos de manutenção, evitando assim o pagamento de 100% do valor em pontos de função da funcionalidade mantida, a cada vez que tal funcionalidade sofrer manutenção. Tal conjunto de redutores está descrito no Guia de Contagem de Pontos de Função do Inep. O custo dos serviços será computado por OS individual e será calculado pelo produto entre o tamanho líquido da OS em pontos de função e o valor contratado por ponto de função (tamanho em PF x valor do PF). O tamanho líquido da OS é obtido a partir da aplicação, sobre o tamanho funcional do serviço (em PFs), dos redutores previstos no Guia de Contagem de Pontos de Função do Inep (no que se aplicar).

6.2. Metodologia de Avaliação
O Inep realizará mensalmente a avaliação do nível de atendimento dos serviços contratados, calculando a NMA (Nota Mensal de Avaliação) com base na seguinte fórmula: NMA = 10 ­ ( de pontos perdidos) A aferição dos pontos perdidos será realizada a partir da avaliação dos critérios dispostos na tabela abaixo:

Item 01

Critério Avaliado Se o processo de avaliação da qualidade resultar em nãoconformidades, a lista de não-conformidades será
1

Resultado 0,5 ponto perdido na NMA, para cada avaliação insatisfatória.

encaminhada à CONTRATADA, para providências. Será contada uma avaliação insatisfatória para cada lista de não-conformidades encaminhada à CONTRATADA. 02 Se o processo de homologação do(s) sprint(s)/serviço(s)
2

0,5 ponto perdido na NMA, para cada avaliação

resultar em não-conformidades, a lista de não-conformidades será encaminhada à CONTRATADA, para providências.

1

O processo de avaliação da qualidade corresponde às atividades que resultarão na homologação pela

área de TI.
2

O processo de homologação do(s) sprint(s)/serviço(s) corresponde às atividades que resultarão na

homologação pelo cliente.

33

Será contada uma avaliação insatisfatória para cada lista de não-conformidades encaminhada à CONTRATADA. 03 Quando for identificada ausência de profissional da

insatisfatória.

1 ponto perdido na NMA, para cada avaliação insatisfatória.

CONTRATADA que venha a comprometer a qualidade do serviço, o fato será devidamente comunicado à

CONTRATADA. Se ocorrer essa comunicação, será considerada uma avaliação insatisfatória para cada ocorrência. 04 Se o processo de avaliação da qualidade resultar em nãoconformidades, a CONTRATADA terá um prazo de 48 (quarenta e oito) horas corridas para resolver todos os itens da lista de não-conformidades enviadas pelo Inep. Será contada uma avaliação insatisfatória sempre que a resolução da lista de não-conformidades não for realizada dentro do prazo estabelecido. 05 Se o processo de homologação do(s) sprint(s)/serviço(s) resultar em não-conformidades, a CONTRATADA terá um prazo de 24 (vinte e quatro) horas corridas para resolver todos os itens da lista de não-conformidades enviadas pelo Inep.

1 ponto perdido na NMA, para cada avaliação insatisfatória.

1 ponto perdido na NMA, para cada avaliação insatisfatória.

Será contada uma avaliação insatisfatória sempre que a resolução da lista de não-conformidades não for realizada dentro do prazo estabelecido.
06 Será avaliado o cumprimento do cronograma especificado para cada uma das Ordens de Serviço aceitas no mês. Será contada uma avaliação insatisfatória para cada ocorrência de não cumprimento de cronograma. 07 Quando for detectada a necessidade de substituição de profissional da CONTRATADA em função do desempenho inadequado nas atividades dos serviços contratados, o fato será devidamente fundamentado e comunicado à 1 ponto perdido na NMA, para cada avaliação insatisfatória. 0,1 ponto perdido na NMA, para cada avaliação insatisfatória.

CONTRATADA. Mensalmente será apurada a quantidade de solicitações de substituição de profissionais encaminhadas pelo Inep à CONTRATADA.

34

Será

contada

uma

avaliação

insatisfatória

para

cada

profissional cuja substituição tenha sido solicitada no mês de referência. 08 Mensalmente será verificada a incidência de casos de perda de arquivos e dados do banco de dados, por parte dos profissionais da CONTRATADA alocados aos serviços desta contratação. Será contada uma avaliação insatisfatória para cada caso identificado e notificado à CONTRATADA. 09 Mensalmente será verificada a quantidade de profissionais substituídos por iniciativa da CONTRATADA, por qualquer que seja o motivo, exceto os casos previstos na legislação (férias, auxílio doença, auxílio maternidade ou qualquer outro benefício previsto em lei) ou os casos em que a substituição tenha sido solicitada pelo Inep, conforme item 07 acima. Será contada uma avaliação insatisfatória para cada 0,5 ponto perdido na NMA, para cada avaliação insatisfatória. 1 ponto perdido na NMA, para cada avaliação insatisfatória.

profissional substituído. 10 Mensalmente será verificada a ocorrência de danos ao patrimônio do Inep, por parte dos profissionais da 0,5 ponto perdido na NMA, para cada avaliação insatisfatória.

CONTRATADA alocados aos serviços desta contratação. Será contada uma avaliação insatisfatória para cada caso identificado e notificado à CONTRATADA, para os devidos ressarcimentos. 11 Mensalmente será verificada a ocorrência de reclamações sobre comportamento inadequado ou desobediência às normas internas do Inep por profissionais da CONTRATADA. Será contada uma avaliação insatisfatória para cada caso identificado e notificado à CONTRATADA. 12 Quando for identificado o não cumprimento do prazo estipulado pelo Inep nos subitens 11 e/ou 12 do item 6.14 ­ Obrigações da Contratada deste TERMO REFERÊNCIA, o fato será devidamente notificado à CONTRATADA. Será contada uma avaliação insatisfatória para cada caso identificado e notificado à CONTRATADA.

0,5 ponto perdido na NMA, para cada avaliação insatisfatória.

1 ponto perdido na NMA, para cada avaliação insatisfatória.

35

Mensalmente, antes do aceite da nota fiscal, o Gestor do Contrato no Inep encaminhará ao Preposto da CONTRATADA, pela via acertada na reunião de abertura do contrato, um relatório contendo, no mínimo, os itens a seguir: Nota Mensal de Avaliação (NMA) e descritivo do monitoramento dos critérios de avaliação que contribuíram para essa nota; Penalidades aplicadas conforme a NMA obtida (se houver); Recomendações técnicas, administrativas e gerenciais para o próximo período e demais informações relevantes para a gestão contratual.

6.3. Penalidades 6.3.1. Nota Mensal de Avaliação
Mensalmente, de acordo com a Nota Mensal de Avaliação (NMA) obtida, e garantida prévia defesa à CONTRATADA, o Inep aplicará as seguintes penalidades à CONTRATADA: 1. Sempre que a NMA for maior ou igual a 6,0 e menor que 8,0 ­ a CONTRATADA receberá advertência; 2. Sempre que a NMA for menor que 6,0 ­ a CONTRATADA receberá multa de 2% (dois por cento) sobre o valor faturado no mês de sua aplicação; 3. Sempre que a CONTRATADA acumular duas advertências, receberá multa de 2% (dois por cento) sobre o valor faturado no mês de sua aplicação. Após a devida quitação, o contador de advertências será zerado; 4. Quando a CONTRATADA receber quatro multas no decorrer de um ano, estará caracterizada a inexecução contratual, ensejando a sua rescisão. As deduções de valores relativos a multas serão efetuadas na fatura do mês subsequente à apuração da NMA que motivou a aplicação da penalidade financeira. Se, ao término do contrato, após o pagamento da última fatura, ainda houver penalidade financeira a aplicar, o valor de tal penalidade será descontado da garantia contratual. Os primeiros noventa dias após a emissão da primeira Ordem de Serviço do contrato serão considerados como período de adaptação e ajustes. Nesse período, a Nota Mensal de Avaliação (NMA) será calculada para fins de histórico, porém não incidirão penalidades.

6.3.2. Inexecução Contratual
Em caso de inexecução parcial ou total do objeto contratado, o Inep poderá aplicar as seguintes penalidades: Multa de 10% (dez por cento) sobre o valor dos serviços não prestados, sem embargo de indenização dos prejuízos porventura causados ao Inep pela inexecução parcial ou total do contrato. A aplicação desta multa independe da multa moratória eventualmente aplicada ou em fase de aplicação, sendo aplicável cumulativamente. Suspensão do direito de licitar e de contratar com a Administração Pública, pelo prazo de até 05 (cinco) anos, garantido o direito prévio da citação e da ampla defesa, enquanto perdurarem os motivos determinantes da punição ou até que seja promovida a reabilitação perante a própria

36

autoridade que aplicou a penalidade. Essa penalidade também será aplicada ao licitante, que convocado dentro do prazo de validade da sua proposta, não celebrar o contrato, deixar de entregar a documentação exigida para o certame, apresentar documentação falsa, ensejar o retardamento da execução do seu objeto, não mantiver a proposta, falhar ou fraudar na execução do objeto pactuado, comportar-se de modo inidôneo ou cometer fraude fiscal. A multa por inexecução contratual e a suspensão do direito de licitar e de contratar com a Administração Pública poderão ser aplicadas juntamente com as dos subitens 1, 2, 3 e 4, descritas no tópico 6.3.1 Nota Mensal de Avaliação, facultada a defesa prévia do interessado, no respectivo processo, no prazo de 05 (cinco) dias úteis. Se a multa for superior ao valor da garantia prestada, além da perda desta, responderá a CONTRATADA pela sua diferença, a qual será descontada dos pagamentos devidos pela Administração ou, quando for o caso, cobrada judicialmente. As penalidades serão obrigatoriamente registradas no SICAF, e, no caso de suspensão de licitar, o licitante deverá ser descredenciado por igual período, sem prejuízo das multas previstas no Edital e das demais cominações legais.

6.4. Estimativa do Volume de Serviços
A estimativa da quantidade a ser contratada para cobrir as demandas de desenvolvimento de novos sistemas e de manutenção de sistemas já existentes foi obtida a partir da realização dos seguintes procedimentos: a) Com base no PDTI, no portfólio de sistemas controlado pelo Escritório de Projetos e por intermédio de entrevistas internas, foram identificados os sistemas atuais que são sustentados pela equipe da Coordenação Geral de Sistemas de Informação - CGSI. Esses sistemas são os que estão assinalados em laranja (item I) na Tabela de Cálculo apresentada a seguir, e serão identificados genericamente como sistemas do legado de 2009. b) O próximo passo foi realizar a contagem estimativa de pontos de função dos sistemas do legado de 2009. Para tal, foi utilizada a técnica de contagem estimativa da NESMA, que orienta como realizar o cálculo a partir do modelo de dados dos sistemas. O resultado dessa estimativa foi registrado na coluna "Estimativa de PF por sistema" da Tabela de Cálculo apresentada a seguir. O resultado final é que, hoje, há 26 sistemas no legado de 2009, representando um total de 25.277 pontos de função. c) Em seguida, foi realizada a estimativa de demanda de pontos de função para o ano de 2010. Tomou-se por base que a CGSI deverá traçar, junto às áreas de negócio, um plano de evolução dos sistemas atuais, visando estabelecer versões mais completas que venham a sofrer poucas manutenções para os próximos anos; ou seja, no ano de 2010 espera-se que ocorram alterações mais profundas e estruturais. Entretanto, devem-se considerar as questões relativas às novas demandas advindas por mudanças nas regras de negócios e de necessidades emergenciais destas áreas de negócio não previstas no PDTI. Para a sustentação dos demais sistemas e para realizar as manutenções evolutivas, adaptativas, corretivas e estruturais, foi estimado um esforço de 70% dos pontos de função de cada sistema do legado de 2009. Foi definida também uma reserva de 7.000 pontos de função para fazer frente ao desenvolvimento de novos sistemas para responder as demandas das áreas de negócios. Os resultados dessas estimativas foram registrados na coluna "Esforço Estimado (2010)" da Tabela de Cálculo, totalizando 18.324 pontos de função. d) O próximo passo foi estabelecer o Fator de Redução dos Pontos de Função das manutenções. O Guia de Contagem de Pontos de Função do Inep preconiza reduções na contagem de acordo com o tipo da manutenção. Por exemplo: o tipo de manutenção "Mudança de padrão visual" será remunerado à base de 10% dos pontos de função envolvidos nesta manutenção. Para se chegar ao fator de redução aplicado neste estudo, foi realizada uma pesquisa com os gerentes de projetos da DTDIE de forma a identificar um

37

percentual "médio" dos tipos de manutenções realizadas no Inep. Com base nessa pesquisa chegou-se ao fator de redução de 64% (isto é, cada ponto de função da manutenção vale apenas 64 % de um ponto de função normal), o qual foi aplicado ao montante dos pontos de função de manutenção apurados em cada ano para cada sistema que pertença ao legado. e) Para o ano de 2011, o PDTI prevê a criação de 3 (três) sistemas finalísticos e 6 (seis) sistemas para as áreas meio. No caso dos sistemas das áreas meio, o PDTI informa que o desenvolvimento deverá ocorrer durante os anos de 2011 e 2012 sem especificar uma ordem de prioridade. Foram feitas as estimativas dos pontos de função dos sistemas para atender as áreas meio e as áreas fim. No caso das áreas meio, foram atribuídas metade dos pontos de função para 2011 e metade para 2012. As estimativas, tanto dos novos sistemas para áreas fim, quanto os para as áreas meio, estão registradas na Tabela de Cálculo, realçadas na cor azul (item IV). Com relação à sustentação, três sistemas do legado serão absorvidos pelos novos sistemas finalísticos e, portanto, para tais sistemas não haverá esforço de manutenção. Outros dois sistemas serão absorvidos pelo sistema E-MEC. Para as manutenções dos sistemas do legado, na ausência de valores históricos que permitissem melhores previsões, foi adotado o percentual de 30% em relação aos pontos de função dos mesmos, considerando ainda que os sistemas desenvolvidos em 2010, realçados em amarelo (item II), farão parte do legado. Estes cálculos estão demonstrados na coluna "Esforço Estimado (2011)" da Tabela de Cálculo, totalizando 21.910 pontos de função. f) Para o ano de 2012, o PDTI prevê a finalização dos sistemas da área meio, que, conforme acima mencionado, representarão a metade da demanda destes sistemas. Para este ano já considerando os sistemas que foram descontinuados e os novos criados no ano de 2011, tem-se a previsão de um total de 27 sistemas legados, que também deverão sofrer manutenções corretivas, adaptativas e evolutivas de acordo com a necessidade das áreas de negócio. Repetindo o raciocínio adotado para as estimativas de 2011, entende-se que os novos sistemas desenvolvidos em 2011 serão incorporados ao legado (item III em amarelo), sendo passíveis de sofrerem manutenções. Considerando estas hipóteses, para estimar as manutenções em 2012 foi atribuído o mesmo percentual de 30% em relação ao total de pontos de função de cada sistema, já utilizado em 2011. O resultado está demonstrado na coluna "Esforço Estimado (2012)" da Tabela de Cálculo, totalizando 19.093 pontos de função.

Tabela de Cálculo Estimativa Esforço Esforço Esforço de PF por Estimado Estimado Estimado Sistema (2010) (2011) (2012) de

Projeto I - Sistemas do Legado 2009 Automação Avaliadores ENEM ENCCEJA Celp Bras Prova Brasil Banco de Itens do ENCCEJA SAEB AAE/Pagamento

224 952 560 448 784 784 532

100 426 251 201 351 351 238

183 86 151 102

183 86 151 102
38

IDEB BNI - Base única Provinha Brasil Enade E-MEC SIEDSUP SIEDSUP - Aval Censo Superior EducaCenso Data Escola Brasil Edudata Simec Demandas Mailing Fale Conosco Mala Direta Portal Inep atual InepNet atual Laboratório IGC/CPC II - Legado 2010 III - Legado 2011 Subtotal Sistemas do Legado

84 784 28 1.708 4.900 4.116 1.540 1.568 2.261 140 644 924 112 140 112 84 84 1.708 56

38 351 13 765 2.195 1.844 690 702 1.013 63 289 414 50 63 50 38 38 765 25

16 151 5 328 941 301 434 27 124 177 22 27 22 16 16 328 11 1.344

16 151 5 328 941 301 434 27 124 177 22 27 22 16 16 328 11 1.344 3.283

25.277

11.324

4.810

8.093

IV - Sistemas Novos Sistemas novos 2010 Sistemas novos 2011 - 2012 Subtotal Sistemas Novos 7.000 28.100 7.000 7.000

17.100
17.100

11.000
11.000

Total (Legado + Sistemas Novos) Média de pontos de função dos três anos

18.324

21.910
19.776

19.093

39

Quadro Resumo
Demanda Prevista 2010 2011 2012 Média

Manutenção Sistemas Novos
Total de PF

11.324 7.000
18.324

4.810 17.100
21.910

8.093 11.000
19.093

8.076 11.700
19.776

% Manutenção % Sistemas Novos

62% 38%

22% 78%

42% 58%

41% 59%

Analisando os números finais disponíveis no Quadro Resumo acima, verificamos que a média de pontos de função demandada nos três anos é 19.776 (dezenove mil, setecentos e setenta e seis) pontos de função. Com base nesse valor, entendemos que a quantidade de 20.000 (vinte mil) pontos de função por ano deva ser suficiente para atender às demandas de sustentação de legado e de desenvolvimento de novos sistemas para os anos de 2010 a 2012. Observação: todos os novos sistemas deverão ser desenvolvidos utilizando-se as linguagens Java ou PHP, a critério do Inep.

6.5. Fiscalização
Independente dos sistemas de acompanhamento e supervisão exercidos diretamente pela CONTRATADA para os níveis de atendimento dos serviços contratados, o Inep, por meio da Coordenação-Geral de Sistemas de Informação, exercerá supervisão e acompanhamento da execução do contrato e dos serviços prestados, utilizando servidor designado para este fim. A execução das Ordens de Serviço será monitorada e fiscalizada pela equipe de Gerentes de Projetos do Inep, formada por servidores da CGSI, cuja responsabilidade é o atendimento às áreas de negócio do Órgão no que diz respeito ao desenvolvimento e à manutenção de sistemas de informação. Entre as diversas funções de acompanhamento e supervisão a serem exercidas pelo Inep, destacam-se: avaliação da qualidade dos serviços realizados, homologação dos produtos gerados, validação de contagens de pontos de função e demais atividades de controle previstas na Metodologia de Gestão e Desenvolvimento de Sistemas do Inep. A ação ou omissão total ou parcial da fiscalização do Inep, não eximirá a CONTRATADA de responsabilidade na execução do contrato.

6.6. Direitos Autorais e de Propriedade Intelectual
O Inep, para todos os efeitos da aplicação da Lei no 9.609/98, que dispõe sobre a proteção da propriedade intelectual de programa de computador, e regulamentos correlatos, deverá ser o único proprietário de licença para utilização do(s) sistema(s), devendo, para tanto, a CONTRATADA ceder ao Inep, mediante cláusula contratual: a) O direito de propriedade intelectual do software desenvolvido, de forma permanente, logo após o recebimento definitivo, permitindo ao Inep distribuir, alterar e utilizar os mesmos sem limitações de licenças restritivas;

40

b) O projeto, suas especificações técnicas, documentação, códigos-fonte de programas, bases de dados, dados de identificação dos técnicos desenvolvedores e todos os produtos gerados na execução do contrato, para instrução de processo de registro do sistema no INPI pelo Inep; c) Os direitos permanentes de instalação e uso do software, incluindo as licenças de uso das ferramentas de produtividade utilizadas para o desenvolvimento do sistema e necessárias para sua manutenção corretiva e/ou evolutiva e todos os arquivos e programas necessários ao funcionamento do sistema a partir de ambiente computacional único, independentemente do número de servidores, processadores utilizados e de usuários simultâneos; d) Os direitos permanentes de uso e instalação sobre todas as adequações ao software e atualizações corretivas ou a arquivos e rotinas a ele associadas, desenvolvidas em decorrência do Contrato, sem ônus adicionais ao Inep. Dessa forma, todos os direitos autorais da solução, documentação, scripts, códigos-fonte, bases de dados e congêneres desenvolvidos durante a execução dos produtos são do Inep, ficando proibida a sua utilização pela CONTRATADA sem a autorização expressa do Inep. A CONTRATADA não poderá repassar a terceiros, em nenhuma hipótese, os códigos-fontes, bem como qualquer informação sobre a arquitetura, documentação, assim como dados trafegados no sistema, dos produtos desenvolvidos e entregues, ficando responsável juntamente com o Inep por manter a integridade dos dados e códigos durante a execução das atividades e também em período posterior ao término da execução dos produtos.

6.7. Sigilo e Responsabilidade
A CONTRATADA será expressamente responsabilizada quanto à manutenção de sigilo absoluto sobre quaisquer dados e informações, contidos em quaisquer documentos e em quaisquer mídias, de que venha a ter conhecimento durante a execução dos trabalhos, não podendo, sob qualquer pretexto divulgar, reproduzir ou utilizar, sob pena de lei, independentemente da classificação de sigilo conferida pelo Inep a tais documentos. No ato da assinatura do contrato, o representante da CONTRATADA deverá assinar o Termo de Sigilo e Responsabilidade. Também deverão assinar o Termo de Sigilo e Responsabilidade o Preposto da CONTRATADA e cada um dos profissionais técnicos alocados durante a vigência do contrato.

6.8. Cronograma de Execução Físico-Financeira
Esta contratação não possui um cronograma de execução físico-financeira padrão a ser seguido para todo o contrato. A execução dar-se-á sob demanda, pela emissão de Ordens de Serviço, ao término da qual será realizada a homologação dos produtos e serviços entregues e sua consequente mensuração em pontos de função. No entanto, apesar da não existência do citado cronograma, a execução do contrato será regida pelas regras abaixo, que definem um cronograma de desembolso padrão para cada um dos tipos de Ordens de Serviço previstas na MGDS do Inep, a saber: OS da Fase de Iniciação, OS do Sprint, OS de Serviço de Manutenção e OS de Garantia, como descrito a seguir.  OS da Fase de Iniciação Corresponde às atividades de levantamento preliminar de escopo junto ao cliente ou de detalhamento da demanda, previstas nos processos da fase de iniciação da MGDS.

41

Este tipo de OS somente existirá quando o Inep decidir que a responsabilidade por essa fase é da CONTRATADA. Nesse caso, a CONTRATADA será remunerada em 5% (cinco por cento) da quantidade de pontos de função estimada e aceita para todo o projeto.  OS do Sprint Corresponde às atividades de execução de uma iteração em um projeto (de desenvolvimento 3 ou de manutenção ), previstas nos processos de desenvolvimento de sistemas da MGDS. Este tipo de OS remunerará a CONTRATADA em 95% (cinco por cento) do total obtido após a medição final dos pontos de função da iteração entregue e aceita.  OS de Serviço de Manutenção Corresponde às atividades de execução de um serviço de manutenção , previstas nos processos de manutenção de sistemas da MGDS. Este tipo de OS remunerará a CONTRATADA em 95% (cinco por cento) do total obtido após a medição final dos pontos de função do serviço entregue e aceito.  OS de Garantia Corresponde às atividades de execução de um serviço de manutenção de itens em garantia, previstas nos processos de manutenção de sistemas da MGDS. Este tipo de OS não gera ônus para o Inep, tendo em vista que os itens que apresentaram as falhas já foram remunerados em outra Ordem de Serviço. Dessa forma, esta OS não é passível de medição de pontos de função.
4

6.9. Condições de Recebimento e de Pagamento
As Ordens de Serviço somente serão aceitas e liberadas para pagamento quando todas as condições a seguir forem verdadeiras: a) Toda a documentação obrigatória listada na Ordem de Serviço tiver sido entregue e aceita; b) O repositório do software utilizado pelo Inep para o controle de versões tiver sido atualizado com a versão final da documentação obrigatória listada na Ordem de Serviço; c) A qualidade do serviço tiver sido avaliada e aceita pela área de TI; d) O serviço tiver sido homologado e aceito pelo cliente; e) A contagem detalhada dos pontos de função tiver sido validada e aceita pelo Inep. Sendo verdadeiras todas as condições acima, o Gerente de Projetos do Inep e o Gestor do Contrato farão o ateste (aceite definitivo), apondo suas assinaturas na Ordem de Serviço, que será então passível de faturamento. Eventuais erros que sejam detectados posteriormente em ambiente de produção serão reportados em Ordem de Serviço especial para itens em garantia, a qual não implicará em ônus para o Inep.
3

Além das demandas de desenvolvimento de novos sistemas, também são tratadas como projeto, as

demandas de manutenção cuja estimativa inicial de pontos de função (PF) seja superior a 100 PFs.
4

As demandas de manutenção cuja estimativa inicial de pontos de função seja de até 100 PFs são tratadas

como serviço de manutenção.

42

Mensalmente, a CONTRATADA apresentará, para ateste, o Relatório de Ordens de Serviço contendo a lista de todas as OSs aceitas entre o dia 21 do mês anterior e o dia 20 do mês em curso. Após o ateste do Gestor do Contrato no Inep, a CONTRATADA emitirá nota fiscal/fatura no valor correspondente ao somatório dos pontos de função de todas as Ordens de Serviço aceitas no período de referência, devidamente convertidos para Reais (R$), encaminhando a referida nota fiscal/fatura ao Inep, para aceite e pagamento. Para a realização do pagamento de que trata este item, a CONTRATADA deverá atender às exigências do art. 36 da IN SLTI nº 2/2008, além de fazer constar da nota fiscal/fatura emitida, sem rasura, em letra legível, o nome do banco, o número da agência e da respectiva conta bancária. O pagamento será realizado em moeda corrente, mediante emissão de ordem bancária para crédito em conta da licitante vencedora, até o 5º dia útil do mês subsequente ao do aceite da nota fiscal/fatura.

6.10. Plano de Comunicação
No ato da assinatura do contrato, a CONTRATADA deverá indicar um profissional de seu quadro para atuar, no ambiente do Inep, como Preposto. Esse profissional estará responsável pela gestão dos aspectos administrativos, legais e técnicos do contrato, relacionando-se diretamente com o Gestor do Contrato e com os Gerentes de Projetos do Inep; Imediatamente após a assinatura do contrato, o Gestor do Contrato no Inep convocará o Preposto da CONTRATADA para a reunião de abertura do contrato, na qual serão tratados os seguintes assuntos:    Assinatura do Termo de Sigilo e Responsabilidade; Esclarecimentos sobre a forma de comunicação a ser adotada entre o Órgão e a CONTRATADA; Entrega dos documentos que compõem os padrões em uso no Inep, a saber: o o o o o o  MGDS - Metodologia de Gestão e Desenvolvimento de Sistemas do Inep e seus modelos de artefatos; Guia de Desenvolvimento de Sistemas; Guia de Arquitetura (para Java e PHP); Guia de Segurança da Informação para Desenvolvimento de Sistemas; Guia de Banco de Dados; e Guia de Contagem de Pontos de Função do Inep;

Apresentação dos tipos de Ordens de Serviço que serão utilizadas na passagem de demandas do Inep para a CONTRATADA e esclarecimentos sobre o seu preenchimento: o o o o OS da fase de iniciação; OS do Sprint; OS de Serviço de manutenção; OS de Garantia.

   

Apresentação do software utilizado pelo Inep para o controle de versões; Esclarecimentos acerca da forma de validação e aceite das medições de pontos de função realizadas pela CONTRATADA; Esclarecimentos acerca dos níveis de serviço previstos no contrato, bem como sobre o período de adaptação e ajustes da CONTRATADA ao contrato; Esclarecimentos relacionados ao funcionamento do Órgão, tais como: horário de trabalho, local disponível para a equipe da CONTRATADA, regimento interno do Órgão, forma de

43

acesso dos colaboradores da CONTRATADA às dependências do Inep e demais informações pertinentes;   Data de início das atividades do contrato; Demais assuntos relevantes para o início do contrato pela CONTRATADA.

Essa reunião será registrada em ata, documento que deverá ser assinado por todos os presentes e que passará a integrar o contrato. Toda a comunicação relacionada aos aspectos administrativos e legais do contrato será formalizada via ofício e encaminhada ao Preposto designado pela CONTRATADA, enquanto a comunicação relacionada os aspectos técnicos do contrato será formalizada através da ferramenta de gerenciamento de projetos do Inep. Sempre que o resultado de um processo de avaliação da qualidade ou de homologação de Ordem de Serviço resultar em não-conformidades, o Preposto da CONTRATADA será notificado da lista de itens não-conformes e do prazo para resolução dessa lista. Tal comunicação é motivada pelo fato de que tanto o envio da lista pelo Inep, quanto o não-cumprimento do prazo para resolução das pendências ou a reincidência de não-conformidades após nova avaliação implicam em perda de pontuação na Nota Mensal de Avaliação (NMA) da CONTRATADA. O Inep manterá registro próprio de todas as ocorrências relacionadas à execução do contrato, determinando o que for necessário à regularização das faltas ou defeitos observados. Reuniões mensais serão realizadas entre o Gestor do Contrato no Inep e o Preposto da CONTRATADA para acompanhamento das atividades. Serão efetuados os registros em atas assinadas pelos participantes, sendo que as mesmas passarão a fazer parte do contrato.

6.11. Transferência de Tecnologia
Ao término do contrato, seja por decurso de vigência ou por rescisão antecipada, a CONTRATADA fica obrigada a promover a transição contratual com transferência de tecnologia e técnicas empregadas, sem perda de informações, capacitando, se solicitado, os técnicos do Inep ou os da nova pessoa jurídica que continuará a execução dos serviços.

6.12. Garantias contratuais
A CONTRATADA, como garantia para o cumprimento das obrigações assumidas, fornecerá ao Inep, no ato da assinatura do contrato, a importância equivalente a 5% (cinco por cento) do valor contratual, em uma das modalidades previstas no art. 56, § 1º, da Lei nº 8.666/93. O valor da garantia permanecerá integral até o término da vigência do contrato. A reposição de seu valor, quando for o caso, será feita em até 72 (setenta e duas) horas, contadas da data de recebimento da notificação do Inep. O valor da garantia reverterá, integralmente, em favor do Inep, ou pelo saldo que apresentar, no caso de rescisão contratual por culpa da CONTRATADA, sem prejuízo das perdas e danos porventura verificados. O Inep poderá utilizar o valor da garantia prestada para descontar os valores referentes a eventuais multas aplicadas à CONTRATADA, bem como nos casos decorrentes de inadimplemento contratual, e de indenização por danos causados ao Patrimônio da União ou de terceiros, ocorridos nas suas dependências. A garantia prestada pela CONTRATADA será liberada ou restituída após o término da vigência ou rescisão do contrato, desde que não haja pendências.

44

6.13. Qualificação profissional para a prestação dos serviços
Os profissionais a serem envolvidos nos serviços objeto deste Termo de Referência, deverão estar capacitados nos recursos que compõem o ambiente computacional do Inep, descrito no Anexo IV deste documento. A CONTRATADA deverá comprovar que os profissionais envolvidos nos serviços fazem parte do seu quadro de pessoal (CLT), por meio da apresentação da Relação de Empregados (RE) do mês subsequente ao da assinatura do contrato. Também deverá comprovar (onde exigido) que esses profissionais apresentam a qualificação mínima descrita abaixo, por meio da apresentação de diplomas, certificados ou atestados emitidos por entidade(s) idônea(s) em nome dos profissionais. Os requisitos desejáveis foram colocados para orientar a CONTRATADA quanto ao perfil ideal para o Inep e qualificação geral para executar os serviços.  Preposto o Requisitos obrigatórios    o Curso superior completo; Certificação PMP concedida pelo PMI; Experiência com gestão de contratos e de projetos na Administração Pública;

Requisitos desejáveis  Certificação CSM (Certified Scrum Master), concedida por profissional credenciado pela Scrum Alliance;

o

Observação  Em relação à obrigatoriedade de possuir a certificação PMP (Project Management Professional) citada no item requisitos obrigatórios, justifica-se pela necessidade de qualificação comprovada, por uma entidade externa, deste perfil na área de Gerenciamento de Projetos. Este perfil terá o papel de liderança de toda a equipe da contratante e responderá diretamente por todos os projetos em execução. A Certificação PMP do PMI ( Project Management Institute) é a credencial profissional mais reconhecida e respeitada em termos mundiais no que tange ao Gerenciamento de Projetos.



Líder de Projetos o Requisitos obrigatórios   Curso superior completo na área de informática; Comprovação de participação nos seguintes cursos, com carga horária mínima de 20 horas para cada curso:      Análise e projeto orientado a objetos; Análise de requisitos com UML; Linguagem Java; Linguagem PHP.

Certificação CSM (Certified Scrum Master), concedida por profissional credenciado pela Scrum Alliance;

45

 

Experiência em organização de métodos de trabalho; Experiência comprovada de, no mínimo, 5 (cinco) anos como gerente de projetos de TI, especificadamente em projetos de desenvolvimento e de manutenção de software; Mínimo de 2 (dois) anos de experiência em modelagem UML.

 o

Requisitos desejáveis     Conhecimento do papel de Product Owner em projetos de desenvolvimento e de manutenção de software; Conhecimento dos princípios que regem os modelos de maturidade em desenvolvimento de software (MPS.BR, CMMI, ISO/NBR 15504); Certificação PMP concedida pelo PMI; Conhecimento das melhores práticas de mercado (ISO 9000:2000, PMBOK, ISO 17799, ISO 20000, ISO 12207, ISO 9126, CMMI, ITIL, COBIT e Governança de TI); Experiência em desenvolvimento Web utilizando as linguagens Java e PHP; Possuir ao menos uma das certificações JAVA: SCJP ­ Sun Certified Java Programmer, SCJD - Sun Certified Java Developer, SCWCD - Sun Certified Web Component Developer, SCBCD - Sun Certified Business Component Developer ou SCDJWS - Sun Certified Developer for Java Web Services; Habilidades de organização, liderança, iniciativa e independência, capacidade analítica e de julgamento, capacidade para trabalhar em equipes multidisciplinares, além de facilidade para lidar com pessoas.

 





Analista de Métrica e Mensuração de Software o Requisitos obrigatórios   Curso superior completo na área de informática ou qualquer curso superior com especialização na área de informática; Comprovação de participação nos seguintes cursos, com carga horária mínima de 20 horas para cada curso:     Análise e projeto orientado a objetos; Análise de requisitos com UML.

Certificação CFPS (Certified Function Point Specialist), concedida pelo IFPUG; Experiência comprovada de, no mínimo, 3 (três) em atividades de métrica e mensuração de projetos de software com a utilização da técnica de Análise de Pontos de Função.

o

Requisitos desejáveis  Habilidades de organização, liderança, iniciativa e independência, capacidade analítica e de julgamento, capacidade para trabalhar em equipes multidisciplinares, além de facilidade para lidar com pessoas;

46

 o

Experiência em organização de métodos de trabalho.

Observação  Em relação à obrigatoriedade de possuir a certificação CFPS (Certified Function Point Specialist) citada no item requisitos obrigatórios, justifica-se pelas atividades específicas que este profissional deverá desempenhar, relacionadas à mensuração de projetos de software com a utilização da técnica de Análise de Pontos de Função. A certificação CFPS tem por objetivo reconhecer formalmente os profissionais capazes de realizar contagens de pontos de função precisas e consistentes e que também conheçam as práticas de contagem mais recentes do IFPUG.



Analista de Testes o Requisitos obrigatórios   Curso superior completo na área de informática ou qualquer curso superior com especialização na área de informática; Comprovação de participação nos seguintes cursos, com carga horária mínima de 40 horas para cada curso:     o Teste e qualidade de software; Auditoria da qualidade.

Conhecimentos de ferramentas automatizadas de teste e qualidade de software; Experiência de no mínimo 3 (três) anos como Analista de Testes e Qualidade;

Requisitos desejáveis  Habilidades de organização, liderança, iniciativa e independência, capacidade analítica e de julgamento, capacidade para trabalhar em equipes multidisciplinares, além de facilidade para lidar com pessoas; Experiência como membro de times Scrum; Experiência em organização de métodos de trabalho.

  

Administrador de Dados o Requisitos obrigatórios   Curso superior completo na área de informática ou qualquer curso superior com especialização na área de informática; Comprovação de participação nos seguintes cursos, com carga horária mínima de 20 horas para cada curso:    Modelagem e projeto de banco de dados; Análise e projeto orientado a objetos;

Experiência comprovada na área de administração de dados de, no mínimo, 3 (três) anos;

47

   o

Experiência comprovada em um ou mais dos seguintes bancos de dados: Oracle, MySQL ou PostgreSQL; Experiência em ferramentas CASE para modelagem de dados relacional e modelagem Orientada a Objetos; Experiência em levantamento e exploração de dados de sistemas legados, mapeamento de entidades e atributos, criação de dicionário de dados.

Requisitos desejáveis  Habilidades de organização, liderança, iniciativa e independência, capacidade analítica e de julgamento, capacidade para trabalhar em equipes multidisciplinares, além de facilidade para lidar com pessoas; Experiência como membro de times Scrum; Experiência em organização de métodos de trabalho.

  

Analista de Processos de Negócios o Requisitos obrigatórios   Curso superior completo na área de informática ou qualquer curso superior com especialização na área de informática; Comprovação de participação nos seguintes cursos, com carga horária mínima de 20 horas para cada curso:     Análise de requisitos com UML; Análise e projeto orientado a objetos; Análise de pontos de função.

Experiência comprovada de, no mínimo, 3 (três) anos como analista de sistemas, especificamente em projetos de desenvolvimento e de manutenção de software; Experiência em ferramentas CASE para modelagem de requisitos (UML), modelagem de dados e prototipação de interfaces com o usuário; Experiência em análise e modelagem de dados utilizando UML; Experiência em ciclo de produção baseado no processo unificado ou similar; Experiência em desenvolvimento de sistemas orientados a objeto.

   

o

Requisitos desejáveis  Habilidades de organização, liderança, iniciativa e independência, capacidade analítica e de julgamento, capacidade para trabalhar em equipes multidisciplinares, além de facilidade para lidar com pessoas; Experiência em organização de métodos de trabalho; Experiência em gerenciamento de projetos; Experiência em modelagem de processos de negócio e O&M;

  

48

 

Experiência como membro de times Scrum; Experiência em desenvolvimento de sistemas nas linguagens Java ou PHP.



Desenvolvedor PHP o Requisitos obrigatórios   Curso superior incompleto na área de informática; Comprovação de participação nos seguintes cursos, com carga horária mínima de 20 horas para cada curso:     Lógica de programação; Programação orientada a objetos; Programação em PHP.

Experiência comprovada de no mínimo 3 (três) anos como desenvolvedor PHP, especificadamente em projetos de desenvolvimento e de manutenção de software; Experiência em desenvolvimento de sistemas baseado no processo unificado (UP) ou similar; Experiência em leitura de modelos UML; Conhecimento da técnica de desenvolvimento XP;

  

 
  o

Conhecimento da técnica de gerenciamento Scrum; Conhecimentos HTML, CSS e Java Script;
Conhecimentos de SQL; Conhecimento na elaboração de testes unitários.

Requisitos desejáveis  Habilidades de organização, liderança, iniciativa e independência, capacidade analítica e de julgamento, capacidade para trabalhar em equipes multidisciplinares, além de facilidade para lidar com pessoas; Experiência em organização de métodos de trabalho; Certificação ZCE (Zend Certified Engineer); Experiência como membro de times Scrum; Conhecimento técnico da língua inglesa; Experiência em modelagem UML; Experiência em desenvolvimento de aplicações utilizando as tecnologias XML e XML Schema, XSL e arquitetura de Web Services.

     

49



Desenvolvedor Java o Requisitos obrigatórios   Curso superior incompleto na área de informática; Comprovação de participação nos seguintes cursos, com carga horária mínima de 20 horas para cada curso:     Lógica de programação; Programação orientada a objetos; Programação em Java Web.

Experiência comprovada de no mínimo 3 (três) anos como desenvolvedor Java Web, especificadamente em projetos de desenvolvimento e de manutenção de software; Experiência em desenvolvimento de sistemas baseado no processo unificado (UP) ou similar; Experiência em leitura de modelos UML; Conhecimento da técnica de desenvolvimento XP;

  

 
  

Conhecimento da técnica de gerenciamento Scrum; Conhecimentos HTML, CSS e Java Script;
Conhecimentos de SQL; Conhecimento na elaboração de testes unitários; Possuir ao menos uma das certificações JAVA: SCJP ­ Sun Certified Java­ Programmer, SCJD - Sun Certified Java Developer, SCWCD - Sun Certified Web Component Developer, SCBCD - Sun Certified Business Component Developer ou SCDJWS - Sun Certified Developer for Java Web Services.

o

Requisitos desejáveis  Habilidades de organização, liderança, iniciativa e independência, capacidade analítica e de julgamento, capacidade para trabalhar em equipes multidisciplinares, além de facilidade para lidar com pessoas; Experiência em organização de métodos de trabalho; Experiência como membro de times Scrum; Conhecimento técnico da língua inglesa; Experiência em modelagem UML;

   


 

Experiência com JSF, Facelets, RichFaces, Jboss Seam, JPA, Hibernate, EJB, Maven e Ant;
Experiência nos principais padrões de projetos (GOF); Experiência em desenvolvimento de aplicações utilizando as tecnologias XML e XML Schema, XSL e arquitetura de Web Services.

50

o

Observação  Em relação à obrigatoriedade de possuir ao menos uma certificação Java citada no item requisitos obrigatórios, destacamos que uma certificação na tecnologia Sun Java demonstra uma comprovação mínima das habilidades técnicas, dedicação e motivação do profissional. Amplamente reconhecidas no setor de TI, as opções de treinamento e certificação na tecnologia Sun Java são inúmeras e ajudam a comprovar que o profissional possui habilidades que contribuem para cumprir com eficiência os desafios de uma organização de TI.



Web Designer o Requisitos obrigatórios  Curso superior em andamento na área de informática, design ou desenho industrial ou qualquer curso superior com especialização em uma destas áreas; Experiência de 2 (dois) anos em projetos de interfaces para ambiente WEB; Mínimo de 1 (um) ano de experiência com o desenvolvimento de páginas HTML e folhas de estilo (CSS); Mínimo de 1 (um) ano de experiência nas principais ferramentas de projeto de interface e tratamento de imagens tais como: Photoshop, Corel Draw, Illustrator, Dreamweaver, Fireworks e Flash;

  

o

Requisitos desejáveis:        Conhecimentos das determinações do W3C; Conhecimentos em edição de vídeo; Experiência de desenvolvimento utilizando o CMS Joomla (instalação, configuração e migração de dados); Conhecimentos de e-MAG (recomendações de acessibilidade para a construção e adaptação de conteúdos do governo brasileiro na Internet); Capacidade de organização e de trabalho em equipes multidisciplinares, além de facilidade para lidar com pessoas; Capacidade de análise e comunicação; Conhecimentos dos conceitos de usabilidade e ergonomia de Interfaces.



Documentador o Requisitos obrigatórios     Segundo grau completo; Mínimo de 2 (dois) anos de experiência na redação de documentação de sistemas voltada ao usuário final; Experiência em leitura de modelos UML; Mínimo de 2 (dois) anos de experiência com editores de texto, tais como: BR-Office ou similar.

51

o

Requisitos desejáveis    Curso superior completo ou cursando na área de informática ou qualquer curso superior com especialização na área de informática; Conhecimentos em documentações; ferramentas gráficas para desenvolvimento de

Habilidades de organização, iniciativa e independência, capacidade analítica e de julgamento, capacidade para trabalhar em equipes multidisciplinares, além de facilidade para lidar com pessoas; Conhecimento no desenvolvimento de páginas HTML; Capacidade de análise e comunicação; Conhecimento de ferramentas de versionamento de documentos tais como o SVN ou CVS; Experiência em modelagem UML.

    

Analista de Data Warehouse/BI o Requisitos obrigatórios   Curso superior completo na área de informática ou qualquer curso superior com especialização na área de informática; Comprovação de participação nos seguintes cursos, com carga horária mínima de 20 horas para cada curso:      Modelagem dimensional e relacional; Data Warehouse; ETL.

Experiência comprovada de no mínimo 2 anos em: modelagem dimensional, construção de Datawarehouse, ETL e ferramentas OLAP; Experiência comprovada em pelo menos uma das seguintes ferramentas: Oracle Warehouse Builder; Cognos, Micro Strategy, Business Object, Pentaho, SAS, SPSS, Siebel; Experiência comprovada de no mínimo 2 anos em pelo menos um dos seguintes bancos de dados: Oracle, MySQL ou PostgreSQL;

 o

Requisitos desejáveis     Pós-graduação numa das seguintes áreas de TI: Banco de Dados, Engenharia de Software ou Inteligência Artificial; Conhecimento sobre análise de negócios e documentação de sistemas; Conhecimentos de data mining; Experiência na manipulação de grandes volumes de dados.

52



Arquiteto de Sistemas o Requisitos obrigatórios  Curso superior completo na área de informática ou qualquer curso superior com especialização na área de informática;

      


Experiência comprovada de, no mínimo, 5 (cinco) anos em desenvolvimento WEB utilizando a plataforma Java EE e/ou PHP; Experiência comprovada de, no mínimo, 2 (dois) anos como arquiteto Java ou PHP; Experiência com servidores de aplicação JBoss; Experiência com JSF, Facelets, RichFaces, Jboss Seam, JPA, Hibernate, EJB, Maven e Ant; Experiência no ciclo de desenvolvimento de sistemas baseado no processo unificado ou similar; Experiência nos principais padrões de projetos (GOF); Experiência comprovada de, no mínimo, 2 (dois) anos em elaboração de modelos UML;
Conhecimento da técnica de desenvolvimento XP;

    

Conhecimento da técnica de gerenciamento Scrum; Conhecimentos HTML, CSS e Java Script; Conhecimentos de SQL; Conhecimento na elaboração de testes unitários; Possuir ao menos duas das seguintes certificações JAVA: SCJP ­ Sun Certified Java­Programmer, SCJD - Sun Certified Java Developer, SCWCD - Sun Certified Web Component Developer, SCBCD - Sun Certified Business Component Developer - SCDJWS - Sun Certified Developer for Java Web Services. - SCEA -Sun Certified Enterprise Architect

o

Requisitos desejáveis



Habilidades de organização, liderança, iniciativa e independência, capacidade analítica e de julgamento, capacidade para trabalhar em equipes multidisciplinares, além de facilidade para lidar com pessoas; Experiência em organização de métodos de trabalho; Experiência como membro de times Scrum; Experiência em desenvolvimento de aplicações utilizando as tecnologias XML e XML Schema, XSL e arquitetura de Web Services.
53

  

o

Observação



Em relação à obrigatoriedade de possuir ao menos duas certificações Java citada no item requisitos obrigatórios, destacamos que as certificações na tecnologia Sun Java demonstram a comprovação das habilidades técnicas mínimas requeridas às funções de arquiteto, além de requerer do profissional dedicação e motivação. Amplamente reconhecidas no setor de TI, as opções de treinamento e certificação na tecnologia Sun Java são inúmeras e ajudam a comprovar que o profissional possui habilidades que contribuem para cumprir com eficiência os desafios de uma organização de TI.

Para cada novo profissional alocado, a CONTRATADA deverá entregar o currículo e os comprovantes de formação, de capacitação e de certificação técnica (onde exigida) do profissional. É de responsabilidade da CONTRATADA a disponibilização e manutenção da infraestrutura necessária de hardware, software e suporte para seus profissionais atuarem nas instalações do Inep. O Órgão, por sua vez, ficará responsável por providenciar o espaço físico, o mobiliário e as permissões de acesso aos profissionais da CONTRATADA à sua infraestrutura de rede e aos servidores de desenvolvimento e homologação. Após a assinatura do contrato, a CONTRATADA terá um prazo de 20 dias corridos para alocar, nas dependências do Inep, os equipamentos (hardware e software) e a equipe técnica responsável pelo atendimento das Ordens de Serviço abertas pelo Órgão.

6.14. Obrigações da CONTRATADA
1. Designar um profissional de seu quadro para atuar como Preposto nas dependências do Inep, com a responsabilidade pela gestão dos aspectos administrativos, legais e técnicos do contrato, relacionando-se diretamente com o Gestor do Contrato e com os Gerentes de Projetos do Inep. 2. Disponibilizar, nas instalações fornecidas pelo Inep, a seguinte infraestrutura para seus profissionais atuarem nos serviços desta contratação: 2.1. Uma estação de trabalho completa para cada profissional alocado, com configuração de hardware e software adequada às necessidades dos serviços desta contração e compatível com o ambiente computacional do Inep citado no Anexo IV deste TERMO DE REFERÊNCIA. 2.2. Impressoras, com os respectivos suprimentos, em quantidades adequadas ao tamanho da equipe de profissionais e dimensionadas para atender à demanda necessária de impressão. 2.3. Softwares e licenças, necessários ao desempenho das atividades relacionadas aos serviços desta contratação (quando não for utilizado software gratuito), que deverão ser disponibilizados em conformidade com o padrão do ambiente computacional do Inep e em compatibilidade com as ferramentas utilizadas no Órgão. 2.4. Licenças de antivírus para cada estação de trabalho do mesmo fabricante e versão utilizada na rede corporativa de dados do Inep.

54

2.5. Equipe de suporte de hardware e software, capaz de manter essa infraestrutura completamente operacional, de forma a garantir o desempenho satisfatório da equipe técnica alocada aos serviços desta contratação. 3. Responsabilizar-se pelo pagamento das faturas dos ramais telefônicos disponibilizados aos seus profissionais alocados aos serviços desta contratação. Cada profissional alocado na contratação em questão terá à sua disposição um ramal e uma senha exclusiva para uso do mesmo. A equipe de Telefonia do Inep, no ínicio de cada mês, disponibilizará uma fatura por ramal na qual constarão as chamadas e respectivos valores deste ramal. O gestor do contrato emitará uma Guia de Recolhimento a União (GRU), que deverá ser paga pela contratada no prazo estipulado na GRU. 4. Selecionar, designar e manter em sua equipe profissionais cuja qualificação esteja em conformidade com os requisitos definidos neste TERMO DE REFERÊNCIA, no item Qualificação profissional para a prestação dos serviços. Os profissionais deverão ser contratados obrigatoriamente pelo regime da CLT, de forma a assegurar-se os benefícios trabalhistas decorrentes. 5. Apresentar, para cada profissional alocado aos serviços desta contratação, os currículos e comprovantes de formação, de capacitação e de certificação técnica (se obrigatória), conforme previsto neste TERMO DE REFERÊNCIA, no item Qualificação profissional para a prestação dos serviços. 6. Capacitar a equipe técnica alocada aos serviços desta contratação sempre que se fizer necessário, considerando a evolução tecnológica ou mudança de tecnologia realizada pelo Inep em seu ambiente computacional. 7. Cumprir integralmente as especificações e prazos definidos na OS, garantindo a qualidade dos produtos e serviços entregues e mantendo a conformidade com a MGDS do Inep. 8. Manter consistência entre os modelos de dados desenvolvidos e o modelo de dados corporativo do Inep. 9. Solicitar autorização prévia do Inep antes de utilizar recursos de software que necessitem de aquisição de licença de uso ou antes de utilizar ferramentas cuja versão seja diferente daquelas previstas e em uso no Inep. 10. Não instalar equipamentos de rede, como, por exemplo, roteadores e switches, nas dependências do Inep. 11. O Inep terá ampla liberdade de atualizar seu ambiente computacional, segundo sua necessidade e conveniência administrativa, cabendo, nestes casos, à CONTRATADA manter a compatibilidade, evoluindo e adaptando-se à respectiva mudança, às suas expensas, sem quaisquer custos adicionais para o Inep e dentro do prazo estipulado. 12. Adequar-se, dentro do prazo estipulado pelo Inep, às modificações realizadas na MGDS e seus anexos, que impliquem em mudanças no desenvolvimento e manutenção de aplicativos. 13. Garantir a execução dos serviços sem interrupção, substituindo, caso necessário, sem ônus para o Inep, qualquer técnico que tenha faltado ao serviço ou que esteja em gozo de férias, auxílio doença, auxílio maternidade ou qualquer outro benefício legal. 14. Cumprir as atividades inerentes ao contrato com técnicos altamente especializados, assumindo total e exclusiva responsabilidade pelo cumprimento integral do objeto desta contratação. 15. Admitir, administrar, coordenar e avaliar, sob sua responsabilidade, os técnicos necessários à prestação dos serviços desta contratação, obrigando-se também por todos os tributos, impostos, encargos (trabalhistas ou não), incluindo toda e qualquer verba rescisória, além de todas as taxas que se apliquem ao seu ramo de atuação.

55

16. Apresentar, em conjunto com a fatura de serviços mensais, os comprovantes de regularidade da situação fiscal, conforme determina o inciso XIII do art. 55 da Lei nº 8.666/93. 17. Informar ao Inep, para efeito de controle de acesso às dependências do Órgão, o nome e o respectivo número da carteira de identidade dos empregados que farão parte da equipe técnica alocada aos serviços desta contratação, bem como ocorrências de afastamento definitivo e as substituições em casos de falta, ausência legal ou férias. 18. Substituir qualquer um dos técnicos alocados aos serviços desta contratação, cuja atuação, permanência ou comportamento tenham sido julgados prejudiciais e inconvenientes à execução dos serviços ou às normas do Inep. 19. Encaminhar, sempre que houver substituição de um profissional da equipe técnica, o currículo e os comprovantes de formação, de capacitação e de certificação técnica (se obrigatória) do profissional substituto, mantendo a conformidade com os requisitos definidos neste TERMO DE REFERÊNCIA, no item Qualificação profissional para a prestação dos serviços. 20. Prestar as informações e os esclarecimentos solicitados, no prazo máximo de 48 (quarenta e oito) horas, a contar da solicitação feita pelo Gestor do Contrato no Inep. 21. Responder por quaisquer prejuízos que seus empregados ou preposto causarem ao Inep ou a terceiros, decorrentes de ação ou omissão culposa, procedendo imediatamente os reparos ou indenizações cabíveis e assumindo o ônus e a responsabilidade decorrente. 22. Aceitar, nas mesmas condições contratadas, os acréscimos ou supressões que se fizerem necessários, até o limite de 25% (vinte e cinco por cento) do valor atualizado do contrato. 23. Levar imediatamente ao conhecimento do Gestor do Contrato no Inep qualquer fato extraordinário ou anormal que ocorrer na execução dos serviços contratados. 24. Responsabilizar-se sobre todos os atos de seus técnicos, relacionados ao manuseio de arquivos de dados, sistemas computadorizados, software e equipamentos de propriedade do Inep. 25. Não transferir a outrem, no todo ou em parte, o objeto da presente contratação. 26. Sob pena de rescisão contratual, não caucionar ou utilizar o contrato para qualquer operação financeira, sem prévia e expressa anuência do Inep. 27. Manter, durante toda a vigência do contrato, as condições de habilitação e de qualificação exigidas no processo licitatório. 28. Ao término do contrato, seja por decurso de vigência ou por suspensão/cancelamento, promover a transição contratual com transferência de tecnologia e técnicas empregadas, sem perda de informações, capacitando, se solicitado, os técnicos do Inep ou da nova pessoa jurídica que continuará a execução dos serviços.

6.15. Obrigações do Inep

1. Permitir ao pessoal técnico da CONTRATADA, desde que identificado e incluído na relação de técnicos autorizados, o acesso às dependências do Órgão, respeitadas as normas de segurança vigentes. 2. Disponibilizar instalações físicas, ramais telefônicos, mobiliário e a infraestrutura tecnológica aos profissionais da CONTRATADA, quando a execução dos serviços desta contratação for realizada nas instalações do Inep, à exceção dos subitens 2.1, 2.2, 2.3, 2.4 e 2.5 descritos no item 2 das Obrigações da Contratada.

56

3. Notificar a CONTRATADA quanto a defeitos ou irregularidades verificados na execução dos serviços objeto deste TERMO DE REFERÊNCIA, bem como quanto a qualquer ocorrência relativa ao comportamento de seus técnicos, quando em atendimento, que venha a ser considerado prejudicial ou inconveniente para o Inep. 4. Comunicar à CONTRATADA a necessidade de substituição de qualquer profissional que seja considerado inadequado para o exercício da função. 5. Efetuar os pagamentos devidos à CONTRATADA, na forma convencionada, dentro do prazo previsto, desde que atendidas às formalidades necessárias, após a aceitação dos serviços faturados. 6. Verificar a regularidade da situação fiscal e dos recolhimentos sociais trabalhistas da CONTRATADA, conforme determina a Lei, antes de efetuar o pagamento devido. 7. Promover a fiscalização do contrato, sob os aspectos quantitativos e qualitativos, anotando em registro próprio as falhas detectadas e exigindo as medidas corretivas necessárias, bem como acompanhar o desenvolvimento do contrato, conferir os serviços executados e atestar os documentos fiscais pertinentes, podendo ainda sustar, recusar, mandar fazer ou desfazer qualquer procedimento que não esteja de acordo com os termos contratuais. 8. Comunicar tempestivamente à CONTRATADA as possíveis irregularidades detectadas na execução dos serviços. 9. Emitir, antes da execução de qualquer serviço, sua respectiva Ordem de Serviço (OS). 10. Homologar os serviços prestados de acordo com os requisitos preestabelecidos nas OS, atestando as respectivas faturas. 11. Fornecer à CONTRATADA, em tempo hábil, as informações necessárias e relevantes à consecução dos serviços a serem executados, bem como a documentação técnica e operacional de todos os sistemas já desenvolvidos, descritos neste TERMO DE REFERÊNCIA. 12. Especificar e estabelecer normas e diretrizes para a execução dos serviços ora contratados, definindo as prioridades, regras, bem como os prazos e etapas para cumprimento das obrigações. 13. Aplicar as penalidades previstas para o caso de não cumprimento de cláusulas contratuais ou aceitar as justificativas apresentadas pela CONTRATADA. 14. Comunicar, por escrito, à CONTRATADA, as modificações realizadas na MGDS e seus anexos ou no ambiente computacional do Inep, que impliquem em mudanças no desenvolvimento e manutenção de aplicativos, e estipular prazos para adequação.

6.16. Vigência e prazo para assinatura do contrato
Visando à obtenção de preços e condições mais vantajosas para a Administração, o contrato de prestação de serviços terá vigência de 12 (doze) meses, prorrogáveis por iguais e sucessivos períodos, limitada a sessenta meses, conforme previsto no inciso II do art. 57, da Lei nº 8.666/1993. O prazo para assinatura do contrato será de 10 (dez) dias, contados a partir da data de convocação pelo Inep, podendo ser prorrogado uma vez, por igual período, quando solicitado pela parte e desde que ocorra motivo justificado e aceito pelo Órgão.

57

7. ESTIMATIVA DE PREÇOS
Foi realizada uma pesquisa de preços em empresas que atuam no mercado em regime de fábrica de software com a métrica de pontos de função, buscando obter-se o valor médio cobrado por ponto de função. Tal pesquisa foi realizada a partir do envio de ofício acompanhado dos documentos a seguir, todos disponíveis na seção de Anexos do presente TERMO DE REFERÊNCIA:       MGDS - Metodologia de Gestão e Desenvolvimento de Sistemas do Inep; Guia de Desenvolvimento de Sistemas; Guia de Arquitetura (para Java e PHP); Guia de Segurança da Informação para Desenvolvimento de Sistemas; Guia de Banco de Dados; e Guia de Contagem de Pontos de Função do Inep.

Foi solicitado a cada fornecedor que, com base no material encaminhado, fizesse uma proposta de preços do ponto de função para as tecnologias Java e PHP, considerando a prestação dos serviços nas dependências do Inep e nas dependências da empresa fornecedora. Foram convidados oito fornecedores, porém somente quatro empresas encaminharam suas propostas de preços, tendo sido obtido o valor médio de R$ 797,38 (setecentos e noventa e sete reais e trinta e oito centavos) por ponto de função, conforme tabela a seguir. Para que fosse possível conhecer a produtividade praticada no mercado, foi solicitado também aos fornecedores que informassem a produtividade em horas para o desenvolvimento de 1 (um) ponto de função nas respectivas tecnologias, o que resultou em produtividade média de 12,67 horas por ponto de função, independente da tecnologia.

Fornecedor

Preço Médio Proposto (Java e PHP)
5

Produtividade Média

Empresa A Empresa B Empresa C Empresa D Valores médios obtidos

R$ 870,00 R$ 920,00 R$ 802,00 R$ 597,50 R$ 797,38

Não informado 13 h. 12 h. 13 h. 12,67 h.

Com base no preço médio obtido e na quantidade a ser contratada, temos o valor estimado de quinze milhões, novecentos e quarenta e sete mil e seiscentos reais anuais, conforme demonstrado na tabela a seguir:
5

O preço médio proposto foi obtido pela aplicação da média aos valores do ponto de função para execução dentro e

fora das instalações do Inep.

58

Quantidade de PFs (por ano) 20.000

Preço Médio do PF no mercado

Valor Estimado (por ano)

R$ 797,38

R$ 15.947.600,00

8. FORMA DE SELEÇÃO DO FORNECEDOR
O Inep tem sua Metodologia de Gestão e Desenvolvimento de Sistemas fundamentada em padrões usuais de mercado, como Scrum, XP, UP, UML, APF e melhores práticas do PMBOK, entre outros. Além disso, o Órgão possui padrões estabelecidos para arquitetura de sistemas e bancos de dados. Dessa forma, os serviços cobertos por esta contratação podem ser definidos como "comuns", conforme previsto no Art. 1º da Lei Nº 10.520, de 17 de julho de 2002, por serem especificados, gerenciados e medidos com técnicas usuais de mercado. Para atender ao disposto na Nota Técnica Nº 02/2008 ­ SEFTI/TCU, a contratação deverá ser realizada utilizando-se a modalidade Pregão, preferencialmente em sua forma eletrônica, conforme previsto na Lei Nº 10.520, de 17 de julho de 2002. O julgamento deverá ser feito pelo critério de "menor preço", respeitados os requisitos e especificações constantes neste TERMO DE REFERÊNCIA.

9. CRITÉRIOS DE SELEÇÃO DO FORNECEDOR
Além do cumprimento das exigências relativas à habilitação jurídica, econômico-financeira e fiscal, somente será habilitada a licitante que cumprir a exigência a seguir: Apresentar atestado(s) de capacidade técnica, emitido(s) por pessoa jurídica de direito público ou privado, em documento timbrado, comprovando experiência na prestação de serviços técnicos de desenvolvimento e manutenção de sistemas em regime de fábrica de software, totalizando um montante mínimo de 10.000 (dez mil) pontos de função, equivalentes a 50% (cinquenta por cento) dos pontos de função estimados para este certame, atendendo aos padrões de qualidade de forma satisfatória. O(s) atestado(s) apresentado(s) deverá(ão) atender à seguinte proporcionalidade entre as plataformas que representam parcelas mais relevantes em termos do volume de serviço a ser contratado:

Java PHP ASP com componentes em VB, Delphi e Joomla!

46% 31% 23%

É obrigatória a comprovação, através do atestado ou do conjunto de atestados, da experiência nas plataformas listadas acima, com a utilização dos bancos de dados Oracle, MySQL e PostGreSQL.

59

O Inep poderá realizar diligência nos atestados de capacidade técnica apresentados para verificação da autenticidade de seu conteúdo, conforme previsto no Art. 43, § 3º da Lei 8.666/93. A quantidade de 10.000 (dez mil) pontos de função é justificável por representar 50% (cinquenta por cento) do total a ser contratado, sendo este percentual considerado razoável e plenamente compatível em quantidade, características e prazo, para demonstrar a capacidade do futuro fornecedor em prestar a integralidade dos serviços, nos termos do inciso II do Art. 30 da Lei Nº 8.666/93.

10. ADEQUAÇÃO ORÇAMENTÁRIA
A despesa com a execução deste contrato correrá à conta de créditos orçamentários consignados ao Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira, Programa de Trabalho Nº 021112, Elemento de Despesa Nº 339039.

11. CONDIÇÕES GERAIS 11.1. Garantia dos serviços
A CONTRATADA deverá garantir os serviços pelo período de um ano, a partir do aceite da Ordem de Serviço pelo cliente. Caberá à CONTRATADA, no período de garantia, sem ônus para o Inep, realizar toda a correção decorrente de erros ou falhas cometidas na execução dos serviços contratados e/ou decorrentes de integração e adequação sistêmica, desde que, comprovadamente, não tenham se dado em função de falhas nas especificações feitas pelo Inep. Estão cobertos pela garantia todos os componentes de software produzidos, bem como toda a documentação relacionada. Será emitida uma Ordem de Serviço específica para os itens em garantia, a qual contribuirá para a Nota Mensal de Avaliação da CONTRATADA. Caso um componente de software e/ou artefato referente a um serviço contratado seja alterado pelo Inep ou por outro fornecedor por ele designado, a garantia cessará apenas para esse produto.

11.2. Subcontratação
Não será permitida a subcontratação total ou parcial do objeto desta contratação.

11.3. Vistoria técnica
Faz-se necessário que as licitantes conheçam a metodologia e o ambiente computacional utilizados pelo Inep, visando obter subsídios para elaboração de sua proposta comercial. As licitantes deverão realizar vistoria técnica nas instalações do Inep no prazo de até 48 (quarenta e oito) horas corridas antes da data de abertura do pregão, respeitando o horário de funcionamento regular do Órgão: das 08:00 às 12:00h e das 14:00 às 18:00h, de segunda a sexta-feira. A licitante deverá agendar a vistoria por meio do telefone nº (61) 2022-3546, no Escritório de Projetos da Diretoria de Tecnologia e Disseminação de Informações Educacionais (DTDIE), no horário de funcionamento regular do Órgão, mencionando o número do edital, a razão social, endereço e

60

telefone da pessoa jurídica licitante e o nome completo e telefone do representante encarregado de realizar a vistoria. Ao término da vistoria será lavrado, por representante da equipe técnica do Inep, o respectivo Atestado de Vistoria, conforme modelo anexo ao presente TERMO DE REFERÊNCIA, o qual será assinado pelo representante da pessoa jurídica licitante. Brasília, 12 de fevereiro de 2010.

(Original assinado por) Andrea de Miranda Ramos Kern Coordenadora-Geral de Sistemas de Informação

Aprovo, conforme disposto no inciso I, § 2º do artigo 7º da Lei 8.666/93.

(Original assinado por) Bruno Adann Sagratzki Coura Diretor de Tecnologia e Disseminação de Informações Educacionais

61

ENCARTES ANEXOS AO TERMO DE REFERÊNCIA
São partes integrantes deste TERMO DE REFERÊNCIA os seguintes Encartes: A B C D E F G H I J K L M N O P Q R ­ Modelo de Atestado de Vistoria ­ Modelo de Termo de Sigilo e Responsabilidade ­ Modelo de Ordem de Serviço ­ Ambiente Computacional do Inep ­ Relação dos Sistemas que compõem o Legado do Inep ­ Metodologia de Gestão e Desenvolvimento de Sistemas do Inep (MGDS) ­ Guia de Desenvolvimento de Sistemas ­ Guia de Arquitetura (para Java e PHP) ­ Guia de Segurança da Informação para Desenvolvimento de Sistemas ­ Guia de Banco de Dados ­ Guia de Contagem de Pontos de Função do Inep ­ Modelo de Declaração de Propriedade Intelectual ­ Modelo de Planilha de Custos e Formação de Preços ­ Modelo de Declaração de Proteção contra o Trabalho do Menor ­ Modelo de Declaração de Pleno Conhecimento e Atendimento às Exigências de Habilitação ­ Modelo de Declaração de Inexistência de Fatos Impeditivos ­ Modelo de Apresentação da Proposta de Preços ­ Modelo de Relatório Mensal de Ordens de Serviço

62

Encarte A ­ Modelo de Atestado de Vistoria

Atestado de Vistoria

Atestamos para fins de comprovação junto ao Pregoeiro/Equipe de apoio do Inep, relativamente ao Edital No. ______/2010, que o Sr. (a) ____________________________________________________, representante da empresa ____________________________________________ _______________________, esteve visitando nesta data, as instalações físicas da Diretoria de Tecnologia e Disseminação de Informações Educacionais ­ DTDIE, do Edifício Sede do Inep, situado no Setor de Rádio e TV Sul, Quadra 701, Bloco M, 5º Andar, Brasília ­ DF, visando obter subsídios para a elaboração de sua proposta para a licitação em questão.

Data: _____/_____/_____

1. Responsável Inep pelo Atestado de Vistoria Nome: _____________________________________________________________________ Matrícula: _____________________________ Assinatura: _______________________________________________________________

2. Representante da Licitante Nome: _____________________________________________________________________ CPF: _____________________________ Assinatura: _______________________________________________________________

63

Encarte B ­ Modelo de Termo de Sigilo e Responsabilidade

Termo de Sigilo e Responsabilidade

O Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira, com sede no SRTVS 701, Quadra 03, Bloco M, Edifício Dário Macedo ­ Brasília ­ DF, aqui denominado Inep, e de outro lado [NOME DO PROFISSIONAL DA CONTRATADA] RG nº [nº do RG] ­ [sigla do órgão emissor do RG], CPF nº [nnn.nnn.nnn-nn], residente e domiciliado na [endereço completo, com CEP, cidade de UF], doravante chamado RESPONSÁVEL, têm entre si justa e acertada a celebração do presente TERMO DE SIGILO E RESPONSABILIDADE, através do qual o RESPONSÁVEL declara conhecer e obedecer as regulamentações descritas na Política Normativa de uso de Recursos de Informática do Inep e demais normas institucionais quanto a segurança e uso da informação e não divulgar, sem autorização, as informações restritas ou confidenciais de propriedade da Instituição, em conformidade com as seguintes cláusulas e condições:

PRIMEIRA ­ O RESPONSÁVEL reconhece que, em razão da sua atuação no INEP, estabelece contato com informações privadas da Autarquia, que são conceituadas como restrita ou confidencial. Estas informações devem ser tratadas com absoluta reserva em qualquer condição e não podem ser divulgadas ou dadas a conhecer a terceiros não autorizados, sem a expressa e escrita autorização da sua chefia ou da Presidência da Autarquia.

SEGUNDA ­ As informações a serem tratadas confidencialmente são aquelas que, por sua natureza, são consideradas como de interesse restrito ou de confidencial, e não são ou não deveriam ser, de conhecimento de terceiros, como por exemplo: 1. Códigos-fonte e códigos-objeto, bem como suas listagens e documentações; 2. Toda a informação existente ou em fase de desenvolvimento no âmbito da Instituição e rotinas desenvolvidas por terceiros, incluindo fluxogramas, estatísticas, especificações, avaliações, resultado de testes, arquivo de dados, versões "beta" de quaisquer programas, etc.; 3. Documentos relativos à lista de usuários do Inep e seus respectivos dados, armazenados sob qualquer forma; 4. Metodologias e ferramentas de serviços, desenvolvidas pelo Inep; 5. Parte ou totalidade dos modelos de dados que subsidiam os sistemas de informações do Inep, sejam eles executados interna ou externamente;

64

6. Parte ou totalidade dos dados ou informações armazenadas nas bases de dados que subsidiam os sistemas de informações do Inep, sejam elas residentes interna ou externamente; 7. Objetivos e conteúdo de processos judiciais, administrativos disciplinares, inquéritos, sindicâncias e de tomadas de contas especiais; 8. Objetivos, conteúdos e resultados dos projetos de pesquisa; 9. Relatórios de atividades da instituição ou de qualquer órgão interno, enquanto não tornados públicos; 10. Circulares e comunicações internas; 11. Quaisquer processos ou documentos classificados como restrito ou confidencial pela Presidência do Inep ou Chefia do Gabinete, por qualquer dos seus Diretores, pelo Procurador Federal ou pelo Auditor Chefe; 12. Conteúdo de e-mails institucionais.

TERCEIRA ­ O RESPONSÁVEL reconhece ser a lista acima meramente exemplificativa e ilustrativa e que outras hipóteses de confidencialidade que já existam, ou que venham a surgir no futuro, devem ser mantidas em segredo. Em caso de dúvida acerca da confidencialidade de determinada informação, o RESPONSÁVEL não deverá divulgar a mesma, até que venha a ser expressamente autorizado, pela Presidência do Inep, a tratá-la diferentemente. Em hipótese alguma interpretar-se-á o silêncio do Inep como liberação de qualquer dos compromissos ora assumidos.

QUARTA ­ O RESPONSÁVEL reconhece expressamente que: Parágrafo Primeiro ­ Ao término da prestação dos serviços, seja por decurso da vigência do contrato nº [número do contrato no Inep], pela rescisão antecipada deste, ou por término de sua relação contratual com a [NOME DA EMPRESA CONTRATADA], deverá o RESPONSÁVEL entregar ao Preposto da CONTRATADA que, por sua vez, obriga-se a repassar ao Gestor do Contrato no Inep, todo e qualquer material de propriedade da Instituição ou produzido na vigência contratual. Parágrafo Segundo ­ Deve devolver, inclusive, suas notas pessoais sob qualquer forma, se houver matéria sigilosa relacionada com a Autarquia, registros de documentos de qualquer natureza que tenham sido usados, criados ou estado sob seu controle. Parágrafo Terceiro ­ Assume o compromisso de não utilizar qualquer informação da Autarquia, adquirida por prestação de serviços ao Inep.

QUINTA ­ O RESPONSÁVEL obriga-se a informar imediatamente ao Inep acerca de qualquer violação das regras de proteção das informações eletrônicas por parte dele ou de quaisquer outras pessoas, inclusive

65

nos casos de violação, não intencional ou culposa, do sigilo das informações da Autarquia.

SEXTA ­ O não cumprimento de quaisquer das cláusulas deste Termo implicará em responsabilidade civil, criminal e administrativa do RESPONSÁVEL, nos moldes previstos na legislação pátria.

SÉTIMA ­ O presente instrumento tem o seu início de vigência na data de sua assinatura. Parágrafo Único ­ As obrigações a que aludem este instrumento perdurarão por 05 (cinco) anos, contados a partir do término do instrumento de avença de que trata o §1º da Cláusula Quarta.

Brasília (DF), ____ de _____________ de ______.

[NOME DO RESPONSÁVEL]

BRUNO ADANN SAGRATZKI COURA Diretor de Tecnologia e Disseminação de Informações Educacionais DTDIE - Inep

66

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço Nº 9999/9999

Encarte C ­ Modelo de Ordem de Serviço

Contrato Nº [99999999/9999]

Data de abertura: [dd/mm/aaaa]

:: Dados do Solicitante
Projeto/Sistema Nome do Solicitante [Nome do projeto/sistema] [Nome do Gerente de Projetos solicitante] Diretoria Cliente [SIGLA]

:: Classificação do Serviço
Fase de iniciação. Desenvolvimento. Manutenção ­ inclusão de funcionalidades. Manutenção ­ alteração ou exclusão de funcionalidades. Manutenção ­ adequações de regras de negócio provocadas por mudanças na legislação. Manutenção ­ conversão (migração) de dados para carga. Manutenção ­ mudança de plataforma tecnológica. Manutenção ­ atualização de plataforma tecnológica. Manutenção ­ melhoria de aplicativos. Manutenção ­ mudança de padrão visual. Manutenção ­ correção de erros. Garantia. Nº da OS original

:: Especificação do Serviço

67

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço Nº 9999/9999
[Especificação dos serviços conforme previsto na MGDS]

Insumos Entregues [Nome do documento/artefato] [Nome do documento/artefato] [Nome do documento/artefato] [Nome do documento/artefato] [Nome do documento/artefato] [Nome do documento/artefato]

Produtos Esperados [Nome do documento/artefato] [Nome do documento/artefato] [Nome do documento/artefato] [Nome do documento/artefato] [Nome do documento/artefato] [Nome do documento/artefato]

68

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço Nº 9999/9999

:: Criticidade
Serviço Urgente Justificativa [justificativa para a urgência do serviço, nos casos de OS de garantia]

:: Cronograma Previsto
Início do Serviço Entrega para Homologação Término do Serviço [dd/mm/aaaa] [dd/mm/aaaa] [dd/mm/aaaa]

:: Cronograma Realizado
Início do Serviço Entrega para Homologação Término do Serviço [dd/mm/aaaa] [dd/mm/aaaa] [dd/mm/aaaa]

:: Autorização para Execução do Serviço
Nome do Gestor de Negócio da Diretoria Cliente no Inep [Nome do Gestor de Negócio da Diretoria Cliente no Inep] Assinatura Data [dd/mm/aaaa]

Nome do Gestor do Contrato [Nome do Gestor do Contrato no Inep] Assinatura

Data [dd/mm/aaaa]

:: Recebimento da Ordem de Serviço para Execução
Nome do Preposto da Contratada [Nome do Preposto da Contratada] Assinatura Data [dd/mm/aaaa]

:: Cancelamento da Ordem de Serviço
69

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço Nº 9999/9999
Motivo [Motivo do cancelamento da OS] Nome do Gestor do Contrato [Nome do Gestor do Contrato no Inep] Assinatura Data [dd/mm/aaaa]

70

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço Nº 9999/9999

:: Homologação do Cliente
Atesto que os requisitos solicitados por esta Diretoria e registrados na presente Ordem de Serviço foram completamente atendidos, motivo pelo qual homologamos o produto de software entregue.

Nome do Gestor de Negócio da Diretoria Cliente no Inep [Nome do Gestor de Negócio da Diretoria Cliente no Inep] Assinatura

Data [dd/mm/aaaa]

:: Tamanho da Ordem de Serviço (em pontos de função)
Medição Estimativa Medição Final [n.nnn] PFs [n.nnn] PFs OS da Fase de Iniciação (5% da Medição Estimativa) OS de Garantia [n.nnn] PFs 0 PFs

:: Valor da Ordem de Serviço (R$)
Tamanho em PFs Valor da OS [n.nnn] PFs R$ [n.nnn,nn] Preço do ponto de função contratado [valor por extenso] R$ [n.nnn,nn]

:: Aceite da Quantidade de Pontos de Função
Reconheço e aceito a quantidade de pontos de função informada nesta Ordem de Serviço.

Nome do Preposto da Contratada [Nome do Preposto da Contratada] Assinatura

Data [dd/mm/aaaa]

:: Ateste da Ordem de Serviço
71

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço Nº 9999/9999
Atesto que os serviços/produtos solicitados foram executados e entregues em conformidade com os requisitos e com a metodologia estabelecida pelo Inep, tendo sido, oportunamente, homologados pelo cliente.

Nome do Gerente de Projetos do Inep [Nome do Gerente de Projetos responsável pelo atendimento à diretoria cliente] Assinatura

Data [dd/mm/aaaa]

Nome do Gestor do Contrato [Nome do Gestor do Contrato no Inep] Assinatura

Data [dd/mm/aaaa]

72

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço Nº 9999/9999

:: Avaliação do Serviço Prestado
Considerações do Avaliador [Considerações do avaliador]

Nome do Responsável pela Avaliação [Nome do responsável pela avaliação do serviço] Assinatura

Data [dd/mm/aaaa]

73

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço ­ Instruções de Preenchimento

Identificação da Ordem de Serviço Nº Informar um número, composto pelas "Numeração sequencial" + "/" + "ano". seguintes partes:

Não deverá ser estabelecida sequência de números específica para cada diretoria atendida. Uma única sequência deverá fornecer números para todas as Ordens de Serviço emitidas durante a vigência do contrato. Contrato Nº Data de abertura Dados do Solicitante Projeto/Sistema Informar o nome e a sigla do projeto ou do sistema a ser desenvolvimento ou modificado. Diretoria Cliente Nome do Solicitante Classificação do Serviço Fase de Iniciação Marcar esta opção caso o serviço a ser realizado seja o levantamento do escopo preliminar de um novo sistema ou o detalhamento de uma demanda de manutenção em sistema existente. Esta opção é obrigatória e deve ser a única a ser marcada em OSs da fase de iniciação. Desenvolvimento Marcar esta opção caso o serviço a ser realizado seja o desenvolvimento de um novo sistema. Esta opção é obrigatória e deve ser a única a ser marcada em OSs de desenvolvimento de novos sistemas. Manutenção Marcar uma ou mais opções caso o serviço a ser realizado seja a
74

Informar o número do contrato. Informar a data de emissão da Ordem de Serviço.

Informar a sigla da área de negócio cliente. Informar o nome do Gerente de Projetos do Inep responsável pelo atendimento à área cliente.

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço ­ Instruções de Preenchimento

. Inclusão de Funcionalidades . Alteração ou funcionalidades . Adequações de exclusão regras

manutenção em sistema existente e cujas funcionalidades não de estejam cobertas por garantia. Pelo menos uma opção deverá ser marcada em OSs de manutenção. de por NOTA:

negócio provocadas mudanças na legislação . . . . .

Caso uma manutenção contenha itens dentro e fora da garantia, Conversão (migração) de dados deverão ser emitidas duas OSs distintas: para carga  Uma OS de manutenção contendo os itens que estejam fora da garantia; Mudança de plataforma  Uma OS de garantia, contendo somente os itens que estejam tecnológica cobertos pela garantia (ver item abaixo). Atualização de plataforma A OS de garantia somente se aplicará à correção de erros tecnológica identificados em funcionalidades desenvolvidas pela Melhoria de aplicativos CONTRATADA, cujo período de garantia esteja vigente. Mudança de padrão visual Toda OS de garantia é uma OS de manutenção.

. Correção de erros Garantia Marcar esta opção caso as funcionalidades a serem corrigidas estejam cobertas pelo período de garantia. Esta opção é obrigatória e deve ser a única marcada em OSs de garantia. Nº da OS original Informar o número da OS na qual foi solicitado o desenvolvimento ou a manutenção da funcionalidade a ser corrigida sob garantia. Se houver mais de uma OS original, informar os números separados por vírgula. Especificação do Serviço Especificação Especificar os serviços a serem realizados, seguindo o previsto nos processos da MGDS para o tipo da OS atual (fase de iniciação, desenvolvimento, manutenção ou garantia).

75

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço ­ Instruções de Preenchimento

Insumos Entregues

Informar a lista de insumos entregues à CONTRATADA, para auxiliá-la na execução da Ordem de Serviço. São considerados insumos os artefatos de documentação, modelos, protótipos, padrões, guias, legislação aplicada ao sistema, enfim, tudo o que puder servir de auxílio na execução da demanda.

Produtos Esperados

Informar a lista de produtos obrigatórios que a CONTRATADA deverá entregar, seguindo o previsto nos processos da MGDS para o tipo de OS atual (fase de iniciação, desenvolvimento, manutenção ou garantia).

Criticidade Serviço Urgente Marcar apenas quando a OS for de garantia e houver urgência na solução do problema. Informar a justificativa para a urgência na solução do problema.

Justificativa Cronograma Previsto Início do Serviço

Informar a data prevista para o início do serviço. Esta data deverá ser negociada com a CONTRATADA. Informar a data prevista para a entrega do software ao Inep, para implantação no ambiente de homologação. Informar a data prevista para o aceite do serviço pelo cliente.

Entrega para Homologação

Término do Serviço Cronograma Realizado Início do Serviço

Informar a data em que o serviço foi efetivamente iniciado. Esta data deverá ser informada pela CONTRATADA ao Gerente de Projetos do Inep responsável pela Ordem de Serviço.

Entrega para Homologação

Informar a data em que o serviço foi efetivamente entregue para implantação no ambiente de homologação. Esta data deverá ser obtida a partir da demanda aberta (no sistema de demandas do Inep)

76

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço ­ Instruções de Preenchimento

pela CONTRATADA, solicitando a implantação do software no ambiente de homologação. Caso tenham sido encontradas não-conformidades em qualquer ponto de controle (avaliação da qualidade ou homologação pelo cliente), informar a data efetiva da última demanda de implantação feita pela CONTRATADA e que resultou na homologação e aceite do serviço pelo cliente. Término do Serviço Informar a data efetiva em que o cliente homologou o serviço e atestou a Ordem de Serviço. Autorização para Execução do Serviço Informar os nomes do Gestor de Negócio da diretoria cliente e do Gestor do Contrato no Inep; Informar a data da autorização para execução do serviço; Assinar e coletar a assinatura do Gestor de Negócio da diretoria cliente. É obrigatório o preenchimento destes campos, assim como a coleta das assinaturas, para que a Ordem de Serviço possa ser encaminhada à CONTRATADA. Recebimento da Ordem de Serviço para Execução Informar o nome do Preposto da CONTRATADA e a data do recebimento da OS para execução; Coletar a assinatura do Preposto da CONTRATADA. É obrigatório o preenchimento destes campos, assim como a coleta da assinatura, para que a Ordem de Serviço possa ser executada. Cancelamento da Ordem de Serviço Motivo Nome do Gestor do Contrato Informar o motivo pelo qual a Ordem de Serviço foi cancelada. Informar o nome do Gestor do Contrato no Inep. Este campo é obrigatório no caso de cancelamento de OS. Data Informar a data do cancelamento da Ordem de Serviço. Este campo é obrigatório no caso de cancelamento de OS.
77

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço ­ Instruções de Preenchimento

Assinatura

Coletar a assinatura do Gestor do Contrato no Inep. A assinatura é obrigatória no caso de cancelamento de OS.

Homologação do Cliente Nome do Gestor de Negócio da Informar o nome do Gestor de Negócio responsável pela Diretoria Cliente no Inep homologação do software. O preenchimento deste campo é obrigatório. Data Informar a data da homologação. O preenchimento deste campo é obrigatório. Assinatura Coletar a assinatura do responsável pela homologação. A assinatura é obrigatória. O prazo de garantia da OS começa a contar imediatamente após a homologação do cliente. Tamanho da Ordem de Serviço (em pontos de função) Medição Estimativa Informar a quantidade estimada de pontos de função das funcionalidades especificadas na Ordem de Serviço. Este valor deverá ser obtido da planilha de contagem estimativa validada e aceita pelo Inep. Este campo é obrigatório. Medição Final Informar a quantidade de pontos de função efetivamente executados pela Ordem de Serviço. Este valor deverá ser obtido da planilha de contagem detalhada validada e aceita pelo Inep. Este campo é obrigatório. OS da Fase de Iniciação Marcar apenas se a OS atual for da fase de iniciação. Se este for o caso, informar a quantidade de pontos de função correspondente a 5% (cinco por cento) dos pontos de função estimados. Este campo é obrigatório para OS da fase de iniciação.
78

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço ­ Instruções de Preenchimento

OS de Garantia

Marcar apenas se a OS atual for de garantia. Se este for o caso, a OS não gerará ônus para o Inep, uma vez que as funcionalidades a serem corridas já foram pagas em outra(s) OS(s). Assim, o valor de uma OS de garantia será sempre de 0 (zero) pontos de função.

Valor da Ordem de Serviço (R$) Tamanho em PFs Preço do contratado Valor da OS ponto de Informar o tamanho de pontos de função da OS. função Informar o preço do ponto de função contratado.

Calcular o valor da OS em Reais, pela multiplicação do tamanho em PFs pelo preço contratado por ponto de função. Informar o valor da OS em R$ e por extenso.

Aceite da Quantidade de Pontos de Função Estes campos deverão ser preenchidos imediatamente após a validação e o aceite da medição final de pontos de função. Somente após o preenchimento destes campos e a coleta da assinatura é que a Ordem de Serviço torna-se passível de faturamento. Nome do Preposto da Contratada Informar o nome do Preposto da CONTRATADA. O preenchimento deste campo é obrigatório. Data Informar a data do aceite pelo Preposto da CONTRATADA. O preenchimento deste campo é obrigatório. Assinatura Coletar a assinatura do Preposto da CONTRATADA. A assinatura é obrigatória. Ateste da Ordem de Serviço Estes campos deverão ser preenchidos imediatamente após a validação e o aceite da medição final de pontos de função.

79

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço ­ Instruções de Preenchimento

Nome do Gerente de Projetos do Informar o nome do Gerente de Projetos do Inep responsável pelo Inep ateste da Ordem de Serviço. O preenchimento deste campo é obrigatório. Nome do Gestor do Contrato Informar o nome do Gestor do Contrato no Inep. O preenchimento deste campo é obrigatório. Data Informar a data do ateste. O preenchimento deste campo é obrigatório. Assinatura Coletar a assinatura do responsável pelo ateste. A assinatura é obrigatória.

80

Ministério da Educação Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira Diretoria de Tecnologia e Disseminação de Informações Educacionais Coordenação-Geral de Sistemas de Informação

Ordem de Serviço ­ Instruções de Preenchimento

Avaliação do Serviço Prestado Considerações do Avaliador Informar as considerações do avaliador acerca da qualidade do serviço prestado, bem como sugerir melhorias no processo e recomendar as providências que julgar necessárias em relação a algum fato ocorrido durante a prestação do serviço. O preenchimento deste campo é obrigatório. Nome do Avaliação Responsável pela Informar o nome do responsável pela avaliação do serviço prestado. Esse responsável deverá obrigatoriamente ser um servidor do Inep. O preenchimento deste campo é obrigatório. Data Informar a data da avaliação do serviço prestado. O preenchimento deste campo é obrigatório. Assinatura Coletar a assinatura do responsável pela avaliação. A assinatura é obrigatória.

81

Encarte D ­ Ambiente Computacional do Inep

O ambiente computacional descrito abaixo representa os principais ativos de hardware e software do Inep, tendo o Órgão ampla liberdade de atualizá-lo, segundo sua necessidade e conveniência administrativa.

Sistemas Operacionais     MS Windows XP; MS Windows Server (versões 2000, 2003 e 2008); RED Hat Linux; Debian Lenny Linux.

Linguagens de Desenvolvimento  Plataformas Web: o Servidor: Java, PHP e ASP; o Cliente: JavaScript, VBScript, HTML, XHTML e CSS. Desktop: Java, Delphi e VB.

 SGBD    

Oracle 10 G ou superior; My-SQL 5x ou superior; PostgreSQL 8x ou superior; SQL Server 2000.

Servidor de Aplicação  JBoss 4x ou superior.

Servidor de Portal  Joomla!

Servidor Web   Apache; IIS.

Servidor de Correio Eletrônico  Microsoft Exchange Server 2007.

Sistema de Diretório  Microsoft Active Directory.
82

Sistema de Armazenamento  Storage Netapp.

Equipamentos ativos de rede   Switches Nortel e 3com; Cabeamento Furukawa Cat 6.

Ferramentas de Apoio ao Desenvolvimento           Subversion; Continuum; Apache Maven; JMeter; Mantis; Eclipse; NetBeans; MS Office; BR Office; JDeveloper.

Ferramentas de Apoio a Análise       BizAgi Process Modeler; FreeMind; Jude; Power Architect; JDeveloper; Eclipse.

Ferramentas de Apoio a Modelagem de Banco de Dados    Power Architect; Data Modeler; JDeveloper.

Ferramenta de Gerenciamento de Projetos e Contratos  OASIS;

Ferramenta de Controle de Demandas

83



Simec Demandas;

Ferramentas de Monitoramento / Gestão de Lan e/ou Wan    Zabbix 1.8; Cacti ; Jboss Operation Network;

Antivírus  McAfee versão 8.7 i;

Backup  BrightStor ARCserver Backup.

84

Encarte E ­ Relação dos Sistemas que compõem o Legado do Inep

Nome do Sistema

Descrição

Tamanho Estimado

Tecnologia

Automação AAE Pagamento de Avaliadores Enem

O sistema Auxílio de Avaliação Educacional é responsável pelo controle do pagamento de avaliadores institucionais. O Enem é o Exame Nacional do Ensino Médio. O sistema é responsável pela coleta de inscrições dos participantes, pela divulgação dos locais de prova e pela divulgação dos resultados.

224 PFs

Java com PostGreSQL

952 PFs

Java com Oracle

ENCCEJA

O Exame Nacional para Certificação de Competências de Jovens e Adultos (Encceja) é um instrumento de avaliação que mede as competências e habilidades de jovens e adultos, residentes no Brasil e no exterior, em nível de conclusão do Ensino Fundamental. O sistema é responsável pela coleta de inscrições dos participantes, pela divulgação dos locais de prova e pela divulgação dos resultados.

560 PFs

Java com Oracle

Celpe-Bras

O Celpe-Bras é o Certificado de Proficiência em Língua Portuguesa para Estrangeiros. No País, o exame é exigido pelas universidades, para ingresso em cursos de graduação e pós-graduação, além de servir para legitimar os diplomas de

448 PFs

Java com Oracle

85

profissionais estrangeiros que pretendem trabalhar no país. O sistema é responsável pela coleta de inscrições dos interessados em realizar o exame. Em breve, os participantes poderão acessar seus boletins de desempenho individual também pelo sistema. Prova Brasil O Prova Brasil é um exame que avalia o rendimento escolar de estudantes de 4ª e 8ª séries do ensino fundamental. O sistema é responsável pela divulgação dos resultados do Prova Brasil. Nome do Sistema Descrição Tamanho Estimado Banco de Itens do ENCCEJA SAEB O sistema é responsável por armazenar as questões utilizadas na elaboração das provas do ENCCEJA. O SAEB é um exame que avalia o rendimento escolar de estudantes de 4ª e 8ª séries do ensino fundamental e também estudantes do 3º ano do ensino médio. 532 PFs Delphi com Oracle 784 PFs Java com Oracle Tecnologia 784 PFs Java com Oracle

O sistema é responsável pela divulgação dos resultados do SAEB.
IDEB O sistema é responsável por divulgar o Índice de Desenvolvimento da Educação Básica (IDEB). BNI O sistema é responsável por armazenar as questões utilizadas na elaboração das provas do SAEB, do Prova Brasil e do Enem. Provinha Brasil A Provinha Brasil é uma avaliação diagnóstica do nível de alfabetização das crianças matriculadas no segundo ano de escolarização das escolas públicas 28 PFs Java com Oracle 784 PFs Delphi com Oracle 84 PFs PHP com Oracle

86

brasileiras. O sistema é responsável por disponibilizar o material didático para aplicação do exame pelas escolas participantes. Enade O Exame Nacional de Desempenho de Estudantes tem o objetivo de aferir o rendimento dos alunos dos cursos de graduação em relação aos conteúdos programáticos, suas habilidades e competências. O sistema é responsável pela coleta de inscrições dos participantes, pela divulgação dos locais de prova e pela divulgação dos resultados. E-Mec Sistema responsável pela tramitação eletrônica dos processos (credenciamento e recredenciamento de Instituições Superiores de Ensino ­ IES, autorização, reconhecimento e renovação de reconhecimento de cursos), armazenamento de currículos dos docentes das IES, dados dos avaliadores e designação de comissão de avaliadores institucionais. Siedsup Sistema responsável pelo cadastramento de instituições e de cursos do ensino superior. Nome do Sistema Descrição Tamanho Estimado Siedsup ­ Aval Sistema responsável pela avaliação de instituições e de cursos do ensino superior. Censo Superior Sistema responsável pela coleta e divulgação de dados do censo da educação 1.568 PFs 1.540 PFs ASP(Componentes em Visual Basic) com Oracle Java com Oracle 4.116 PFs ASP(Componentes em Visual Basic) com Oracle Tecnologia 4.900 PFs PHP com PostGreSQL 1.708 PFs Java com Oracle

87

superior. Educacenso Data Escola Brasil Edudata Simec Demandas Mailing Sistema responsável pela coleta de dados do censo da educação básica. Sistema responsável pela divulgação dos dados do censo da educação básica. Sistema de consulta da evolução dos indicadores educacionais do país. Sistema de gestão de demandas internas do Inep. Sistema que centraliza os cadastros de destinatários de correspondências do Inep. Fale Conosco Sistema que gerencia o atendimento ao cidadão, para esclarecimento de dúvidas acerca das avaliações promovidas pelo Inep. Mala Direta Sistema responsável pelo armazenamento de contatos para envio de e-mails e geração de etiquetas para correspondência. Portal Inep (Internet) InepNet (Intranet) Laboratório Portal Internet do Órgão. Portal Intranet do Órgão. Sistema responsável pelo cadastramento de experiências inovadoras em gestão educacional, permitindo também a avaliação e premiação dos participantes. IGC/CPC Sistema responsável pela divulgação dos índices do ensino superior. 56 PFs Java com Oracle 84 PFs 84 PFs 1.708 PFs Joomla! com MySQL Joomla! com MySQL PHP com Oracle 112 PFs PHP com Oracle 140 PFs PHP com PostGreSQL 2.261 PFs 140 PFs 644 PFs 924 PFs 112 PFs PHP e Java com Oracle Java com Oracle PHP com PostGreSQL PHP com PostGreSQL PHP com Oracle

88

Encarte F ­ Metodologia de Gestão e Desenvolvimento de Sistemas do Inep (MGDS)

Introdução Objetivo
Estabelecer uma Metodologia de Gestão e Desenvolvimento de Sistemas (MGDS) que defina um conjunto de processos e uma documentação mínima para as atividades de desenvolvimento e manutenção de sistemas de informação do INEP (Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira). Com esta metodologia espera-se obter um controle de qualidade e um procedimento ordenado de transferência do conhecimento, visando a diminuição da descontinuidade dos trabalhos e dos riscos.

Durante a elaboração da MGDS, houve a preocupação em estabelecer-se adequado equilíbrio entre padrões reconhecidos internacionalmente para desenvolvimento de software e gerenciamento de projetos e as necessidades da nossa organização.

A MGDS baseia-se na combinação de práticas de Extreme Programming (XP) com o uso da notação UML para a modelagem de sistemas de informação, e das práticas preconizadas pelo Scrum para o gerenciamento de projetos. Todavia, alguns processos do Unified Process (UP) e algumas ferramentas de gerência de projetos do PMBOK também são utilizadas ao longo da definição deste documento. É importante salientar que as abordagens adotadas como base não são empregadas integralmente, sendo que delas foram selecionados os artefatos e as práticas que melhor se adaptam ao INEP, levando-se em consideração a natureza dos sistemas aqui desenvolvidos e a maturidade deste órgão.

A MGDS pode ser comparada a uma "caixa de ferramentas", na qual as práticas e artefatos das metodologias/frameworks "tradicionais" (Open UP, PMBOK e UML) e "ágeis" (XP e Scrum) interagem e são utilizados de forma integrada conforme o contexto do projeto, das equipes e dos fornecedores envolvidos. Essa "caixa de ferramentas" representa hoje o conjunto de processos que evidencia uma documentação mínima para todos os projetos de desenvolvimento e manutenção de sistemas.

Deve-se ressaltar que a metodologia aqui definida presume uma elaboração progressiva, devendo ser atualizada para refletir o crescimento da maturidade nos processos de desenvolvimento de sistemas do INEP.

Aplicação
A MGDS aplica-se à Diretoria de Tecnologia e Disseminação de Informações Educacionais (DTDIE) e às

89

empresas Contratadas de serviços contratadas pelo INEP para atuar nas atividades de desenvolvimento e manutenção de sistemas. A DTDIE é composta por três coordenações:    CGIIE: Coordenação-Geral de Informações e Indicadores Educacionais; CGSI: Coordenação-Geral de Sistemas de Informação; CGIS: Coordenação-Geral de Infraestrutura e Serviços.

Papéis envolvidos
 Analista de Processos do INEP É responsável pelos processos de levantamento de requisitos de negócios e pelo apoio ao Gerente de Projetos do INEP nas atividades de gerenciamento. Este perfil também faz parte da Área de Qualidade do INEP, apoiando nos processos de garantia da qualidade dos produtos entregues pela contratada.  Analista de Testes e Qualidade do INEP É responsável pelos processos relacionados a testes de aceitação e a garantia da qualidade dos produtos (código fonte e documentação) entregues pela contratada.  Área de Infraestrutura do INEP Área subordinada à CGIS, é composta pelos perfis: Administrador de Banco de Dados, Administrador de Dados, Gerente de Telecomunicações, Gerente de Segurança, Administrador de Redes e Analista de Segurança. Esta área é responsável por todas as atividades relacionadas à Infraestrutura de TI.  Área de Qualidade do INEP Área subordinada à CGSI, é composta pelos perfis: Analista de Teste e Qualidade, e Analista de Processos. Esta área é responsável pelos processos de garantia da qualidade dos produtos entregues pela contratada.  Área de Suporte do INEP Área subordinada à CGIS, é composta por um Gerente de Suporte e técnicos de informática. Esta área é responsável pelo atendimento às demandas dos usuários relacionadas à suporte de informática.  Arquiteto de Sistemas do INEP É responsável pelos processos relacionados à definição da arquitetura do sistema a ser desenvolvido.  Cliente Representante de uma das áreas de negócio do INEP ou do MEC. É responsável pela

solicitação e aceite dos serviços de desenvolvimento e de manutenção de sistemas de informação.

90



Gerente de Projetos do INEP É responsável por gerenciar os projetos de desenvolvimento e manutenção de sistemas de informação.



Gestor do Contrato no Inep É responsável pela abertura e encerramento das Ordens de Serviço, atividades nas quais é auxiliado pelo Gerente de Projetos do Inep.



Contratada Empresa contratada para prestação de serviços de desenvolvimento e manutenção de sistemas de informação. Este papel é desempenhado pelo Preposto da Contratada e seus técnicos.



Especialista em Pontos de Função Profissional certificado em pontos de função pelo IFPUG (CFPS). Participa nos processos de contagem e conferência em pontos de função.

Definições
     Ator ­ alguém ou alguma coisa que interage com um sistema para atingir um determinado objetivo. Exemplos: usuários, outros sistemas, planilhas manipuladas pelo sistema, etc; Backlog ­ é a coleção de funcionalidades definidas pelo cliente e que geram valor para o negócio; Caso de uso ­ seqüência de ações que um sistema executa, de forma a gerar um resultado de valor para o usuário; Caso de teste ­ Documentação que especifica entradas, resultados previstos e condições de execução de um conjunto de testes; Especificação de caso de uso ­ especificação textual de cada caso de uso, representada através de fluxos de eventos. A especificação do caso de uso apresenta, de forma seqüencial, o diálogo entre o ator e o sistema; Modelo de dados ­ representação gráfica da estrutura e do relacionamento das tabelas de um sistema de informação; PFs ­ Pontos de Função; OS ­ Ordem de Serviço; Sistema de Demandas ­ sistema de gestão de demandas do Inep, atualmente chamado de Simec Demandas; Subversion ­ também conhecido por SVN, aplicativo utilizado no INEP para armazenamento e controle de versões de documentos e código-fonte; Ferramenta de Gerenciamento de Projetos do Órgão ­ sistema de gerenciamento de projetos e ordens de serviço do Inep. Scrum ­ É uma abordagem ágil para o gerenciamento de projetos. Fornece práticas que ajudam gerentes a tornar mais dinâmico e gerenciável o ambiente de desenvolvimento de software; Sprint ­ representa uma iteração no processo de desenvolvimento de software, na qual o time do projeto irá produzir uma parte do sistema definida pelo cliente. O conceito de Sprint nos remete à necessidade de estarmos freqüentemente entregando algo de valor para o cliente. Diferentemente dos modelos "tradicionais", onde você desenvolve o produto em um longo período de tempo e, apenas no final ­ com o produto "pronto" - o entrega ao cliente, em Scrum

       

91

você sempre entregará "parte" do produto em pequenos intervalos de tempo, sendo que esta "parte" é a prioridade do cliente, ou seja, o que ele realmente está precisando naquele momento;    Backlog do Sprint ­ é um subconjunto do Backlog, priorizado na reunião de planejamento pelo cliente e que representa as funcionalidades que serão desenvolvidas em um determinado Sprint; Reunião de planejamento do Sprint ­ reunião realizada no início do Sprint, para planejar e definir o que será entregue; Reunião de retrospectiva do Sprint ­ reunião realizada no fim de cada Sprint, para registrar as lições aprendidas e fazer os ajustes possíveis para o próximo, proporcionando assim a melhoria contínua do processo; Reunião de Revisão do Sprint ­ o objetivo da reunião é apresentar o que a equipe realizou durante o Sprint e avaliar a necessidade de homologação; TI ­ Tecnologia da Informação; XP (eXtreme Programming) ­ É uma abordagem ágil para a engenharia de projetos de software. Como o próprio nome diz, é extremamente focada no desenvolvimento, e tem como principal característica a programação em par.

  

Visão Geral da MGDS
A Metodologia de Gestão e Desenvolvimento de Sistemas ­ MGDS é composta por três fases que abrangem o ciclo de vida do projeto/serviço, são elas: Iniciação, Execução e Encerramento. Estas fases são compostas por processos e subprocessos. Abaixo é apresentado um diagrama e um mapa mental, que descrevem de forma macro a MGDS.

92

Nos próximos tópicos cada fase e seus respectivos processos e subprocessos serão descritos pela seguinte taxonomia:        Nome do processo; Finalidade; Responsável; Participantes; Insumos; Produtos/Resultados; Descrição das atividades do processo;

Observação: a fase de iniciação poderá ser realizada pela equipe do Inep ou pela Contratada. A fase de execução sempre será de responsabilidade da Contratada e a fase de Encerramento sempre será de responsabilidade da equipe do Inep.

93

Fase de Iniciação

94

Detalhamento dos Processos da Fase de Iniciação

Início da Fase de Iniciação A fase de iniciação começa quando um Gerente de Projetos do Inep recebe via Sistema de Demandas, uma solicitação de desenvolvimento ou de manutenção de sistemas de informação. O Gerente de Projetos do Inep avalia o tipo da demanda e a disponibilidade de equipe para realizar o detalhamento junto ao Cliente, decidindo quem será responsável pelo detalhamento da demanda. Caso o responsável pelo detalhamento da demanda (fase de iniciação) venha a ser a Contratada, será aberta uma OS específica para esta fase através do processo "Formalizar OS da fase de iniciação". De acordo com o tipo da demanda, o fluxo é direcionado:   Se a demanda for para um novo sistema, o fluxo segue para o processo "Levantar o escopo preliminar junto ao cliente"; Se for uma demanda de manutenção, o fluxo segue para o processo "Detalhar a demanda de manutenção".

Formalizar OS da fase de iniciação Finalidade Responsável Participantes Autorizar a Contratada a realizar o detalhamento da demanda junto ao Cliente. Gestor do Contrato no Inep. Gerente de Projetos do Inep; Contratada. Insumos Produtos/Resultados Solicitação registrada no Sistema de Demandas. Ordem de Serviço da fase de iniciação.

O Gestor do Contrato no Inep abre a Ordem de Serviço, autorizando a Contratada a realizar o detalhamento da demanda junto ao Cliente. Se a demanda for para um novo sistema, o fluxo segue para o processo "Levantar o escopo preliminar junto ao cliente". Se for uma demanda de manutenção, o fluxo segue para o processo "Detalhar a demanda de manutenção". NOTA: Essa Ordem de Serviço será atualizada posteriormente para contemplar o custo em pontos de função desta fase, que corresponderá a um percentual sobre a contagem estimativa de toda a demanda.

95

Levantar o escopo preliminar junto ao cliente Finalidade Responsável Detalhar a demanda de desenvolvimento de um novo sistema. Gerente de Projetos do Inep; ou Contratada. Participantes Cliente; Analista de Processos do Inep; Arquiteto de Sistemas do Inep; Área de Qualidade do Inep; Área de Infraestrutura do Inep. Insumos Solicitação registrada no Sistema de Demandas ou Ordem de Serviço da fase de iniciação (se a Contratada for a responsável por esta fase); Guia de Arquitetura; Guia de Desenvolvimento de Sistemas; Guia de Banco de Dados; Guia de Segurança da Informação para Desenvolvimento de Sistemas; Ferramentas e Técnicas do Scrum; Subversion. Produtos/Resultados Documento de Visão; Documento de Arquitetura do Projeto; Modelo Sintético de Casos de Uso; Modelo de Dados (versão preliminar); Aceite do Cliente na Ordem de Serviço de iniciação. O responsável realiza quantas reuniões sejam necessárias com os participantes envolvidos até que seja possível delimitar o escopo preliminar do projeto. Em seguida, elabora os artefatos previstos na OS e cria, no Subversion, a estrutura de documentos do projeto, armazenando nesta estrutura os artefatos criados. Após a validação do escopo junto ao Cliente (aceite do cliente é obtido através de sua assinatura na Ordem de Serviço da fase de iniciação), o fluxo segue para:   O processo "Estimar os PFs da demanda" se o detalhamento da demanda estiver sendo executado por servidores do Inep; e O processo "Avaliar a qualidade" se o detalhamento da demanda estiver sendo executado pela Contratada.

96

Detalhar a demanda de manutenção Finalidade Responsável Detalhar a demanda de manutenção em sistema existente. Gerente de Projetos do Inep; ou Contratada. Participantes Cliente; Analista de Processos do Inep; Arquiteto de Sistemas do Inep; Área de Qualidade do Inep; Área de Infraestrutura do Inep Insumos Solicitação registrada no Sistema de Demandas ou Ordem de Serviço da fase de iniciação (se a Contratada for a responsável por esta fase); Documentação do sistema; Ferramentas e Técnicas do Scrum; Guia de Arquitetura; Guia de Desenvolvimento de Sistemas; Guia de Banco de Dados; Guia de Segurança da Informação para Desenvolvimento de Sistemas; Subversion. Produtos/Resultados Documento de Requisitos para Manutenção;

Aceite do Cliente na Ordem de Serviço de iniciação. O responsável realiza quantas reuniões sejam necessárias com os participantes envolvidos até que seja possível delimitar o escopo da manutenção. Em seguida, elabora/atualiza os artefatos previstos na OS, atualizando também a estrutura de documentos do projeto/serviço no Subversion. Após a validação do escopo junto ao Cliente (aceite do cliente é obtido através de sua assinatura na Ordem de Serviço da fase de iniciação), o fluxo segue para:   O processo "Estimar os PFs da demanda" se o detalhamento da demanda estiver sendo executado por servidores do Inep; e O processo "Avaliar a qualidade" se o detalhamento da demanda estiver sendo executado pela Contratada.

97

Avaliar a qualidade Finalidade Avaliar a documentação produzida na Fase de Iniciação pela Contratada, com foco na garantia da qualidade desta documentação. A documentação desta fase é diferenciada de acordo com o tipo de demanda. Responsável Participantes Área de Qualidade do Inep. Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Se o tipo de demanda for Desenvolvimento de Sistemas:       Documento de Visão; Documento de Arquitetura do Projeto; Modelo Sintético de Casos de Uso; Modelo de Dados (versão preliminar);

Se o tipo de demanda for Manutenção de Sistemas: Documento de Requisitos para Manutenção; Documentação do Sistema.

Guia de Arquitetura; Guia de Desenvolvimento de Sistemas; Guia de Banco de Dados; Guia de Segurança da Informação para Desenvolvimento de Sistemas. Produtos/Resultados Documentação homologada pela área de TI; ou Lista de não-conformidades encontradas. A Área de Qualidade do Inep realiza as seguintes atividades:   Verificação dos documentos entregues/atualizados pela Contratada à luz dos padrões definidos pelo Inep; Avaliação dos documentos entregues/atualizados em relação à aderência ao negócio (escopo previsto no projeto ou serviço).

Caso sejam encontradas não-conformidades, a Área de Qualidade do Inep documenta-as no artefato Lista de não-conformidades e o fluxo é direcionado de acordo com o tipo da demanda (se for demanda de Desenvolvimento de Sistemas, o fluxo volta para o processo "Levantar o escopo preliminar junto ao cliente, se for demanda de Manutenção de Sistemas, o fluxo volta para o processo "Detalhar a demanda de manutenção") para as correções necessárias. Caso contrário, a Área de Qualidade do Inep homologa a documentação da fase de iniciação e o fluxo segue para o processo "Estimar os PFs da demanda".

98

Estimar os PFs da demanda Finalidade Estimar o tamanho da demanda de desenvolvimento de novo sistema ou de manutenção em sistema existente. Responsável Gerente de Projetos do Inep; ou Contratada. Participantes Insumos Especialista em pontos de função da Contratada ou do Inep. Guia de Contagem de Pontos de Função do Inep; Para demanda de novo sistema:  Documento de Visão;  Documento de Arquitetura do Projeto;  Modelo Sintético de Casos de Uso;  Modelo de Dados (versão preliminar). Para demanda de manutenção em sistema existente:  Documento de Requisitos para Manutenção. Produtos/Resultados Planilha de contagem estimativa de pontos de função da demanda.

O responsável estima os pontos de função da demanda conforme previsto no Guia de Contagem de Pontos de Função do Inep, documentando-a no modelo apropriado, disponível nesta MGDS. Caso este processo tenha sido realizado pela Contratada, o fluxo segue:  Para o subprocesso Medição de PF (evento: Medição estimativa realizada) - a planilha de pontos de função segue para validação dos pontos de função envolvidos na fase de iniciação. Com os PFs da fase de iniciação aceitos, os Processos de Encerramento (compõem a Fase de Encerramento) são executados, com o objetivo de encerrar a Ordem de Serviço da Fase de Iniciação.

As regras a seguir deverão ser aplicadas sempre que a estimativa tiver sido realizada pelo Inep ou após a validação e o aceite dos pontos de função (da fase de iniciação pela Área de Qualidade do Inep) estimados pela Contratada: Para demanda de novo sistema:  O fluxo segue em paralelo para os processos "Elaborar o backlog" e "Cadastrar o projeto na ferramenta de gerenciamento".

Para demanda de manutenção de sistema existente:   Se houver itens dentro da garantia, o fluxo segue para o processo "Formalizar OS de garantia"; Se houver itens fora da garantia, o Gerente de Projetos do Inep avalia o tamanho estimado da demanda: o Se a quantidade estimada de pontos de função for menor ou igual a 100 PFs, estará caracterizado um serviço de manutenção. O fluxo segue para o processo "Formalizar Ordem de Serviço de manutenção";

99

o

Se a quantidade estimada de pontos de função for superior a 100 PFs, estará caracterizado um projeto de manutenção. O fluxo segue em paralelo para os processos "Elaborar o backlog" e "Cadastrar o projeto na ferramenta de gerenciamento".

NOTA: Em uma mesma demanda poderá haver itens cobertos e itens descobertos pela garantia. Nesses casos, serão abertas duas Ordens de Serviço, que deverão ser executadas em conjunto, para o perfeito atendimento à demanda de manutenção de sistemas do Cliente.

Elaborar o backlog Finalidade Responsável Participantes Elaborar a lista de funcionalidades a ser entregues pelo projeto. Gerente de Projetos do Inep. Cliente; Analista de Processos do Inep; Contratada. Insumos Ferramentas e Técnicas do Scrum; Subversion. Para demanda de novo sistema:  Documento de Visão;  Documento de Arquitetura do Projeto;  Modelo Sintético de Casos de Uso;  Modelo de Dados (versão preliminar). Para demanda de manutenção em sistema existente:  Documento de Requisitos para Manutenção. Produtos/Resultados Backlog.

O responsável elabora o backlog e, em conjunto com o cliente, prioriza as funcionalidades. O fluxo segue para o processo "Realizar reunião de planejamento".

Cadastrar o projeto na ferramenta de gerenciamento Finalidade Responsável Participantes Insumos Produtos/Resultados Registrar o projeto na Ferramenta de Gerenciamento de Projetos do Órgão. Gerente de Projetos do Inep. Analista de Processos do Inep. Ferramenta de Gerenciamento de Projetos do Órgão. Projeto cadastrado na ferramenta

100

O Gerente de Projetos do Inep cadastra o projeto de desenvolvimento ou de manutenção na ferramenta de gerenciamento de projetos em uso no Inep, deixando-o disponível para monitoramento e controle. O fluxo segue para o processo "Realizar reunião de planejamento".

Realizar reunião de planejamento Finalidade Responsável Participantes Realizar o planejamento da primeira iteração (sprint) a ser executada. Contratada. Cliente; Gerente de Projetos do Inep; Arquiteto de Sistemas do Inep; Área de Qualidade do Inep; Área de Infraestrutura do Inep. Insumos Backlog; Se o tipo de demanda for Desenvolvimento de Sistemas:       Documento de Visão; Documento de Arquitetura do Projeto; Modelo Sintético de Casos de Uso; Modelo de Dados (versão preliminar);

Se o tipo de demanda for Projeto de Manutenção: Documento de Requisitos para Manutenção; Documentação do Sistema;

Guia Arquitetura; Guia Banco de Dados; Guia Segurança da Informação para Desenvolvimento de Sistemas; Guia de Desenvolvimento de Sistemas; Ferramentas e Técnicas do Scrum; Subversion; Ferramenta de Gerenciamento de Projetos do Órgão. Produtos/Resultados Backlog do Sprint; Backlog atualizado; Protótipo (se for o caso). Os participantes selecionam, no backlog, o conjunto de funcionalidades a ser entregue pela iteração.

101

Essas funcionalidades irão compor o backlog do sprint. Em seguida, os itens do backlog do sprint são divididos em tarefas. Após a divisão dos itens em tarefas, os participantes definem o prazo de entrega e o conceito de "PRONTO" para esse sprint. O fluxo segue para o processo "Estimar os PFs do sprint". NOTAS: O prazo de entrega corresponde ao período de tempo que a Contratada tem para executar o sprint, realizar os testes funcionais e/ou de desempenho e elaborar o procedimento de implantação. Esse prazo nunca poderá ser superior a 4 semanas. Este processo representa o ínicio do primeiro sprint.

Estimar os PFs do sprint Finalidade Responsável Participantes Insumos Estimar o tamanho da iteração (sprint) a ser entregue. Contratada. Especialista em pontos de função da Contratada Guia de Contagem de Pontos de Função do Inep; Backlog do Sprint; Protótipo (se houver); Se o tipo de demanda for Desenvolvimento de Sistemas:       Produtos/Resultados Documento de Visão; Documento de Arquitetura do Projeto; Modelo Sintético de Casos de Uso; Modelo de Dados (versão preliminar);

Se o tipo de demanda for Projeto de Manutenção: Documento de Requisitos para Manutenção; Documentação do Sistema.

Planilha de contagem estimativa de pontos de função da iteração (sprint).

O responsável estima os pontos de função da demanda conforme previsto no Guia de Contagem de Pontos de Função do Inep, documentando-a no modelo apropriado, disponível nesta MGDS. A planilha de pontos de função segue para validação, conforme detalhado na seção relativa aos processos do Subprocesso de Medição de PF. Após a validação e aceite dos pontos de função, o fluxo segue para o processo "Formalizar OS do

102

sprint".

Formalizar OS do sprint Finalidade Autorizar a Contratada a executar as funcionalidades listadas no Backlog do Sprint. Responsável Participantes Gestor do Contrato no Inep. Gerente de Projetos do Inep; Analista de Processos do Inep; Contratada. Insumos Backlog do Sprint; Planilha de contagem estimativa de pontos de função da iteração (sprint) validada e aceita. Produtos/Resultados Ordem de Serviço do sprint.

O Gestor do Contrato no Inep abre a Ordem de Serviço, autorizando a Contratada a executar as funcionalidades listadas no backlog do sprint. O fluxo segue conforme previsto nos Processos de Desenvolvimento de Sistemas, detalhados adiante neste documento. Se tiver sido aberta uma Ordem de Serviço para a fase de iniciação, o fluxo segue em paralelo para o processo "Encerrar OS da fase de iniciação".

Formalizar OS de garantia Finalidade Autorizar a Contratada a corrigir defeitos que passaram despercebidos durante a etapa de homologação e que estejam cobertas pelo prazo de garantia. Responsável Participantes Gestor do Contrato no Inep. Gerente de Projetos do Inep; Analista de Processos do Inep; Contratada. Insumos Produtos/Resultados Documento de Requisitos para Manutenção. Ordem de Serviço de garantia.

O Gestor do Contrato no Inep abre a Ordem de Serviço de garantia, autorizando a Contratada a

103

executar as correções listadas no Documento de Requisitos para Manutenção. O fluxo segue conforme previsto nos Processos de Manutenção de Sistemas, detalhados adiante neste documento. NOTA: As Ordens de Serviço de garantia não geram ônus financeiro para o Inep.

Formalizar OS de serviço de manutenção Finalidade Autorizar a Contratada a realizar um serviço de manutenção de sistema existente. Responsável Participantes Gestor do Contrato no Inep. Gerente de Projetos do Inep; Analista de Processos do Inep; Contratada. Insumos Produtos/Resultados Documento de Requisitos para Manutenção. Ordem de Serviço de Manutenção.

O Gestor do Contrato no Inep abre a Ordem de Serviço, autorizando a Contratada a executar a manutenção descrita no Documento de Requisitos para Manutenção. O fluxo segue conforme previsto nos Processos de Manutenção de Sistemas, detalhados adiante neste documento.

104

Fase de Execução Processos de Desenvolvimento de Sistemas

105

Detalhamento dos Processos de Desenvolvimento de Sistemas

Início do processo O processo começa quando a Contratada recebe a Ordem de Serviço autorizando a execução de uma iteração (sprint) para entregar um subconjunto de funcionalidades de um projeto de desenvolvimento de novo sistema ou de um projeto de manutenção cuja estimativa em pontos de função seja maior que 100 PFs. O fluxo segue para o processo "Executar o sprint".

Executar o sprint Finalidade Executar todas as atividades necessárias à entrega do conjunto de funcionalidades listadas no Backlog do Sprint. Responsável Participantes Contratada. Cliente; Gerente de Projetos do Inep; Analista de Processos do Inep; Arquiteto de Sistemas do Inep; Área de Suporte do Inep; Área de Infraestrutura do Inep. Insumos Backlog do Sprint; Documento de Visão; Documento de Arquitetura do Projeto; Modelo de Dados (preliminar); Modelo Sintético de Casos de Uso; Guia de Arquitetura; Guia de Banco de Dados; Guia de Segurança da Informação para Desenvolvimento de Sistemas; Guia de Desenvolvimento de Sistemas; Ferramentas e Técnicas do Scrum; Técnicas do XP; Sistema de Demandas; Subversion.

106

Produtos/Resultados

Documento de Visão atualizado; Documento de Arquitetura do Projeto atualizado; Modelo Sintético de Casos de Uso atualizado; Diagrama de Classes (se for o caso); Modelo de Dados e scripts; Casos de Teste; Especificações de Casos de Uso; Demandas para a infraestrutura (se for o caso); Demandas para o suporte (se for o caso); Memória de Reunião (uma para cada reunião realizada); Código-fonte e testes unitários; Relatório de Cobertura de Testes; Relatório de Status; Artefatos complementares gerados; Demais produtos pertinentes.

A Contratada realiza as seguintes atividades, não necessariamente nesta ordem:         Detalhamento dos itens do backlog do sprint junto ao Cliente, documentando-os como especificações de casos de uso; Atualização dos documentos gerados até o momento; Realização de reunião com os participantes para esclarecer regras de negócio (se for o caso); Elaboração de todos os artefatos previstos na Ordem de Serviço; Geração de código-fonte e testes unitários em conformidade com os guias disponibilizados como insumos neste processo; Elaboração de Relatório de Status conforme a periodicidade acertada com o Gerente de Projetos do Inep; Emitir Relatório de Cobertura de Testes após término da codificação; Demais atividades necessárias à perfeita construção e entrega do sprint.

A qualquer momento, se houver necessidade de serviços de infraestrutura ou de suporte, a Contratada registra uma demanda no Sistema de Demandas, que dispara uma instância do processo "Atender demanda de infraestrutura ou de suporte". Após o término da implementação, o fluxo segue para o processo "Realizar testes funcionais e/ou de desempenho". NOTA: O prazo para entrega do sprint começa a contar neste processo.

107

Realizar testes funcionais e/ou de desempenho Finalidade Realizar testes funcionais e se necessário testes de desempenho/stress, de acordo com o volume de acessos esperado. Responsável Participantes Insumos Contratada Não há. Código-fonte e testes unitários; Relatório de Cobertura de Testes; Casos de Teste. Produtos/Resultados Scripts dos testes funcionais; Casos de Teste atualizados; Resultados dos Testes. A Contratada realiza as seguintes atividades:      Geração de scripts de testes funcionais; Realização de testes funcionais; Realização de testes de desempenho/stress (se necessário); Atualização dos casos de teste (se necessário); Realização de outros testes necessários para garantir o perfeito funcionamento do sistema produzido até o momento, se necessário realizar testes de regressão.

Após o término dos testes, a Contratada emite um Relatório, no qual estão documentados os Resultados dos Testes. Recomenda-se a utilização de uma ferramenta de controle de "bugs" para gerir este processo e possibilitar a emissão do relatório citado acima. Caso o sistema produzido passe nos testes, o fluxo segue para o processo "Elaborar procedimento de implantação". Caso contrário, o fluxo retorna ao processo "Executar o sprint", para que as correções necessárias no sistema sejam realizadas.

Elaborar procedimento de implantação Finalidade Documentar o procedimento necessário para a perfeita implantação do sistema nos ambientes de homologação e de produção. Responsável Participantes Contratada. Gerente de Projetos do Inep; Analista de Processos do Inep; Área de Infraestrutura do Inep.

108

Insumos

Documentação do sistema; Código-fonte.

Produtos/Resultados

Procedimento de Implantação.

A Contratada documenta, conforme modelo fornecido pelo Inep, o procedimento que viabilizará a implantação dos produtos gerados pelo sprint atual nos ambientes de homologação e de produção. A Contratada registra uma demanda no Sistema de Demandas, solicitando a implantação do sistema no ambiente de homologação. Nesta demanda é referenciado o conteúdo da implantação, que deverá estar disponível no Subversion, e anexado o Procedimento de Implantação. O fluxo segue para o processo "Realizar a implantação no ambiente de homologação". NOTAS: O prazo para entrega do sprint expira neste processo; Cada sprint possuirá um Procedimento de Implantação.

Atender demanda de infraestrutura ou de suporte Finalidade Atender demanda de infraestrutura ou de suporte, necessárias durante a execução do sprint. Responsável Área de Infraestrutura do Inep; ou Área de Suporte do Inep. Participantes Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Produtos/Resultados Demanda aberta no Sistema de Demandas. Demanda atendida e fechada; ou Demanda cancelada (se for o caso). O responsável atende a solicitação da Contratada, fechando a demanda no Sistema de Demandas.

Realizar a implantação no ambiente de homologação Finalidade Realizar a implantação, no ambiente de homologação, dos produtos gerados pelo sprint. Responsável Área de Infraestrutura do Inep.

109

Participantes

Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep.

Insumos

Código-fonte; Procedimento de implantação; Demanda Subversion. aberta no Sistema de Demandas;

Produtos/Resultados

Sistema disponível no ambiente de homologação.

A Área de Infraestrutura do Inep realiza a implantação conforme a demanda aberta no Sistema de Demandas pela Contratada. O fluxo segue para o processo "Avaliar a qualidade".

Avaliar a qualidade Finalidade Avaliar as funcionalidades desenvolvidas ou atualizadas no sprint, com foco na garantia da qualidade dos produtos entregues. Responsável Participantes Área de Qualidade do Inep. Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Código-fonte e testes unitários; Scripts dos testes funcionais; Documentação do sistema (todos os artefatos e demais produtos gerados ou atualizados pelo sprint atual); Guia de Arquitetura; Guia de Desenvolvimento de Sistemas; Guia de Banco de Dados; Guia de Segurança da Informação para Desenvolvimento de Sistemas. Produtos/Resultados Produto homologado pela área de TI; ou Lista de não-conformidades encontradas. A Área de Qualidade do Inep realiza as seguintes atividades:   Verificação dos documentos entregues pela Contratada à luz dos padrões definidos pelo Inep; Avaliação dos documentos entregues em relação à aderência ao negócio (escopo previsto no

110

projeto ou serviço);   Realização de testes de aceitação, a partir dos casos de teste e dos scripts dos testes funcionais entregues pela Contratada; Avaliação da qualidade do código-fonte de acordo com o Guia de Arquitetura e Guia de Desenvolvimento de Sistemas;

Caso sejam encontradas não-conformidades, a Área de Qualidade do Inep documenta-as no artefato Lista de não-conformidades e o fluxo segue de volta ao processo "Executar o sprint", para as correções necessárias. Caso contrário, a Área de Qualidade do Inep homologa o sistema/módulo (entregue pelo sprint) sob o ponto de vista da área de TI e o fluxo segue para o processo "Formalizar a entrega do(s) sprint(s) (reunião de revisão)".

Formalizar a entrega do(s) sprint(s) (reunião de revisão) Finalidade Realizar reunião para formalizar a entrega das funcionalidades desenvolvidas durante a execução do sprint. Responsável Participantes Gerente de Projetos do Inep. Cliente; Contratada; Analista de Processos do Inep. Insumos Backlog do sprint; Funcionalidades disponíveis no ambiente de homologação relacionadas ao sprint atual; Ferramentas e Técnicas do Scrum. Produtos/Resultados Memória de Reunião; Avaliação do Sprint; Memorando. O Gerente de Projetos do Inep avalia, em conjunto com os participantes, se as entregas acordadas para o sprint foram efetivamente realizadas, elaborando a seguir o artefato Avaliação do Sprint. Se o sistema contiver partes homologáveis, o Gerente de Projetos do Inep encaminha um memorando solicitando ao Cliente a homologação do sistema disponível no ambiente de homologação. O fluxo segue para o Subprocesso de Homologação, descrito adiante neste documento. Em paralelo, o fluxo segue para o processo "Realizar reunião de retrospectiva do sprint". Após a homologação do sistema/módulo pelo Cliente, o Gerente de Projetos do Inep abre uma demanda no Sistema de Demandas, para implantação do sistema/módulo no ambiente de produção (na demanda é referenciado o conteúdo da implantação, que deverá estar disponível no Subversion, e

111

anexado o Procedimento de Implantação.), direcionando o fluxo para o processo "Realizar a implantação no ambiente de produção". Em paralelo, é executado o Subprocesso Medição de PF, descrito adiante neste documento. A saída do subprocesso Medição de PF são os PFs do sprint aceitos, que se tornam insumos para os processos da Fase de Encerramento, responsáveis pelo encerramento da Ordem de Serviço do sprint.

Realizar reunião de retrospectiva do sprint Finalidade Realizar reunião para avaliar os pontos fortes e fracos durante a execução do sprint, visando melhorias no processo de trabalho. Responsável Participantes Contratada. Gerente de Projetos do Inep; Analista de Processos do Inep; Área de Qualidade do Inep; Área de Infraestrutura do Inep. Insumos Backlog do sprint; Avaliação do sprint; Ferramentas e Técnicas do Scrum. Produtos/Resultados Artefato Avaliação do Sprint atualizado.

Após analisar e debater, com os demais participantes, o trabalho realizado no sprint, a Contratada atualiza o artefato Avaliação do Sprint com o registro das lições aprendidas e das ações de melhoria para os próximos sprints. Caso o backlog não tenha terminado, o fluxo segue para o processo "Realizar reunião de planejamento", onde se planejará a execução do próximo sprint. NOTA: Este processo representa o fim do sprint.

Realizar reunião de planejamento Finalidade Responsável Participantes Realizar o planejamento da iteração (sprint) a ser executada. Contratada. Cliente; Gerente de Projetos do Inep; Analista de Processos do Inep;

112

Arquiteto de Sistemas do Inep; Área de Qualidade do Inep; Área de Infraestrutura do Inep. Insumos Backlog; Documentação do sistema (todos os artefatos e demais produtos existente até o momento); Guia Arquitetura; Guia Banco de Dados; Guia Segurança da Informação para Desenvolvimento de Sistemas; Guia de Desenvolvimento de Sistemas; Ferramentas e Técnicas do Scrum; Subversion; Ferramenta de Gerenciamento de Projetos do Órgão. Produtos/Resultados Backlog Backlog atualizado; Protótipo (se for o caso). Os participantes selecionam, no backlog, o conjunto de funcionalidades a ser entregue pela iteração. Essas funcionalidades irão compor o backlog do sprint. Em seguida, os itens do backlog do sprint são divididos em tarefas. Após a divisão dos itens em tarefas, os participantes definem o prazo de entrega e o conceito de "PRONTO" para esse sprint. O fluxo segue para o processo "Estimar os PFs do sprint". NOTA: O prazo de entrega corresponde ao período de tempo que a Contratada tem para executar o sprint, realizar os testes funcionais e/ou de desempenho e elaborar o procedimento de implantação. Esse prazo nunca poderá ser superior a 4 semanas. do sprint;

Estimar os PFs do sprint Finalidade Responsável Participantes Insumos Estimar o tamanho da iteração (sprint) a ser entregue. Contratada. Especialista em pontos de função da Contratada. Guia de Contagem de Pontos de Função do Inep;

113

Backlog do sprint; Protótipo (se houver); Documentação do Sistema (existente até o momento); Documento de Requisitos para Manutenção (se o tipo da demanda for Projeto de Manutenção). Produtos/Resultados Planilha de contagem estimativa de pontos de função da iteração (sprint).

O responsável estima os pontos de função da demanda conforme previsto no Guia de Contagem de Pontos de Função do Inep, documentando-a no modelo apropriado, disponível nesta MGDS. A planilha de pontos de função segue para validação, conforme detalhado na seção relativa aos processos do Subprocesso de Medição de PF. Após a validação e aceite dos pontos de função, o fluxo segue para o processo "Formalizar OS do sprint".

Formalizar OS do sprint Finalidade Autorizar a Contratada a executar as funcionalidades listadas no backlog do sprint. Responsável Participantes Gestor do Contrato no Inep. Gerente de Projetos do Inep; Analista de Processos do Inep; Contratada. Insumos Backlog do sprint; Planilha de contagem estimativa de pontos de função da iteração (sprint) validada e aceita. Produtos/Resultados Ordem de Serviço do sprint.

O Gestor do Contrato no Inep abre a Ordem de Serviço, autorizando a Contratada a executar as funcionalidades listadas no backlog do sprint. O fluxo retorna ao início do fluxo (processo "Executar o sprint"), para a execução do próximo sprint.

Realizar a implantação no ambiente de produção Finalidade Realizar a implantação, no ambiente de produção, dos produtos gerados pelo sprint. Responsável Área de Infraestrutura do Inep.

114

Participantes

Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep.

Insumos

Código-fonte e testes unitários; Procedimento de implantação; Sistema de Demandas; Subversion.

Produtos/Resultados

Sistema disponível no ambiente de produção.

A Área de Infraestrutura do Inep realiza a implantação conforme a demanda aberta no Sistema de Demandas pelo Gerente de Projetos do Inep.

Após término da implantação do sistema (ou parte dele) no ambiente de produção, checa-se o backlog acabou. Se o mesmo acabou o fluxo segue para os processos de encerramento (Fase de Encerramento), para que seja formalizada a entrega do sistema ao Cliente.

NOTA:

Neste processo o Procedimento de Implantação deverá ser impresso e assinado pelo Gerente de Projetos do Inep e pela CGSI (Coordenação Geral de Sistemas de Informação), para que a implantação seja realizada pela Área de Infraestrutura do Inep.

115

Processos de Manutenção de Sistemas

116

Detalhamento dos Processos de Manutenção de Sistemas

Início do processo O processo começa quando a Contratada recebe uma ou mais Ordens de Serviço, autorizando a execução de um serviço de manutenção e/ou de correções sob garantia. O fluxo segue conforme o processo "Executar o serviço".

Executar o serviço Finalidade Executar as atividades necessárias ao pleno atendimento à demanda de manutenção. Responsável Participantes Contratada. Cliente; Gerente de Projetos do Inep; Analista de Processos do Inep; Arquiteto de Sistemas do Inep; Área de Suporte do Inep; Área de Infraestrutura do Inep. Insumos Documento de Requisitos para Manutenção; Documentação do sistema; Guia de Arquitetura; Guia de Banco de Dados; Guia de Segurança da Informação para Desenvolvimento de Sistemas; Guia de Desenvolvimento de Sistemas; Ferramentas e Técnicas do Scrum; Técnicas do XP; Sistema de Demandas; Subversion. Produtos/Resultados Documentação do sistema atualizada; Artefatos complementares gerados e demais produtos pertinentes; Demandas para a infraestrutura ou suporte (se for necessário); Procedimento de Implantação;

117

Sistema modificado, testado e implantado no ambiente de homologação. A Contratada realiza as seguintes atividades, não necessariamente nesta ordem:      Realização de reunião com os participantes para esclarecer regras de negócio (se for o caso); Modificação do código-fonte e atualização dos testes unitários, em conformidade com os padrões definidos nos Guias de Arquitetura e Desenvolvimento de Sistemas; Realização dos testes funcionais e/ou de desempenho; Elaboração/atualização de todos os artefatos previstos na Ordem de Serviço; Demais atividades necessárias ao perfeito atendimento à demanda de manutenção.

A qualquer momento, se houver necessidade de serviços de infraestrutura ou de suporte, a Contratada registra uma demanda no Sistema de Demandas, que dispara uma instância do processo "Atender demanda de infraestrutura ou de suporte". Após o término da implementação, a Contratada registra uma demanda no Sistema de Demandas, solicitando a implantação do sistema manutenido no ambiente de homologação. A Área de Infraestrutura do Inep realiza a implantação conforme dados da demanda (na demanda é referenciado o conteúdo da implantação, que deverá estar disponível no Subversion, e anexado o Procedimento de Implantação). O fluxo segue para o processo "Avaliar a qualidade".

Avaliar a qualidade Finalidade Avaliar as funcionalidades desenvolvidas ou atualizadas na manutenção, com foco na garantia da qualidade dos produtos entregues. Responsável Participantes Área de Qualidade do Inep. Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Sistema modificado, testado e implantado no ambiente de homologação; Documentação do sistema (criada/atualizada); Documento de Requisitos para Manutenção; Guia de Arquitetura; Guia de Desenvolvimento de Sistemas; Guia de Banco de Dados; Guia de Segurança da Informação para Desenvolvimento de Sistemas. Produtos/Resultados Produto homologado pela área de TI; ou

118

Lista de não-conformidades encontradas. A Área de Qualidade do Inep realiza as seguintes atividades:     Verificação dos documentos entregues pela Contratada à luz dos padrões definidos pelo Inep; Avaliação dos documentos entregues em relação à aderência ao negócio (escopo previsto no projeto ou serviço); Realização de testes de aceitação, a partir da documentação disponível; Avaliação da qualidade do código-fonte de acordo com o Guia de Arquitetura e Guia de Desenvolvimento de Sistemas.

Caso sejam encontradas não-conformidades, a Área de Qualidade do Inep documenta-as no artefato Lista de não-conformidades e o fluxo segue de volta para o processo "Executar o serviço", para as correções necessárias. Caso contrário, a Área de Qualidade do Inep homologa o sistema/módulo (entregue pelo sprint) sob o ponto de vista da TI e o fluxo segue para o Subprocesso de Homologação, descrito adiante neste documento. Após a homologação do sistema/módulo pelo Cliente, o Gerente de Projetos do Inep abre uma demanda no Sistema de Demandas, para implantação do sistema/módulo no ambiente de produção (na demanda é referenciado o conteúdo da implantação, que deverá estar disponível no Subversion, e anexado o Procedimento de Implantação), direcionando o fluxo para o processo "Realizar a implantação no ambiente de produção". Se houver itens fora da garantia, o fluxo segue para o Subprocesso Medição de PF, descrito adiante neste documento, tendo como saída os PFs do serviço aceitos. Posteriormente o fluxo segue para os Processos de encerramento (evento: PFs do serviço aceitos). Itens dentro da garantia seguem direto para os Processos de Encerramento (evento: serviço em garantia concluído).

Atender demanda de infraestrutura ou de suporte Finalidade Atender demanda de infraestrutura ou de suporte, necessárias durante a execução do sprint. Responsável Área de Infraestrutura do Inep; ou Área de Suporte do Inep. Participantes Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Produtos/Resultados Demanda aberta no Sistema de Demandas. Demanda atendida e fechada; ou

119

Demanda cancelada (se for o caso). O responsável atende a solicitação da Contratada, fechando a demanda no Sistema de Demandas.

Realizar a implantação no ambiente de produção Finalidade Realizar a implantação, no ambiente de produção, dos produtos gerados pelo Serviço de Manutenção. Responsável Participantes Área de Infraestrutura do Inep. Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Código-fonte; Procedimento de Implantação; Sistema de Demandas; Subversion. Produtos/Resultados Sistema disponível no ambiente de produção; Demanda concluída. A Área de Infraestrutura do Inep realiza a implantação conforme a demanda aberta no Sistema de Demandas pelo Gerente de Projetos do Inep. O fluxo segue de acordo com o descrito na seção que trata dos processos da Fase de Encerramento, onde o Gerente de Projetos do Inep formalizará ao Cliente o atendimento à sua demanda (demanda concluída), informando que o sistema encontra-se disponível em produção.

120

Fase de Encerramento

Detalhamento dos Processos da Fase de Encerramento
Início do processo O processo começa quando um dos seguintes eventos ocorrer:  PFs da fase de iniciação aceitos Este evento é disparado após o aceite da contagem estimativa (de todo o sistema) realizada pela Contratada durante a Fase de Iniciação. O fluxo segue para o processo "Encerrar a Ordem da fase de iniciação.  PFs do serviço aceitos Este evento é disparado após a implantação do sistema modificado em produção (já homologado pelo Cliente) e quando do aceite da contagem final dos pontos de função da

121

manutenção (nos casos em que a OS não seja de garantia). O fluxo segue para o processo "Encerrar a Ordem de Serviço de manutenção" (para itens fora da garantia).  Serviço em garantia concluído Este evento é disparado após a implantação do sistema modificado em produção (já homologado pelo Cliente). Para este tipo de serviço não existe contagem dos pontos de função envolvidos, pois se trata de uma Ordem de Serviço de garantia. O fluxo segue para o processo "Encerrar a Ordem de Serviço de garantia".  PFs do sprint aceitos Este evento é disparado após o aceite da contagem final dos pontos de função do sprint. O fluxo segue para o processo "Encerrar a Ordem de Serviço do sprint".  Backlog acabou Este evento é disparado após a conclusão de todos os itens que compõem o backlog (alguns itens podem ter sido cancelados, a pedido do Cliente). O fluxo segue para o processo "Formalizar a entrega do Sistema".

Encerrar a Ordem de Serviço da fase de iniciação Finalidade Responsável Dar o aceite na Ordem de Serviço da fase de iniciação. Gestor do Contrato no Inep; Gerente de Projetos do Inep. Participantes Insumos Contratada. Ordem de Serviço da fase de iniciação com aceite do Cliente; Check-list da OS; Subversion. Produtos/Resultados Ordem de Serviço da fase de iniciação atestada pelo Inep.

O Gerente de Projetos do Inep verifica se os seguintes critérios foram atendidos:      Toda a documentação prevista na Ordem de Serviço está entregue e aceita; Toda a documentação prevista na Ordem de Serviço está disponível e atualizada no repositório de dados de gerenciamento de Ordens de Serviço; O escopo/detalhamento da demanda está validado e aprovado pelo Cliente (Ordem de Serviço da Fase de Iniciação assinada pelo Cliente); A qualidade da documentação entregue está avaliada e aceita pela área de TI; A contagem estimativa de pontos de função da demanda está validada e aceita pelo Inep;

Quando todos os critérios acima estiverem atendidos, o Gestor do Contrato no Inep calcula um percentual de 5% (cinco por cento) dos pontos de função estimados, informa esse valor na Ordem de Serviço, coleta a assinatura do Preposto da Contratada e, em conjunto com o Gerente de Projetos do

122

Inep, faz o ateste da Ordem de Serviço, deixando-a passível de faturamento.

Encerrar a Ordem de Serviço de manutenção Finalidade Responsável Dar o aceite na Ordem de Serviço de manutenção. Gestor do Contrato no Inep; Gerente de Projetos do Inep. Participantes Insumos Contratada. Ordem de Serviço com aceite do Cliente; Check-list da OS; Subversion. Produtos/Resultados Ordem de Serviço de manutenção atestada pelo Inep.

O Gerente de Projetos do Inep verifica se os seguintes critérios foram atendidos:      Toda a documentação prevista na Ordem de Serviço está entregue e aceita; Toda a documentação prevista na Ordem de Serviço está disponível e atualizada no repositório de dados de gerenciamento de Ordens de Serviço; A qualidade do serviço está avaliada e aceita pela área de TI; O serviço está homologado pelo Cliente (Ordem de Serviço assinada pelo Cliente); A contagem final de pontos de função do Serviço de Manutenção está validada e aceita pelo Inep.

Quando todos os critérios acima estiverem atendidos, o Gestor do Contrato no Inep registra na OS a quantidade de pontos de função aceita, coleta a assinatura do Preposto da Contratada e, em conjunto com o Gerente de Projetos do Inep, faz o ateste da Ordem de Serviço, deixando-a passível de faturamento.

Encerrar a Ordem de Serviço de garantia Finalidade Responsável Dar o aceite na Ordem de Serviço de garantia. Gestor do Contrato no Inep; Gerente de Projetos do Inep. Participantes Insumos Contratada. Ordem de Serviço com aceite do Cliente; Check-list da OS; Subversion. Produtos/Resultados Ordem de Serviço de garantia aceita.

123

O Gerente de Projetos do Inep verifica se os seguintes critérios foram atendidos:     Toda a documentação prevista na Ordem de Serviço está entregue e aceita; Toda a documentação prevista na Ordem de Serviço está disponível e atualizada no repositório de dados de gerenciamento de Ordens de Serviço; A qualidade do serviço está avaliada e aceita pela área de TI; O serviço está homologado pelo Cliente (Ordem de Serviço assinada pelo Cliente);

Quando todos os critérios acima estiverem atendidos, o Gestor do Contrato, em conjunto com o Gerente de Projetos do Inep, faz o ateste da Ordem de Serviço. Para este tipo de Ordem de Serviço não temos faturamento (sem ônus para o Inep).

Encerrar a Ordem de Serviço do sprint Finalidade Responsável Dar o aceite na Ordem de Serviço do sprint. Gestor do Contrato no Inep; Gerente de Projetos do Inep. Participantes Insumos Contratada. Ordem de Serviço com aceite do Cliente (assinada pelo Cliente); Check-list da OS; Subversion. Produtos/Resultados Ordem de Serviço do sprint atestada pelo Inep.

O Gerente de Projetos do Inep verifica se os seguintes critérios foram atendidos:      Toda a documentação prevista na Ordem de Serviço está entregue e aceita; Toda a documentação prevista na Ordem de Serviço está disponível e atualizada no repositório de dados de gerenciamento de Ordens de Serviço; A qualidade dos produtos do sprint está avaliada e aceita pela área de TI; Os produtos do sprint estão homologados pelo Cliente (se homologáveis); A contagem final de pontos de função do sprint está validada e aceita pelo Inep.

Quando todos os critérios acima estiverem atendidos, o Gestor do Contrato no Inep registra na OS a quantidade de pontos de função aceita, coleta a assinatura do Preposto da Contratada e, em conjunto com o Gerente de Projetos do Inep, faz o ateste da Ordem de Serviço, deixando-a passível de faturamento.

Formalizar a entrega do sistema Finalidade Formalizar o fim do atendimento à demanda solicitada pelo Cliente.

124

Responsável Participantes

Gerente de Projetos do Inep. Cliente; Analista de Processos do Inep.

Insumos

Backlog concluído; Sistema em produção; Sistema de Demandas; Ferramenta de Gerenciamento de Projetos do Órgão; Ordens de Serviços encerradas.

Produtos/Resultados

Memorando; Demanda fechada.

O Gerente de Projetos do Inep realiza as seguintes atividades:    Emite um Memorando à área de negócio Cliente, na qual formaliza o atendimento à demanda daquela área, informando que o sistema encontra-se disponível em produção; Fecha a demanda no Sistema de Demandas; Conclui o projeto na ferramenta de gerenciamento de projetos do órgão (se for o caso).

125

Subprocessos Homologação

126

Detalhamento dos Processos do Subprocesso Homologação

Início do processo O Subprocesso começa quando o sistema/módulo encontra-se homologado sob o ponto de vista da TI (após passar pelo processo "Avaliar a qualidade"). O fluxo segue conforme o processo "Homologar o(s) sprint(s) / serviço(s)".

Homologar o(s) sprint(s) / serviço(s) Finalidade Responsável Participantes Realizar a homologação das funcionalidades implementadas e/ou modificadas. Cliente. Gerente de Projetos do Inep; Contratada; Analista de Processos do Inep; Área de Qualidade do Inep. Insumos Sistema disponível no ambiente de homologação; Ordem de Serviço; Documentação do sistema; Memorando solicitando a homologação (nos casos de homologação de sprint(s)); Sistema de Demandas. Produtos/Resultados Ordem de Serviço com aceite do cliente; ou Lista de não-conformidades; e/ou Lista de mudanças solicitadas. Com o auxílio do Gerente de Projetos do Inep, o Cliente faz a validação do sistema no ambiente de homologação, utilizando como parâmetros: a demanda aberta no Sistema de Demandas e a Ordem de Serviço relacionada às funcionalidades implementadas e/ou modificadas. Caso a homologação seja aceita, o Cliente dará seu aceite na Ordem de Serviço (assinando-a) e a homologação estará concluída. Caso sejam encontradas não-conformidades com os requisitos originais, o Gerente de Projetos do Inep registra e encaminha a lista de não-conformidades à Contratada, para providências. O fluxo segue para o processo "Tratar não-conformidades". Após a correção das não-conformidades, o fluxo segue para o

127

processo "Avaliar a qualidade". Em paralelo, caso sejam solicitadas mudanças pelo Cliente (registradas na lista de Mudanças), o fluxo segue para o Subprocesso Tratamento da Mudança, descrito adiante neste documento. Após o tratamento da mudança, o fluxo segue para o processo "Avaliar a qualidade".

Tratar não-conformidades Finalidade Resolver as não-conformidades encontradas durante a homologação das funcionalidades implementadas e/ou modificadas. Responsável Participantes Contratada. Cliente; Gerente de Projetos do Inep; Analista de Processos do Inep; Área de Qualidade do Inep; Área de Infraestrutura do Inep; Área de Suporte do Inep. Insumos Lista de não-conformidades; Documentação do sistema; Código-fonte e testes unitários; Guia de Arquitetura; Guia de Desenvolvimento de Sistemas; Guia de Banco de dados; Guia de Segurança da Informação para Desenvolvimento de Sistemas; Ferramentas e Técnicas do Scrum; Técnicas do XP; Sistema de Demandas; Subversion. Produtos/Resultados Documentação do Sistema atualizada; Procedimento de Implantação atualizado; Demandas para a infraestrutura e/ou suporte (se for o caso); Sistema modificado, testado e implantado novamente no ambiente de homologação. A Contratada corrige todas as não-conformidades apresentadas durante a homologação do sistema

128

pelo Cliente ou pela Área de Qualidade do Inep (não-conformidades apresentadas pela Área de Qualidade do Inep acontecem após a Contratada já ter corrigido algumas não-conformidades apresentadas pelo Cliente, onde antes de submeter o sistema a uma nova homologação pelo cliente, a qualidade das correções é avaliada). A qualquer momento, se houver necessidade de serviços de infraestrutura ou de suporte, a Contratada registra uma demanda no Sistema de Demandas, que dispara uma instância do processo "Atender demanda de infraestrutura ou de suporte". Após o término da correção, a Contratada registra uma demanda no Sistema de Demandas (na demanda é referenciado o conteúdo da implantação, que deverá estar disponível no Subversion, e anexado o Procedimento de Implantação), solicitando a implantação do sistema no ambiente de homologação. O fluxo segue para o processo "Avaliar a qualidade".

Avaliar a qualidade Finalidade Avaliar as funcionalidades desenvolvidas ou atualizadas, com foco na garantia da qualidade dos produtos entregues. Responsável Participantes Área de Qualidade do Inep. Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Lista de não-conformidades; Solicitação de Mudança (caso exista, e a mudança tenha sido executada no sprint atual); Código-fonte e testes unitários; Scripts dos testes funcionais; Documentação do sistema (todos os artefatos e demais produtos gerados ou atualizados); Guia de Arquitetura; Guia de Desenvolvimento de Sistemas; Guia de Banco de Dados; Guia de Segurança da Informação para Desenvolvimento de Sistemas. Produtos/Resultados Produto homologado pela área de TI; ou Lista de não-conformidades encontradas.

129

A Área de Qualidade do Inep realiza as seguintes atividades:   Avaliação da correção das não-conformidades identificadas durante a homologação do sistema pelo Cliente; È previsto que grande parte das mudanças solicitadas seja executada nos próximos sprints (de acordo com a priorização do cliente), mas caso a mudança seja executada no sprint atual (após decisão do Gerente de Projetos do Inep e do Líder do projeto da Contratada), em paralelo com o processo de homologação em questão, a mesma também será avaliada neste processo. Verificação dos documentos entregues pela Contratada à luz dos padrões definidos pelo Inep; Avaliação dos documentos entregues em relação à aderência ao negócio (escopo previsto no projeto ou serviço); Realização de testes de aceitação, a partir dos casos de teste e dos scripts dos testes funcionais entregues pela Contratada, se necessário for; Avaliação da qualidade do código-fonte de acordo com o Guia de Arquitetura e o Guia de Desenvolvimento de Sistemas.

   

Caso sejam encontradas novas não-conformidades ou uma mudança executada apresente problemas, a Área de Qualidade do Inep irá atualizar o artefato Lista de não-conformidades e o fluxo seguirá de volta ao processo "Tratar não-conformidades", para que as correções necessárias sejam feitas. Caso contrário, a Área de Qualidade do Inep homologa o sistema sob o ponto de vista da TI e o fluxo segue para o processo "Homologar o(s) sprint(s) / serviço(s)", para que uma nova homologação seja realizada pelo Cliente.

Atender demanda de infraestrutura ou de suporte Finalidade Atender demanda de infraestrutura ou de suporte, necessárias durante o tratamento das não-conformidades. Responsável Área de Infraestrutura do Inep; ou Área de Suporte do Inep. Participantes Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Produtos/Resultados Demanda aberta no Sistema de Demandas. Demanda atendida e fechada; ou Demanda cancelada (se for o caso). O responsável atende a solicitação da Contratada, fechando a demanda no Sistema de Demandas.

130

Tratamento da Mudança

131

Detalhamento dos Processos do Subprocesso Tratamento da Mudança

Início do processo O Subprocesso começa quando o Gerente de Projetos do Inep, após avaliação, considera viáveis e necessárias as mudanças solicitadas pelo Cliente durante a etapa de homologação do sistema/módulo. O fluxo segue conforme o processo "Emitir solicitação de mudança".

Emitir solicitação de mudança Finalidade Registrar as mudanças solicitadas pelo Cliente nos requisitos originais da demanda. Responsável Participantes Gerente de Projetos do Inep. Cliente; Analista de Processos do Inep. Insumos Produtos/Resultados Lista de mudanças solicitadas e avaliadas como viáveis e necessárias. Solicitação de Mudança.

O Gerente de Projetos do Inep emite a Solicitação de Mudança, na qual lista todas as mudanças a serem realizadas nos requisitos originais do sistema que está em homologação. A Solicitação de Mudança segue para análise da Contratada, conforme o processo "Analisar a solicitação de mudança".

Analisar a solicitação de mudança Finalidade Avaliar os impactos das mudanças em relação a prazo, risco, escopo, custo, infraestrutura, módulos existentes, etc. Responsável Participantes Contratada. Cliente; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Solicitação de Mudança; Documentação do Sistema; Manual de Práticas de Contagem de Pontos de Função (CPM) do IFPUG;

132

Guia de Contagem de Pontos de Função do Inep. Produtos/Resultados Solicitação de Mudança atualizada.

A Contratada realiza a análise do impacto das mudanças no sistema/módulos já existente(s) e as possíveis alternativas caso existam, e registra suas considerações na própria Solicitação de Mudança, encaminhando-a em seguida para o Subprocesso Medição de PF para contagem detalhada e validação do tamanho da mudança em pontos de função. Após o aceite dos pontos de função que caracterizam o tamanho da mudança, o fluxo segue para o processo "Aprovar a solicitação de mudança com o Cliente".

Aprovar a solicitação de mudança com o Cliente Finalidade Responsável Participantes Obter autorização do Cliente para executar a mudança. Gerente de Projetos do Inep. Cliente Contratada Insumos Solicitação de Mudança; Controle Backlog; Produtos/Resultados Solicitação de Mudança aprovada ou rejeitada; Controle Integrado de Mudanças atualizado; Backlog atualizado (se a mudança for programada para o próximo sprint). O Gerente de Projetos do Inep realiza reunião com o Cliente para apresentar os impactos, as alternativas e o custo (em pontos de função) da mudança solicitada. Se a mudança for aprovada e o tipo de demanda for Serviço de Manutenção, o fluxo segue para o processo "Executar a mudança". Para os tipos de demandas: Desenvolvimento de Sistemas e Projeto de Manutenção, se a mudança for aprovada pelo Cliente, o Gerente de Projetos do Inep juntamente com o Líder de Projetos da contratada, irá analisar a possibilidade da mudança ser executada no sprint atual. Caso não seja possível o backlog do sistema será atualizado. De acordo com a decisão tomada, o fluxo é direcionado:   Para o processo "Executar a mudança", caso a escolha seja executar a mudança no sprint atual; Para o processo "Atualizar o backlog", caso a escolha seja atualizar o backlog do sistema. Como a priorização do backlog é de responsabilidade do cliente, ele pode definir que no próximo sprint a mudança já seja executada. Integrado de Mudanças;

Caso o Cliente não aprove a execução da mudança, o tratamento da mudança está concluído.

133

NOTA: Independente da Solicitação de Mudança ser aprovada ou não, as seguintes atividades devem ser realizadas:

1. Atualizar o artefato Controle Integrado de Mudanças para que o controle de todas as solicitações de mudanças do sistema seja realizado. 2. Obter assinaturas da Contratada, do Cliente e do Gerente de Projetos do Inep no artefato Solicitação de Mudanças.

Atualizar o backlog Finalidade Atualizar o backlog do produto com a mudança aprovada pelo Cliente para execução no próximo sprint. Responsável Participantes Gerente de Projetos do Inep. Cliente; Contratada; Analista de Processos do Inep. Insumos Solicitação de Mudança aprovada; Backlog. Produtos/Resultados Backlog atualizado.

O Gerente de Projetos do Inep atualiza o backlog com as mudanças aprovadas para execução no próximo sprint, concluindo o Subprocesso Tratamento da Mudança.

Executar a mudança Finalidade Responsável Participantes Implementar as mudanças aprovadas pelo Cliente. Contratada. Cliente; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Solicitação de Mudança aprovada; Documentação do sistema; Código-fonte e testes unitários; Guia de Arquitetura; Guia de Banco de Dados;

134

Guia de Segurança da Informação para Desenvolvimento de Sistemas; Guia de Desenvolvimento de Sistemas; Ferramentas e Técnicas do Scrum; Técnicas do XP; Sistema de Demandas; Subversion. Produtos/Resultados Mudanças implementadas; Documentação do sistema atualizada; Código-fonte e testes unitários atualizados; Artefatos complementares gerados (se necessário); Demandas para a infraestrutura e/ou suporte (se for necessário); Procedimento de Implantação atualizado (se for necessário); Sistema modificado, testado e implantado no ambiente de homologação. A Contratada executa as seguintes atividades, não necessariamente nesta ordem:       Implementa as mudanças no código-fonte; Cria e/ou atualiza os testes unitários; Atualiza a documentação do sistema e gera novos artefatos complementares se necessários; Realiza os testes funcionais e/ou de desempenho; Atualiza o Procedimento de Implantação se necessário; Demais atividades necessárias ao perfeito atendimento da Solicitação de Mudança aprovada.

A qualquer momento, se houver necessidade de serviços de infraestrutura ou de suporte, a Contratada registra uma demanda no Sistema de Demandas, que dispara uma instância do processo "Atender demanda de infraestrutura ou de suporte". Após o término da implementação, a Contratada registra uma demanda no Sistema de Demandas, solicitando a implantação do sistema manutenido no ambiente de homologação. A Área de Infraestrutura do Inep realiza a implantação conforme dados da demanda (na demanda é referenciado o conteúdo da implantação, que deverá estar disponível no Subversion, e anexado o Procedimento de Implantação). Ao término deste processo, o tratamento da mudança está concluído.

135

Atender demanda de infraestrutura ou de suporte Finalidade Atender demanda de infraestrutura ou de suporte, necessárias durante a implementação das mudanças solicitadas pelo Cliente. Responsável Área de Infraestrutura do Inep; ou Área de Suporte do Inep. Participantes Contratada; Gerente de Projetos do Inep; Analista de Processos do Inep. Insumos Produtos/Resultados Demanda aberta no Sistema de Demandas. Demanda atendida e fechada; ou Demanda cancelada (se for o caso). O responsável atende a solicitação da Contratada, fechando a demanda no Sistema de Demandas.

136

Medição de PF

137

Detalhamento dos Processos do Subprocesso de Medição de PF

Início do processo O Subprocesso começa quando um dos seguintes eventos ocorrer:  Solicitação de mudança analisada Este evento é disparado após a análise, pela Contratada, de uma solicitação de mudança encaminhada pelo Inep. O fluxo segue conforme o processo "Medição dos PFs da mudança";  Homologação concluída Este evento é disparado após a conclusão da homologação, junto ao cliente, do sprint ou serviço realizado pela Contratada. O fluxo segue conforme o processo "Medição final dos PFs";  Projeto ou serviço cancelado Este evento é disparado quando, por alguma razão, o projeto/serviço tenha sido cancelado pelo Inep. O fluxo segue conforme o processo "Medição final dos PFs";  Medição estimativa realizada Este evento é disparado após a realização, pela Contratada, de uma contagem estimativa de pontos de função. O fluxo segue conforme o processo "Validação dos PFs".

Medição dos PFs da mudança Finalidade Realizar a contagem detalhada dos pontos de função da solicitação de mudança. Responsável Participantes Insumos Contratada. Não há. Solicitação de Mudança; Manual de Práticas de Contagem de Pontos de Função (CPM) do IFPUG; Guia de Contagem de Pontos de Função do Inep. Produtos/Resultados Solicitação de Mudança atualizada.

A Contratada realiza a medição dos itens envolvidos na mudança, aplicando a técnica de contagem de pontos de função detalhada do CPM, acrescida dos itens tratados no Guia de Contagem de Pontos de Função do Inep, e documentando a contagem na própria Solicitação de Mudança, em seção específica para este fim. O fluxo segue para o processo "Validação dos PFs".

138

Medição final dos PFs Finalidade Realizar a contagem detalhada dos pontos de função do sprint ou serviço de manutenção homologado/cancelado. Responsável Participantes Insumos Contratada. Não há. Documentação do sistema; Documentação Técnica da Manutenção (para Serviço de Manutenção); Manual de Práticas de Contagem de Pontos de Função (CPM) do IFPUG; Guia de Contagem de Pontos de Função do Inep; Produtos/Resultados Planilha detalhada de pontos de função.

A Contratada aplica a técnica de contagem de pontos de função detalhada no guia CPM, acrescida dos itens tratados no Guia de Contagem de Pontos de Função do Inep, e documenta a contagem no modelo de planilha disponível para essa finalidade na Metodologia de Gestão e Desenvolvimento de Sistemas do INEP. O fluxo segue para o processo "Validação dos PFs".

Validação dos PFs Finalidade Responsável Participantes Insumos Validar a contagem de pontos de função encaminhado pela Contratada. Área de Qualidade do Inep Não há. Documentação do sistema; Documentação Técnica da Manutenção (para Serviço de Manutenção); Manual de Práticas de Contagem de Pontos de Função (CPM) do IFPUG; Guia de Contagem de Pontos de Função do Inep; Produtos/Resultados Planilha estimativa de pontos de função validada; ou Planilha detalhada de pontos de função validada. A Área de Qualidade do Inep aplica a mesma técnica de contagem de pontos de função utilizada pela Contratada (NESMA ou guia CPM/IFPUG), acrescida dos itens tratados no Guia de Contagem de Pontos de Função do Órgão e valida a quantidade de PFs obtida. Caso haja divergência, o fluxo segue para o processo "Resolução da divergência com a Contratada".

139

Caso contrário, o fluxo segue para o processo "Aceite dos PFs".

Resolução da divergência com a Contratada Finalidade Sanar todas as divergências de contagem identificadas na etapa de validação dos PFs. Responsável Participantes Insumos Área de Qualidade do Inep Contratada. Documentação do sistema; Documentação Técnica da Manutenção (para Serviço de Manutenção); Manual de Práticas de Contagem de Pontos de Função (CPM) do IFPUG; Guia de Contagem de Pontos de Função do Inep; Produtos/Resultados Memória de Reunião; Planilha estimativa de pontos de função atualizada; ou Planilha detalhada de pontos de função atualizada. A Área de Qualidade do Inep realiza reunião com a Contratada para esclarecer e sanar os pontos de divergência na contagem de pontos de função. A planilha de pontos de função é então atualizada para refletir os itens acordados entre as partes.

Os assuntos tratados na reunião são registrados em uma Memória de Reunião, que deverá ser assinada por todos os presentes. O fluxo segue para o processo "Aceite dos PFs".

Aceite dos PFs Finalidade Responsável Participantes Insumos Atestar os pontos de função. Área de Qualidade do Inep Contratada. Ordem de Serviço ou Solicitação de Mudança; Planilha estimativa de pontos de função; ou Planilha detalhada de pontos de função. Produtos/Resultados Ordem de Serviço atualizada; ou Solicitação de Mudança atualizada.

140

A Área de Qualidade do Inep atualiza a Ordem de Serviço ou a Solicitação de Mudança com o valor da contagem de pontos de função validada e aceita. O Subprocesso Medição de PF termina.

Conjunto de Artefatos
O Conjunto de Artefatos listado abaixo pretende definir a documentação necessária e os produtos que deverão ser gerados durante o desenvolvimento de novos sistemas e durante os processos de manutenção de sistemas (a Ordem de Serviço discriminará os artefatos exigidos de acordo com a necessidade). Este conjunto de artefatos é utilizado tanto em "insumos" quanto em "produtos/resultados" gerados durante a utilização dos processos da MGDS.

A Contratada de serviço poderá definir outros artefatos complementares de acordo com o contexto do sistema e com a finalidade de contribuir e facilitar o ciclo de vida do desenvolvimento/manutenção do sistema. Estes artefatos complementares não serão exigidos pela contratante.

Segue abaixo a lista dos artefatos requeridos:                        Documento de Visão; Documento de Arquitetura do Projeto; Modelo Sintético de Casos de Uso; Especificação de Caso de Uso; Planilha de Pontos de Função (Desenvolvimento e Manutenção ­ de Sistemas); Backlog (Backlog e Backlog do Sprint fazem parte do artefato Backlog); Memória de Reunião; Avaliação do Sprint; Modelo de Dados (MER) e Scripts; Casos de Teste; Relatório de Cobertura de Testes; Código-fonte documentado e testes unitários; Scripts dos testes funcionais; Relatório de Status; Procedimento de Implantação; Solicitação de Mudança; Ordem de Serviço; Check-list da Ordem de Serviço; Lista Não-conformidades e de Mudanças; Protótipos; Diagrama de Classes (definido pela UML); Documento de Requisitos para Manutenção; Documentação Técnica da Manutenção;

141

Os modelos dos artefatos encontram-se no SVN, no endereço: http://subversion.inep.gov.br/svn/documentos/DTDIE/Escritorio_Projetos/Fabrica_Software/Metodologia_ FSW/Artefatos/

Não foram definidos modelos para os artefatos abaixo:      Modelo de Dados (MER) e Scripts; Código-fonte documentado e testes unitários; Scripts dos testes funcionais; Protótipos; Diagrama de Classes.

Material de Apoio
O material de apoio é composto por ferramentas e técnicas que auxiliarão no desenvolvimento de sistemas e nos processos de manutenção de sistemas e servirão como insumos para os processos da MGDS. A lista abaixo não pretende esgotar todas as ferramentas e técnicas disponíveis no mercado e em nossa organização, ou seja, não se trata de uma lista exaustiva. Outras ferramentas e técnicas poderão ser utilizadas de acordo com a necessidade.  Padrões o Guia de Arquitetura PHP e Java; o Guia de Desenvolvimento de Sistemas; o Guia de Banco de Dados; o Guia de Segurança da Informação para Desenvolvimento de Sistemas; o Guia de Contagem de Pontos de Função do INEP. Os guias encontram-se no SVN, no endereço: http://subversion.inep.gov.br/svn/documentos/DTDIE/Escritorio_Projetos/Fabrica_Software/M   etodologia_FSW/Guias Manual de Práticas de Contagem de Pontos de Função (CPM); Sistema de Demandas: Simec Demandas, acessado

através

do

link:

http://demandas.simec.inep.gov.br/demandas/login.php
 Subversion: no INEP os três principais repositórios são: o Documentos:http://subversion.inep.gov.br/svn/documentos/ o Fontes: http://subversion.inep.gov.br/svn/fontes/ o Banco: http://subversion.inep.gov.br/svn/banco/ Ferramentas e Técnicas do Scrum; Técnicas do XP.

 

142

Padrão de Nomenclatura e Armazenamento dos Artefatos
A tabela abaixo trata da nomenclatura e armazenamento dos artefatos citados no item 6 que possuem modelos definidos:
N*, Número_OS e Número_Sprint ­ representam números seqüenciais.

Nome do Artefato Documento de Visão Documento de Arquitetura do Projeto Especificação de Caso de Uso Planilha de PF Desenvolvimento Planilha de PF Manutenção Backlog Modelo Sintético de Casos de Uso Memória de Reunião Casos de Teste Relatório de Cobertura de Testes Relatório de Status Avaliação do Sprint Procedimento de Implantação Solicitação de Mudança Ordem de Serviço Documento de Requisitos para Manutenção Documentação Técnica da Manutenção Lista Não-conformidades e Mudanças Check-list da Ordem de Serviço

Nome do Arquivo [Nome do Sistema]_DV [Nome do Sistema]_DAP [Nome do Sistema]_ECU_Nome_Caso_de_Uso [Nome do Sistema]_PFD_Número_OS [Nome do Sistema]_PFM_Número_OS [Nome do Sistema]_Backlog [Nome do Sistema]_MSCU [Nome do Sistema]_MR_aaaammdd [Nome do Sistema]_CT_Nome_Caso_de_Uso [Nome do Sistema]_RCT_Número_Sprint [Nome do Sistema]_RS_ddmmaaa [Nome do Sistema]_AS_Número_Sprint [Nome do Sistema]_PI_Número_Sprint [Nome do Sistema]_SM_N* [Nome do Sistema]_OS_Número_Sprint [Nome do Sistema]_DRM [Nome do Sistema]_DTM [Nome do Sistema]_LNM_Número_OS [Nome do Sistema]_CL_Número_OS

Armazenamento [Diretório do Sistema no SVN]\Analise [Diretório do Sistema no SVN]\Analise [Diretório do Sistema no SVN]\Analise [Diretório do Sistema no SVN]\Gerencia\Ordem_Servico [Diretório do Sistema no SVN]\Gerencia\Ordem_Servico [Diretório do Sistema no SVN]\Analise [Diretório do Sistema no SVN]\Analise [Diretório do Sistema no SVN]\Gerencia [Diretório do Sistema no SVN]\Testes [Diretório do Sistema no SVN]\Testes [Diretório do Sistema no SVN]\Gerencia\Status_Report [Diretório do Sistema no SVN]\Gerencia [Diretório do Sistema no SVN]\Gerencia [Diretório do Sistema no SVN]\Gerencia [Diretório do Sistema no SVN]\Gerencia\Ordem_Servico [Diretório do Sistema no SVN]\Analise [Diretório do Sistema no SVN]\Analise [Diretório do Sistema no SVN]\Gerencia\Ordem_Servico [Diretório do Sistema no SVN]\Gerencia\Ordem_Servico

143

Encarte G ­ Guia de Desenvolvimento de Sistemas

144

1. Introdução

No objetivo de se manter uma melhora contínua nos projetos desenvolvidos no INEP, se mostrou necessário estabelecer os padrões e procedimentos de desenvolvimento nos sistemas. Este documento foi obtido através da condensação de vários documentos anteriormente existentes, juntamente com a adição e revisão dos tópicos considerados necessários para gerar uma padronização que não seja por demais detalhista mas que viesse a facilitar o compreendimento de como as arquiteturas dos projetos devem se comportar. As especificidades de cada linguagem não foram ignoradas mas se procurou da preferência em gerar guias mais gerais. Como toda decisão de padrões, é quase impossível um consenso absoluto. Sabendo disto, a equipe procurou sempre evitar que as decisões fossem orientadas pelas preferências pessoais mas que fossem embasadas em experiências, justificativas técnicas e tecnologias disponíveis. Sendo assim, pela própria dinamicidade destes elementos é parte do objetivo deste ser continuamente revisto para se adequar as mudanças tecnológicas, as lições aprendidas e aos novos cenários que venham a ser percebidos nos projetos, a fim trazer a este documento maior qualidade e maturidade. Este documento tem sido continuamente revisto se baseando nas experiências de desenvolvimento no INEP. Sendo assim, versões mais novas do mesmo podem sempre surgir. Fique atento se está utilizando a versão adequada. Para projetos novos, sempre busque a versão mais atualizada deste documento.

145

2. Objetivo

Este documento tem o caráter de informar a metodologia a ser aplicada durante a implementação de projetos, e assim garantir qualidade ao mesmo, além de facilitar que, a qualquer instante, uma pessoa externa a fase de construção compreenda o trabalho e assim possa realizar a manutenção do mesmo. Além disto as práticas recomendadas neste documento são fruto de várias experiências com projetos passados, sendo as soluções aqui propostas vistas como as melhores maneiras de se lidar com os mais diversos contextos. Esse documento busca cumprir a Adoção de Padrões e Modelos de Apoio à Gestão e Tecnológicos recomendada no Sistema de Administração de Recursos de Informática e Informação SISP conforme:
1

4.1.4.2 (...) Em especial devem ser considerada a relevância da padronização no campo do desenvolvimento de sistemas, tendo em vista a adoção de metodologias, processos e frameworks que contribui para a redução de riscos nos projetos, posto que aumenta a capacidade de auditar resultados ao longo do processo e diminui a dependência de fornecedores específicos. 4.1.4.6 Priorizar a compilação de padrões de metodologia de desenvolvimento de sistemas e ambiente de desenvolvimento; 4.1.4.12 Disponibilizar solução estruturada para a gestão da padronização nas áreas de TI. Busca ainda, também atender a Instrução Normativa Nº 4 , de 19 de maio de 20081
2

conforme:

146

Art. 12. Compete à Área de Tecnologia da Informação definir, quando aplicáveis, os seguintes requisitos tecnológicos, em adequação àqueles definidos pelo Requisitante do Serviço: I - de arquitetura tecnológica, composta de hardware, softwares básicos, padrões de interoperabilidade, linguagem de programação e interface; II - de projeto, que estabelecem o processo de desenvolvimento de software, técnicas, métodos, forma de gestão e de documentação; III - de implantação, que definem o processo de disponibilização da solução em produção;

3. Padrões de Projetos
3.1 Projetos Legados
3.1.1 Manutenção Evolutiva Existe no INEP uma enorme variedade de projetos. Estes projetos deverão ser mantidos tendo suas especificidades respeitadas. Para que a manutenção do projeto possa ser feita mantendo-se uma qualidade de arquitetura, recomenda-se: 1. Formalizar o Padrão Existente Alguns projetos legados possuem padrões bem característicos e únicos que não se encontraram nos demais projetos. Caso isto ocorra, é necessário então se ter um documento, similar a este, o qual formalize qual é o padrão da arquitetura do projeto em questão. Isto servirá como guia para os futuros desenvolvimentos no projeto e como parâmetro de análise e correção dos elementos que forem discrepantes dos demais em relação ao cumprimento do padrão estabelecido. Caso não seja possível se extrair um padrão de arquitetura de um projeto, deverá então se seguir a arquitetura padrão dos projetos tal qual é descrita neste documento.

147

2. Manter o Padrão do Projeto Após a formalização do padrão de arquitetura do projeto legado, este padrão deve ser obedecido na manutenção do projeto. Novos elementos devem também obedecê-lo deixando o projeto assim coerente com o seu padrão inicial. Modificações no padrão de um projeto podem ocorrer, desde que seja de comum acordo entre contratante e contratado. 3. Aplicar as Boas Práticas Alguns elementos de arquitetura, como documentação de código, teste unitário, nomeação coerente de variáveis e métodos, e demais boas práticas deverão ser aplicadas nos sistemas legados sempre que possível, mesmo que não fossem inicialmente. A documentação personalizada de um projeto não deve jamais impedir que boas práticas de programação sejam aplicadas, mas sempre que possível as estimular. 3.1.2 Manutenção Corretiva Alguns projetos possuem elementos que necessitam serem reescritos para ficarem de acordo com o padrão do projeto. Este item procura abordar como e quando isso deve ser feito. 1. Corrigir Elementos Fora do Padrão Os elementos fora do padrão do projeto, quando necessitarem de uma atualização, deverão ser adaptados para se adequarem ao mesmo. O tempo para tal deve ser considerado no processo de estimativa do trabalho necessário para o cumprimento da demanda. Exceções podem ocorrer para correções emergenciais segundo uma negociação com o cliente. 2. Correções Emergenciais

148

Existem situações onde é urgente que uma alteração em um componente seja entregue o quanto antes para produção. Nestas situações, após acordado com o cliente, a equipe poderá atrasar a adequação do elemento para o padrão do projeto para um momento mais adequado conforme negociação com o contratante. 3. Testes Unitários para Refactory Ao se alterar um elemento em funcionamento para adequá-lo no padrão do projeto, recomenda-se sempre se criar vários testes unitários que possam atestar o funcionamento da nova versão do elemento após a sua reescrita.

3.2 Projetos Novos
Os projetos novos devem seguir a versão mais recente deste manual. Caso existam sugestões de modificações neste documento por parte do contratado, este deve fazê-lo na fase inicial do projeto. Após o projeto começar o seu desenvolvimento efetivo, alterações no padrão de arquitetura do projeto devem ser evitadas pois poderá tornar o código legado existente inadequado. A análise da necessidade de alteração da arquitetura e o tamanho do impacto desta mudança devem ser analisadas juntamente com o cliente.

3.2.1 Dar Preferência para Frameworks Bem Elaborados Caso não exista um framework pré-estabelecido para a linguagem a ser utilizada ou caso os frameworks existentes não consigam suportar uma funcionalidade necessária, novos frameworks podem ser adotados de acordo com uma negociação com o cliente. Recomenda-se que os frameworks utilizados sejam bem elaborados segundo as regras do General Responsibility Assignment Software Patterns , GoF , Service-oriented architecture ,
3 4 5

Service Layer , etc., além de utilizar as boas práticas aqui recomendadas.
6

149

3.2.2 Arquitetura UML Qualquer sistema real é desenvolvido pela interação entre diferentes perfis de usuários. Estes perfis podem ser programadores, testadores, conhecedores do negócio, analistas, designers, dentre muitos outros. Ao se desenvolver a arquitetura, deve-se ter em mente facilitar a interação de cada um dos perfis com o sistema conforme a sua perspectiva. A UML desempenha um papel importante na definição das diferentes perspectivas do ciclo de desenvolvimento de um sistema. Estas perspectivas são Projeto, Implementação, Processo e Implantação. O Caso de Uso representa as funcionalidades sendo o meio de comunicação entre as perspectivas.


Projeto de um sistema consiste nas classes, interfaces e artefatos auxiliares. UML provê o Diagrama de Classes e de objetos para apoiar este desenvolvimento. A Prototipação de Tela também uma técnica que tem sido utilizada com sucesso para auxiliar no levantamento de requisitos e validação de implementações sendo assim a sua prática recomendada.



Implementação define os componentes montados em pacotes para fazer um módulo completo. O Diagrama de Componentes da UML é utilizado para apoiar a perspectiva
7

de implementação.


Processo define o fluxo do sistema. Então os mesmos diagramas utilizados no Projeto também podem apoiar esta perspectiva. O diagrama de BPMN também tem
8

sido utilizado nos projetos. Apesar deste diagrama ainda não ser no padrão UML já é oficial sua futura adoção pela UML.


Implantação representa os momentos de implementação de um sistema observando o hardware, software, ambiente e pessoal necessário. O Diagrama de Instalação é utilizado
9

150

para apoiar esta perspectiva. Os artefatos gerados devem ser criados e entregues conforme o documento de Práticas de Desenvolvimento e Gerenciamento de Sistemas.

4. Boas Práticas
4.1 A arquitetura deve ser estritamente seguida
Um problema que frequentemente afeta a qualidade dos projetos é a quebra do padrão de arquitetura estabelecido. Estas falhas ocorrem motivadas pelo estouro de prazos ou pela falta de conhecimento da existência deste documento. Para evitar que tais falhas ocorram recomenda-se a disseminação do conhecimento a respeito deste manual além sua consideração ao estimar e solucionar demandas.

4.2 Desenvolvimento Guiado por Testes Unitários
A utilização de Desenvolvimento Guiado por Testes Unitários, TDD
10

é uma técnica de

desenvolvimento ou design de projetos que permite a criação de componentes desacoplados e reutilizáveis com uma confiabilidade baseada nos resultados obtidos da execução automática dos testes unitários. Muito além do já imenso ganho de testar todo um projeto automaticamente a cada versão, o que seria inviável manualmente, o TDD, quando feito corretamente, possibilita a Arquitetura Evolucionária e Design Emergente . A Metodologia
11

Ágil recomenda o uso contínuo de testes unitários, utilizando-se estratégia: 1. Escreve-se um teste que falhe; 2. Escreve-se um código para que o teste passe; 3. Repita o processo;

151

Desenvolvimento Guiado por Testes Unitários12

A primeira vista, parecer que escrever os testes primeiro ao código seja fazer o sistema ao contrário. No entanto, este método testa se primeiramente se compreendeu o requisito. Como ainda não foi desenvolvido o novo requisito uma falha no teste é esperada e não há nenhuma decepção nisto. Ao se desenvolver a solução, já se confere se ela é suficiente para atender aos requisitos formalizados nos testes unitários escritos. Os testes são desenvolvidos juntamente com o código e não acumulados para o final do sistema quando equipe de desenvolvimento e cliente acreditam que o sistema já esteja pronto.

4.3 Boas Práticas na Manipulação de Exceções
4.3.1 Não Usar Exceções como Condicionais Este erro ocorre quando uma simples condicional resolveria o problema e tornaria dispensável o uso da Exceção.

152

4.3.2 Não Eliminar Exceções Capturar Exceções para não realizar nenhuma ação costuma ser uma prática não recomendável para maioria dos casos. Caso isto realmente seja necessário, recomenda-se ao menos que a mensagem e a pilha da Exceção seja logada possibilitando se rastrear o motivo daquela Exceção estar acontecendo. Lembrando que, conforme o item 4.3.3, um Exceção jamais deve chegar até o usuário, sendo necessariamente desenvolvido um tratamento para gerar mensagens amigáveis para as exceções recebidas no nível mais alto. 4.3.3 Logar Exceções A criação de arquivos de histórico ( Log ) com as mensagens das Exceções ocorridas num
13

sistema é algo que costuma facilitar e muito a busca por erros e falhas num projeto. Mesmo as Exceções tratadas poderão ser futuramente conhecidas, podendo-se saber se ocorrem, quando ocorrem e quantas vezes. Tal pratica pode ser facilmente feita no construtor das Exceções do projeto ou num construtor de uma Exceção Pai padrão para todo o projeto. 4.3.3 Não Utilizar Exceções Generalizadas Este é provavelmente o erro mais comum na manipulação de Exceções. Ele ocorre quando o desenvolvedor sobe ou captura Exceções genéricas do tipo Exception ou similares. Deve-se capturar apenas Exceções especializadas conforme o contexto envolvido. Como também, ao invés de subir uma Exceção da class Exception, sempre procurar subir Exceções relacionadas ao Módulo, Camada ou Componente envolvido. A captura mais abrangente possível da classe Exception deve ser feita apenas nos bootstraps para evitar que a pilha da Exceção e sua mensagem de erro venha a aparecer ao usuário do sistema. 4.4 Utilização de Componentes Maduros Existe hoje, no mercado, uma infinitude de componentes para os mais diversos tipos de necessidade. Antes de se desenvolver algum componente novo, é recomendado, que sempre se faça uma busca para saber se já não existe uma solução disponível e madura que venha a atender à necessidade apresentada. Lembrando ainda que, antes de adotar algum

153

componente de terceiro, é essencial se conferir a qualidade e confiabilidade do mesmo e se a licença permite o uso deste nos objetivos do projeto. Caso um componente escolhido apresente mau funcionamento, este será tratado pela contratante da mesma forma que um código desenvolvido pela empresa contratada, salvo um acordo feito isoladamente. Apesar disto, os componentes aproveitados de terceiros não precisarão ser alterados para ficarem de acordo com as determinações deste documento.

5. Camadas
Organizar um sistema em camadas é essencial para a organização, manutenibilidade, escalabilidade e possibilita aumentar a coesão e reduzir o acoplamento. A organização em camadas facilita a administração de funcionalidades por especialistas e reduz o risco de efeitos colaterais. Deve-se sempre utilizar um padrão de camadas maduro, mesmo nos sistemas mais simples.

5.1 Model-View-Controller
O Model-View-Controller MVC é um padrão que isola a camada lógica da camada de
14

entrada e da camada de apresentação, permitindo assim que de modo independente se faça o desenvolvimento, teste e manutenção de cada uma delas. o mais conhecido padrão de camadas. Suas camadas são:

15 16

Este padrão é provavelmente

Model - A representação "domínio" específica da informação em que a aplicação opera. Por exemplo, aluno, professor e turma fazem parte do domínio de um sistema acadêmico. É comum haver confusão pensando que Model é um outro nome para a camada de domínio. Muitas aplicações usam um mecanismo de armazenamento persistente (como banco de dados) para armazenar dados. MVC não cita especificamente a camada para acesso aos dados, porque subentende-se que estes métodos estariam encapsulados pelo Model. Originalmente as regras de negócio devem ficar nesta camada. Mas não é raro se encontrar esta camada sendo subdivida entre Data Access Objects e Business Objects .
17 18

154



View - Gera ou transforma a camada de apresentação se baseando nas informações recebidas pelo model via controller em uma forma específica para a interação, geralmente uma interface visual para o usuário.



Controller - Processa e responde a eventos, geralmente ações do usuário, e pode invocar requisições no Model. É lá que é feita a validação dos dados de entrada e também é onde os valores postos pelos usuários são filtrados.

Diagrama de Seqüência Interação Padrão MVC

155

Exemplo de Aplicação MVC para Web

5.2. Model-View-Presenter MVP
O MVP Model-view-apresentador é um padrão de interface com usuário projetado para
19

facilitar os testes unitários automatizados e melhorar a separação de escopo das camadas. A diferença entre o MVC e o MVP é fundamentalmente conceitual, tendo em vista que onde o Controller terá um comportamento diferenciado chamado então de Presenter. O Model é a coleção de objetos que são manipulados pela janela. A View é a janela propriamente dita. O Presenter é responsável por interceptar os eventos gerados na View, com a finalidade de controlar a lógica de apresentação
20 21

.

156

Portanto, foco principal do MVP é separar a lógica de apresentação da apresentação em si. Detalhando-se as camadas:


Model - O camada de modelo é uma interface que define os dados a serem exibidos ou qualquer outra ação na interface do usuário.



View - A camada de visão é camada que gera ou transforma a camada de apresentação se basendo nas informações recebidas do model e disponibiliza ao usuário eventos para interagir.



Presenter - O camada de apresentação atua sobre a cada da visão. Ele recebe as informações, as persiste, as manipula e determina o que deverá ser mostrado na camada de visão view.

Interação Padrão MVP

157

Diagrama de Atividas MVP O MVP foi por muito tempo visto com foco principal para aplicações Desktop, mas com o advento de interações RIA, seja por Ajax ou por Flex, o MVP tem sido cada vez mais, uma solução viável e de qualidade para o desenvolvimento Web. 5.3 Subdivisões de Camadas Não é raro que a complexidade dos sistemas exija uma subdivisão do serviço de alguma camada em novas camadas especializadas. Esta prática é prevista na organização em camadas. Desde que as interfaces da camada original sejam mantidas as novas camadas poderão interagir normalmente com o sistema. Caso isso se faça necessário é altamente recomendado pesquisar se já não há alguma estrutura de camadas conhecida que consiga comportar a solução desejada. São exemplos de estruturas baseadas em MVC o STRUTS, JPA, EJB, JSF, etc. Os padrões de projeto de software ou padrões de desenho de software, também muito
24 22 23

conhecido pelo termo original em inglês Design Patterns , descrevem soluções para
25

158

problemas recorrentes no desenvolvimento de sistemas de software orientados a objetos. Um padrão de projeto estabelece um nome e define o problema, a solução, quando aplicar esta solução e suas conseqüências. Cada padrão deve ter, idealmente, as seguintes características: encapsulamento, generalidade, equilíbrio, abstração, abertura,

combinatoriedade, nome, exemplo, contexto, problema e solução. Na prática o padrão define e formaliza um modo de se fazer uma tarefa, que é otimizado para uma provável maioria dos casos. Ao se utilizar padrões em excesso, estes se tornam um fardo na criação e manutenção de uma aplicação além de aumentarem o custo na execução e complexidade do projeto. Ao se utilizar camadas sem critério perde-se a vantagem da flexibilidade dos sistemas orientados a objeto tornando-se uma prática conhecida como Overdesign. Para mais:
 

Patterns and Software: Essential Concepts and Terminology Design Patterns - a personal perspective
27

26

5.4 GoF Em 1987, a partir dos conceitos criados por Alexander, os programadores Kent Beck e Ward Cunningham propuseram os primeiros padrões de projeto para a área da ciência da computação. Em um trabalho para a conferência OOPSLA, eles apresentaram alguns padrões para a construção de janelas na linguagem Smalltalk. Nos anos seguintes Beck, Cunningham e outros seguiram com o desenvolvimento destas idéias. O movimento ao redor de padrões de projeto ganhou popularidade com o livro Design Patterns: Elements of Reusable Object-Oriented Software , publicado em 1995. Os autores
28

desse livro são Erich Gamma, Richard Helm, Ralph Johnson e John Vlissides, conhecidos como a "Gangue dos Quatro" (Gang of Four) ou simplesmente "GoF" . Posteriormente,
29

vários outros livros do estilo foram publicados, como Applying UML and Patterns: An

159

Introduction to Object-Oriented Analysis and Design and Iterative Development , que
30

introduziu um conjunto de padrões conhecidos como GRASP (General Responsibility
31

Assignment Software Patterns). Os padrões GoF são organizados em famílias de padrões: de criação, estruturais e comportamentais. Os padrões de criação são relacionados à criação de objetos, os estruturais tratam das associações entre classes e objetos e os comportamentais das interações e divisões de responsabilidades entre as classes ou objetos. Os padrões podem ser organizados em famílias no seguinte formato:



Padrões de criação
o o o o o

Abstract Factory Builder Factory Method Prototype Singleton



Padrões estruturais
o o o o o o o

Adapter Bridge Composite Decorator Façade Flyweight Proxy



Padrões comportamentais

160

o o o o o o o o o o o

Chain of Responsibility Command ou Action Interpreter Iterator Mediator Memento Observer State Strategy Template Method Visitor

Sempre que se fizer necessário, é recomendado utilizar algum destes padrões mantendo as recomendações a organização e as nomenclaturas características de cada um deles. Essas classes então não deverão ter o nome completamente em português mas o nome do padrão deve ser mantido em inglês para facilitar a compreensão do padrão utilizado. Devem ser criadas então classes como AlunoFactory, ConfiguracaoTurmaProxy, ConexaoFactory, AcessoComposite, AlunosInterator, EscolaState, etc. 5.5 Evitar Overdesign Overdesign é se utilizar de um Design definido de modo excessivamente complexo tal que exceda os padrões atuais, seja de segurança, robustez, flexibilidade, etc. As arquiteturas orientadas a objeto disponibilizam a capacidade de se adequar a uma realidade mais complexa, criando, se necessário, novas camadas. É um erro comum se tentar prever todas as possíveis combinações futuras e criar uma arquitetura que já esteja preparada para as possíveis mudanças. Entre essas práticas existe:

161



A crítica ao uso excessivo de extensões ( Why extends is evil , Revisiting
32

Inheritance ).
33

 

A crítica ao se seguir regras sem discernimento ( Never Follow Rules Blindly )
34

Otimização prematura. ( "We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil" Donald Knuth - C. A. R. Hoare )
35

6. Erros Freqüentes
Existem erros freqüentes que levam projetos ao fracasso . Deve-se, sempre que possível,
36

evita-los, segue abaixo dez erros já identificados em projetos de desenvolvimento de software.

6.1 Escopos Mal Definidos
Muitos projetos se condenam ao fracasso antes mesmo de começar, simplesmente porque seu escopo foi mal definido. O problema mais comum é o escopo flexível, onde novas funcionalidades são adicionadas continuamente. Com o aumento do escopo sem o devido aumento do prazo, a qualidade do produto é a parte mais comprometida. O analista deve se manter especialmente atento aos problemas referentes à qualidade do software.

6.2 Má gestão de pessoas
Muito além do contratante e do usuário final, existe toda uma gama de pessoas das quais o bom desenvolvimento do software necessita. Considerar pessoas como auditores, administradores de banco de dados, DBAs, testadores, atendentes, desenvolvedores, etc, é essencial para que o projeto consiga alcançar a meta prevista. Quanto antes se puder fazer contato com esses grupos e entender seus interesses e preocupações, melhor. Este contato deve ser mantido e administrado durante todas as fases do desenvolvimento do software.

6.3 Foco exclusivo em Funcionalidades
É um engano comum se acreditar que a qualidade de um sistema é medida no que ele faz. É

162

verdade que se compra ou desenvolve softwares para que este venha a cooperar, facilitar e otimizar com o trabalho. Sendo assim, é necessário uma aplicação atenda as expectativas de seus usuários e idealizadores. No entanto, é um engano muito comum, principalmente para analistas menos experientes, se dedicar totalmente no desenvolvimento de novas funcionalidades ao sistema sem considerar nenhuma de suas outras propriedades como performance, segurança, manutenibilidade, acessibilidade e tantas outras essenciais para o sucesso do software.

6.4 Geração de Diagramas Vagos ou Abrangentes Demais
Para se rascunhar ou formalizar as estratégias, soluções, propostas e arquiteturas de um sistema, os diagramas costumam ser um excelente artifício se bem utilizado. Mas o uso de diagramas gigantescos ou que abordem diversas visões ou ainda que tenham informação demais perdem a sua praticidade e capacidade facilitadora de comunicação, o que freqüentemente os leva ao abandono e desatualização. Cada leitor terá que fazer uma busca para conseguir encontrar no diagrama em questão as informações que deseja, sendo bem provável que exista um diagrama bem mais claro e detalhado para aquela visão específica. Outro problema freqüente é a utilização de símbolos nos diagramas, os quais o significado exato não é claro para quem o utilizou ou para quem o interpreta. A utilização da UML é certamente um ótimo ponto de partida e um padrão a ser seguido mas sempre deve-se manter atento em se gerar uma documentação que seja mais específica para uma visão dentro de uma situação e que aqueles que fazem uso deste diagrama tem o conhecimento necessário para conseguir compreender a informação nele contida. Os diagramas podem abordar apenas uma pequena parte da solução ou gerar uma visão macro desta mesma solução, possibilitando assim a compreensão em diferentes escalas, visões e níveis de detalhe. Todo esse conjunto de diagramas, em diferentes níveis de granularidade, em diferentes camadas, para diferentes perfis e em diferentes visões, devem ser coerentes entre si para a

163

criação de um software coerente. A UML, quando bem utilizada, torna essa sincronia de várias leituras possível, facilitada e conexa. Sendo um modo de padronizar as formas de modelagem com o objetivo de possibilitar a especificação, documentação, e estruturação para sub-visualização e maior visualização lógica do desenvolvimento completo de um sistema de informação. Os modelos UML possibilitam assim que cada especialista veja as informações necessárias ao seu contexto mas mantendo as referencias entre os elementos, desde os requisitos até as implementações.

6.5 Se esquecer do que precisa ser feito
É sempre empolgante a geração de protótipos de arquitetura elegantes, com um design sofisticado e que utilizem o que há de mais moderno no mercado. No entanto, quando isto é feito, raramente a equipe se questiona se este protótipo de arquitetura gerado realmente é necessário para o problema a ser resolvido ou vem a atender os anseios pessoais da própria equipe de desenvolvimento. Não que novas tecnologias não devam ser utilizadas nos projetos, mas deve-se evitar utilizar tecnologias ainda imaturas ou que geram uma complexidade excessiva salvo projetos que sejam caracteristicamente experimentais. É comum se encontrar relatos de sistemas utilizando designs que os desenvolvedores ou os testadores não compreender muito bem, tecnologias que estes não são entusiastas ou que não tem tempo para aprender, ou o uso de tecnologias que ainda não tem um bom suporte ou que imponham um novo modo de trabalhar que a equipe não esteja familiarizada. Devido a estes fatores, deve-se ter um cuidado especial, juntamente com a equipe de testes e de de desenvolvimento, para ser minimizar estes riscos.

6.6 Definição de Plataforma pouco precisa
As plataformas dos sistemas atuais dependem, muita vezes, de uma combinação de mais de 10 produtos: sistemas operacionais, banco de dados, servidor Web, framework, maquinas virtuais, serviço de cluster, serviços de segurança, dentre muitos outros. A combinação destes elementos pode gerar incompatibilidades, principalmente, quando são combinados

164

pela primeira vez. Devido a este problema, não é suficiente descrições superficiais mas é importante ressaltar a versão e a configuração de cada um dos elementos envolvidos. Caso a atualização de um produto seja realmente necessária, lembre-se de fazer o calculo do risco, sabendo que é muito comum que após esta atualização, algum outro produto, aparentemente não relacionado, pare de funcionar adequadamente.

6.7 Fazendo Suposições de Escalabilidade e Performance
Quando novas tecnologias são utilizadas, existe uma tendência a se esperar bons resultados na escalabilidade e na performance destas, mesmo sem nenhuma experiência prévia. Tudo funcionará bem até se descobrir, já com o projeto bem avançado, áreas sensíveis de escalabilidade e performance que foram inicialmente desconsideradas. Não existe uma solução pronta para este tipo de problema mas a recomendação é se manter vigilante em relação ao assunto, executando continuamente experimentos como testes de performance e teste de stress. Além disso, é essencial manter, desde o início do projeto, uma preocupação especial com a escalabilidade e performance do projeto.

6.8 Soluções de Segurança Personalizadas
É bastante comum, ao se preocupar com segurança, tentar desenvolver idéias totalmente novas para enriquecer os mecanismos de segurança com soluções "faça você mesmo". Isso é feito com algorítimos de criptografia personalizados, desenvolvimento do próprio sistema de auditoria, etc, e raramente são uma boa idéia. As soluções de segurança existentes foram desenvolvidas por especialistas e tem se aperfeiçoado ao longo dos anos. Tentar desenvolver uma solução própria, mesmo que a princípio pareça um ganho em segurança, irá consumir um tempo muito grande da sua equipe e ainda assim provavelmente deixará brechas que podem ser utilizadas por invasores para acessar de maneira indevida o seu projeto. Salvo os casos onde não exista uma solução corporativa que resolva o problema particular sendo logicamente necessário o desenvolvimento de uma nova. Isso não impede de se personalizar, adequar ou combinar

165

diferentes tipos de soluções de segurança para atender aos requisitos de um projeto.

6.9 Não ter uma Frente de Recuperação de Desastres
Muitos sistemas mantém uma disponibilidade de serviço já há muitos anos sem sofrer nenhuma interrupção significativa do serviço. Outros, durante a sua operação, sofrem vários desastres e recuperação destes. Se estabelecer uma política de recuperação de desastres ( DR ) é raramente tratado como prioridade até que um desastre tenha ocorrido, sendo
37

deixada de lado em relação ao muito serviço a se fazer. No entanto, é óbvio que o impacto da perda de um sistema para a organização é sempre grande, sendo proporcional a importância deste sistema. A chave para se conseguir recursos para se desenvolver e implementar uma política de recuperação de desastres com sucesso é se contabilizar os custos para a empresa da indisponibilidade de um sistema ou da perda de seus dados em cenários possíveis e realistas. Se possível também analise a probabilidade de cada um destes cenários ocorrer. A combinação destes dois fatores pode ser essencial para convencer as pessoas da importância de uma frente de recuperação de desastres é conseguir o orçamento para implementa-lá.

6.10 Não ter um plano de Retorno
Atualização de projetos são parte inerente da evolução do mesmo. Após ter sido desenvolvida, testada e homologada, a versão nova da aplicação deve ser liberada em produção, como também nos demais ambientes que podem existir. No mundo ideal, atualizar aplicações seriam sempre processos tranqüilos que sempre seriam encerrados com sucesso. Mas é preciso sempre ter em mente que, ao se atualizar a versão de um projeto para uma versão mais recente, esta atualização pode falhar deixando até o projeto numa atualização mal sucedida. Por exemplo, consegue-se subir parte do código da nova versão mas não a parte do banco de dados que se comunica com este novo código deixando a aplicação inconsistente.

166

Sabendo-se da existência deste risco em cada atualização de projeto, deve-se ter um plano de retorno que consiga, caso a atualização falhe, retornar o projeto ao estado anterior evitando assim o pior cenário.

7. Padrão de Codificação e Arquivos
7.1 Tabulação e Charset
Toda tabulação deve ser 4 espaços. O uso do caractere TAB não é permitido salvo para relatórios ou documentos de importação e exportação. O Charset padrão dos sistemas é UTF-8. Seja em HTML, CSS, Javascript, PHP, Java, SQL, etc. O uso só poderá não ser UTF-8 caso a linguagem utilizada não suporte UTF-8. Neste caso em especial, se recomenda ISO-88591.

7.2 Licenças
Todos os documentos desenvolvidos pelo Governo Federal devem estar disponíveis no Portal do Software Público Brasileiro conforme o Artigo 21 da Instrução Normativa Nº 4 para
38

Contratação de Serviços de TI .
39

Art 21. Os softwares resultantes de serviços de desenvolvimento deverão ser catalogados pelo Gestor do Contrato e disponibilizados no Portal do Software Público Brasileiro de acordo com regulamento do órgão central do SISP .
40

Sendo assim, como todo software do Portal do Software Público é regido pela licença livre GPLv2
41 42

, todos os projetos a serem desenvolvidos devem seguir tal licença.

7.3 Anotações Obrigatórias
As anotações costumam ser informadas dentro da documentação de um arquivo, salvo em algumas linguagens como Java, que já adotaram as anotações como parte integrante da linguagem compilada. Neste caso há uma divisão, onde anotações são os elementos

167

compiláveis que alteram o funcionamento do software enquanto as tags são os elementos não compiláveis que ficam dentro do comentário .
43

Outras linguagens já também possibilitam a leitura das anotações para que estas sejam lidas pelo próprio sistema que as executa e assim alterem o funcionamento do software. Neste caso as anotações, apesar de alterarem o funcionamento do código ainda estarão dentro dos comentários dos elementos. Apesar da grande variedade de marcadores de comentário que existem, se recomenda que sempre se marque as anotações do mesmo modo, salvo se estes caracteres interfiram de maneira negativa no funcionamento do código no arquivo. Assim, todo o bloco de comentário descritivo deve começar com " /** " e terminar com "*/ " sendo que cada uma das linhas contidas devem conter um "*" aninhado com os demais.
/** * Este é um exemplo de documentação * * @anotacao1 este é o conteúdo da anotacao1 * @anotacao2 este é o conteúdo da anotacao2 */

Para que isso seja possível deve-se cercar os elementos da documentação com os marcadores de comentário de cada linguagem. Por exemplo, em um XML <!-/** * Este é um exemplo de xml * * @anotacao1 este é o conteúdo da anotacao1 * @anotacao2 este é o conteúdo da anotacao2 */ --> <?xml version="1.0" encoding="UTF-8" ?> <users> <user login="elvis" password="presley"/> <user login="something" password="wrong"/> <user login="bond" password="007"/> </users>

Sempre que possível deve-se dar preferência para os marcadores de comentário que não

168

permitam que este seja visível pelo usuário final. Por exemplo, em uma página template num servidor PHP: Ao invés de:

<!-/** * Esta documentação será disponível ao usuário final */ --> <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg-flat.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="pt-BR"> <head> <title> Exemplo de página usando comentário HTML </title> </head> <body> Exemplo de página usando comentário HTML </body> </html>

Dar preferência para:
<?php /** * Esta documentação não será disponível ao usuário final */ ?> <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg-flat.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="pt-BR"> <head> <title> Exemplo de página usando comentário PHP </title> </head> <body> Exemplo de página usando comentário PHP </body> </html>

É importante lembrar que comentário PHP ou Java irá aparecer ao usuário final, se for colocado numa página HTML. Logo, essa recomendação deve ser seguida, somente em páginas dinâmicas.

169

7.3.1 Por Arquivo


Uma pequena descrição do arquivo contendo o nome da classe ou interface que este declara caso seja o caso;



Se necessário uma grande descrição do arquivo logo após a pequena descrição se pulando uma linha;



@package deve ser utilizada se a utilização de packages não for nativa da linguagem. Os pacotes podem ser organizados em arvore, se utilizando o caractere "." como separação dos nós e sendo montado da direita, raiz, para a esquerda, folha.



@author deve conter o nome do desenvolvedor que originalmente criou aquele arquivo. Este campo não precisa ser atualizado após a edição do arquivo por um outro desenvolvedor.

  

@supplier deve conter o nome da empresa a qual o desenvolvedor é funcionário. @since deve conter a data de criação do arquivo no formato dd/mm/yyyy. @license deve ser "GNU GENERAL PUBLIC LICENSE 2 GPLv2 ", a Licença Pública
44

Geral GNU Versão 2 .
45



O cabeçalho exigido pela licença utilizada, circundado por "-----------"

<!-/* * MeuProjetoDeEnsino - Sistema de Ensino * * Tela de Login do Usuário * * Esta tela de login é uma página pública que * serve como exemplo de anotações * * @package sistema.publico.telas.usuario.login * @author Perna Longa * @supplier Acme * @since 16/10/2009 * @licence GNU GENERAL PUBLIC LICENSE 2 GPLv2 * *------------------------------------------------------------------------* * Copyright (C) 2006 Instituto Nacional de Estudos e Pesquisas * Educacionais Anísio Teixeira <faleconosco@inep.gov.br> *

170

* Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo * sob os termos da Licença Pública Geral GNU conforme publicada pela Free * Software Foundation; tanto a versão 2 da Licença, como (a seu critério) * qualquer versão posterior. * * Este programa é distribuído na expectativa de que seja útil, porém, SEM * NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU * ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral * do GNU para mais detalhes. * * Você deve ter recebido uma cópia da Licença Pública Geral do GNU junto * com este programa; se não, escreva para a Free Software Foundation, * Inc., no endereço 59 Temple Street, Suite 330, Boston, MA * 02111-1307 USA. * * ------------------------------------------------------------------------* */ --> <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg-flat.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="pt-BR"> <head> <title> Tela de Login </title> </head> <body> <form action="/loginController" method="post"> <label> <span> Login: </span> <input type="text" name="login" /> </label> <label> <span> Senha: </span> <input type="password" name="senha" /> </label> <label> <input type="button" name="botaoOk" value="Ok" /> </label> </form> </body> </html>

171

7.3.2 Por Classe
 

Uma pequena descrição de uma linha sobre a classe Se necessário uma grande descrição logo após a pequena descrição se pulando uma linha.

<?php /** * AlunoController é a controladora do aluno * * Este arquivo é um exemplo de como a documentação deve * ser. Para tal foi criada esta controladora de alunos * como exemplo que terá nos comentários as anotações * necessárias as classes * * @package sistemaEscola.aluno.controller * @author Perna Longa * @supplier Acme * @since 16/10/2009 * @licence GNU GENERAL PUBLIC LICENSE 2 GPLv2 * *------------------------------------------------------------------------* * Copyright (C) 2006 Instituto Nacional de Estudos e Pesquisas * Educacionais Anísio Teixeira <faleconosco@inep.gov.br> * * Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo * sob os termos da Licença Pública Geral GNU conforme publicada pela Free * Software Foundation; tanto a versão 2 da Licença, como (a seu critério) * qualquer versão posterior. * * Este programa é distribuí do na expectativa de que seja útil, porém, SEM * NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU * ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral * do GNU para mais detalhes. * * Você deve ter recebido uma cópia da Licença Pública Geral do GNU junto * com este programa; se não, escreva para a Free Software Foundation, * Inc., no endereço 59 Temple Street, Suite 330, Boston, MA * 02111-1307 USA. * * ------------------------------------------------------------------------* */ /** * Controla as Requisições referentes ao Aluno

172

* * Essa é a classe responsável por receber as requisições feitas * pelo usuário em relação ao aluno, e comunica-las as camadas * responsáveis e depois enviar a camada de visão as informações * necessárias a cada tela */ class AlunoController extends AbstractController { } ?> /** * AlunoController é a controladora do aluno * * Este arquivo é um exemplo de como a documentação deve * ser. Para tal foi criada esta controladora de alunos * como exemplo que terá nos comentários as anotações * necessárias as classes * * @author Perna Longa * @supplier Acme * @since 16/10/2009 * @licence GNU GENERAL PUBLIC LICENSE 2 GPLv2 * *------------------------------------------------------------------------* * Copyright (C) 2006 Instituto Nacional de Estudos e Pesquisas * Educacionais Anísio Teixeira <faleconosco@inep.gov.br> * * Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo * sob os termos da Licença Pública Geral GNU conforme publicada pela Free * Software Foundation; tanto a versão 2 da Licença, como (a seu critério) * qualquer versão posterior. * * Este programa é distribuí do na expectativa de que seja útil, porém, SEM * NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU * ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral * do GNU para mais detalhes. * * Você deve ter recebido uma cópia da Licença Pública Geral do GNU junto * com este programa; se não, escreva para a Free Software Foundation, * Inc., no endereço 59 Temple Street, Suite 330, Boston, MA * 02111-1307 USA. * * ------------------------------------------------------------------------* */ package sistemaEscola.aluno.controller import javax.jws.WebMethod; import javax.jws.WebParam; import javax.jws.WebResult;

173

import javax.jws.WebService; /** * Controla as Requisições referentes ao Aluno * * Essa é a classe responsável por receber as requisições feitas * pelo usuário em relação ao aluno, e comunica-las as camadas * responsáveis e depois enviar a camada de visão as informações * necessárias a cada tela */ class AlunoController extends AbstractController { }

7.3.3 Por Atributo
 

Pequena descrição do Atributo @var - Tipo do Atributo (para linguagens dinâmicas)

<?php /** * AlunoModel é o modelo do aluno * * Este arquivo é um exemplo de como a documentação deve * ser. Para tal foi criado este modelo de alunos * como exemplo que terá nos comentários as anotações * necessárias as classes e atributos * * @package sistemaEscola.aluno.model * @author Perna Longa * @supplier Acme * @since 16/10/2009 * @licence GNU GENERAL PUBLIC LICENSE 2 GPLv2 * *------------------------------------------------------------------------* * Copyright (C) 2006 Instituto Nacional de Estudos e Pesquisas * Educacionais Anísio Teixeira <faleconosco@inep.gov.br> * * Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo * sob os termos da Licença Pública Geral GNU conforme publicada pela Free * Software Foundation; tanto a versão 2 da Licença, como (a seu critério) * qualquer versão posterior. * * Este programa é distribuí do na expectativa de que seja útil, porém, SEM * NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU * ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral * do GNU para mais detalhes.

174

* * Você deve ter recebido uma cópia da Licença Pública Geral do GNU junto * com este programa; se não, escreva para a Free Software Foundation, * Inc., no endereço 59 Temple Street, Suite 330, Boston, MA * 02111-1307 USA. * * ------------------------------------------------------------------------* */ /** * Modelo com os dados do Aluno * * Essa é a classe responsável por ter os dados de cada aluno além * dos métodos necessários para se manipular o aluno juntamente com * as regras de negócio necessárias nestes casos. */ class AlunoModel extends AbstractModel { /** * Id do Aluno * * @var Integer */ protected $intId; /** * Nome do Aluno * * @var String */ protected $strNome; /** * Data Nascimento do Aluno * * @var Date */ protected $objDataNascimento; } ?> /** * AlunoModel é o modelo do aluno * * Este arquivo é um exemplo de como a documentação deve * ser. Para tal foi criado este modelo de alunos * como exemplo que terá nos comentários as anotações * necessárias as classes e atributos e métodos * * @author Perna Longa * @supplier Acme * @since 16/10/2009

175

* @licence GNU GENERAL PUBLIC LICENSE 2 GPLv2 * *------------------------------------------------------------------------* * Copyright (C) 2006 Instituto Nacional de Estudos e Pesquisas * Educacionais Anísio Teixeira <faleconosco@inep.gov.br> * * Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo * sob os termos da Licença Pública Geral GNU conforme publicada pela Free * Software Foundation; tanto a versão 2 da Licença, como (a seu critério) * qualquer versão posterior. * * Este programa é distribuí do na expectativa de que seja útil, porém, SEM * NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU * ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral * do GNU para mais detalhes. * * Você deve ter recebido uma cópia da Licença Pública Geral do GNU junto * com este programa; se não, escreva para a Free Software Foundation, * Inc., no endereço 59 Temple Street, Suite 330, Boston, MA * 02111-1307 USA. * * ------------------------------------------------------------------------* */ package sistemaEscola.aluno.model /** * Modelo com os dados do Aluno * * Essa é a classe responsável por ter os dados de cada aluno além * dos métodos necessários para se manipular o aluno juntamente com * as regras de negócio necessárias nestes casos. */ class AlunoModel extends AbstractModel { /** * Id do Aluno * */ protected Integer id; /** * Nome do Aluno */ protected String nome; /** * Data Nascimento do Aluno * */

176

protected Date dataNascimento; }

7.3.4 Por Método
    

@changedby - O nome do último programador que alterou o método ( se houver ) @changeddate - Data de alteração no formato dd/mm/yyyy @return - Tipo do Retorno (para linguagens dinâmicas) e uma descrição (se necessário) @param - Tipo do Retorno (para linguagens dinâmicas), nome do parâmetro e uma descrição (se necessário) @example - Item opcional que contém um trecho de código que exemplifique uma chamada do método e seu retorno, cercado por "{" e "}"

<?php /** * AlunoModel é o modelo do aluno * * Este arquivo é um exemplo de como a documentação deve * ser. Para tal foi criado este modelo de alunos * como exemplo que terá nos comentários as anotações * necessárias as classes e atributos e métodos * * @package sistemaEscola.aluno.model * @author Perna Longa * @supplier Acme * @since 16/10/2009 * @licence GNU GENERAL PUBLIC LICENSE 2 GPLv2 * *------------------------------------------------------------------------* * Copyright (C) 2006 Instituto Nacional de Estudos e Pesquisas * Educacionais Anísio Teixeira <faleconosco@inep.gov.br> * * Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo * sob os termos da Licença Pública Geral GNU conforme publicada pela Free * Software Foundation; tanto a versão 2 da Licença, como (a seu critério) * qualquer versão posterior. * * Este programa é distribuí do na expectativa de que seja útil, porém, SEM * NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU * ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral * do GNU para mais detalhes. * * Você deve ter recebido uma cópia da Licença Pública Geral do GNU junto * com este programa; se não, escreva para a Free Software Foundation, * Inc., no endereço 59 Temple Street, Suite 330, Boston, MA * 02111-1307 USA. *

177

* ------------------------------------------------------------------------* */ /** * Modelo com os dados do Aluno * * Essa é a classe responsável por ter os dados de cada aluno além * dos métodos necessários para se manipular o aluno juntamente com * as regras de negócio necessárias nestes casos. */ class AlunoModel extends AbstractModel { /** * Id do Aluno * * @var Integer */ protected $intId; /** * Nome do Aluno * * @var String */ protected $strNome; /** * Data Nascimento do Aluno * * @var Date */ protected $objDataNascimento; /** * Informa o Nome do Aluno * * @param String $strNome * @return AlunoModel $thi * @assert( "joao" )->getNome() == "joao" */ public function setNome( $strNome ) { $this->strNome = (string)$strNome; return $this; } /** * Obtem o Nome do Aluno * * @return String Nome do aluno */

178

public function getNome() { return $this->strNome; } } ?> /** * AlunoModel é o modelo do aluno * * Este arquivo é um exemplo de como a documentação deve * ser. Para tal foi criado este modelo de alunos * como exemplo que terá nos comentários as anotações * necessárias as classes e atributos e métodos * * @author Perna Longa * @supplier Acme * @since 16/10/2009 * @licence GNU GENERAL PUBLIC LICENSE 2 GPLv2 * *------------------------------------------------------------------------* * Copyright (C) 2006 Instituto Nacional de Estudos e Pesquisas * Educacionais Anísio Teixeira <faleconosco@inep.gov.br> * * Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo * sob os termos da Licença Pública Geral GNU conforme publicada pela Free * Software Foundation; tanto a versão 2 da Licença, como (a seu critério) * qualquer versão posterior. * * Este programa é distribuí do na expectativa de que seja útil, porém, SEM * NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU * ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral * do GNU para mais detalhes. * * Você deve ter recebido uma cópia da Licença Pública Geral do GNU junto * com este programa; se não, escreva para a Free Software Foundation, * Inc., no endereço 59 Temple Street, Suite 330, Boston, MA * 02111-1307 USA. * * ------------------------------------------------------------------------* */ package sistemaEscola.aluno.model /** * Modelo com os dados do Aluno * * Essa é a classe responsável por ter os dados de cada aluno além * dos métodos necessários para se manipular o aluno juntamente com * as regras de negócio necessárias nestes casos. */

179

class AlunoModel extends AbstractModel { /** * Id do Aluno * */ protected Integer id; /** * Nome do Aluno */ protected String nome; /** * Data Nascimento do Aluno * */ protected Date dataNascimento; /** * Informa o Nome do Aluno * * @param nome * @return AlunoModel */ public AlunoModel setNome( String nome ) { this.nome = nome; } /** * Obtem o Nome do Aluno * * @return String Nome do aluno */ public function getNome() { return this.nome; } }

7.4 Comentários
Os comentários são informações que não interferem na execução do código mas que auxiliam o planejamento e a compreensão do código. Estes devem sempre ser escritos em português, com um texto objetivo e sem o uso de linguagem informal.

180

Operações mais complexas exigem comentários maiores enquanto operações triviais podem ter o comentário apenas descritivo. Os comentários podem contar com uma descrição em lista numerada ou não para descrever os passos que se planejou para a execução da tarefa.
<?php /** * AlunoModel é o modelo do aluno * * Este arquivo é um exemplo de como a documentação deve * ser. Para tal foi criado este modelo de alunos * como exemplo que terá nos comentários as anotações * necessárias as classes e atributos e métodos * * @package sistemaEscola.aluno.model * @author Perna Longa * @supplier Acme * @since 16/10/2009 * @licence GNU GENERAL PUBLIC LICENSE 2 GPLv2 * *------------------------------------------------------------------------* * Copyright (C) 2006 Instituto Nacional de Estudos e Pesquisas * Educacionais Anísio Teixeira <faleconosco@inep.gov.br> * * Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo * sob os termos da Licença Pública Geral GNU conforme publicada pela Free * Software Foundation; tanto a versão 2 da Licença, como (a seu critério) * qualquer versão posterior. * * Este programa é distribuí do na expectativa de que seja útil, porém, SEM * NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU * ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral * do GNU para mais detalhes. * * Você deve ter recebido uma cópia da Licença Pública Geral do GNU junto * com este programa; se não, escreva para a Free Software Foundation, * Inc., no endereço 59 Temple Street, Suite 330, Boston, MA * 02111-1307 USA. * * ------------------------------------------------------------------------* */ /** * Modelo com os dados do Aluno * * Essa é a classe responsável por ter os dados de cada aluno além * dos métodos necessários para se manipular o aluno juntamente com * as regras de negócio necessárias nestes casos. */

181

class AlunoModel extends AbstractModel { /** * Id do Aluno * * @var Integer */ protected $intId; /** * Nome do Aluno * * @var String */ protected $strNome; /** * Data Nascimento do Aluno * * @var Date */ protected $objDataNascimento; /** * Informa o Nome do Aluno * * @param String $strNome * @return AlunoModel $this */ public function setNome( $strNome ) { $this->strNome = (string)$strNome; return $this; } /** * Obtem o Nome do Aluno * * @return String Nome do aluno */ public function getNome() { return $this->strNome; } /** * Muda o Aluno de Turma * * Após fazer as devidas validações, remove o aluno da * Turma de Origem e o adiciona a Turma de Destino * * 1. Confere se o Aluno está na Turma de Origem,

182

* Sobe Erro Caso Falhe * 2. Confere se existe vaga na Turma de Destino, * Sobe Erro Caso Falhe * 3. Confere se o Aluno pode ir a Turma De Destino, * Sobe Erro Caso Falhe * 4. Remove o Aluno da Turma de Origem * 5. Adiciona o Aluno a Turma de Destino * * @param TurmaModel $objTurmaOrigem * @param TurmaModel $objTurmaDestino * @throws AlunoException * @return AlunoModel eu */ public function mudaAlunoDeTurma( TurmaModel $objTurmaOrigem , TurmaModel $objTurmaDestino ) { // 1. Confere se o Aluno está na Turma de Origem, Sobe Erro Caso Falhe if( !$objTurmaOrigem->temAluno( $this ) ) { throw new AlunoException( "Aluno não está na turma de Origem." ); } // 2. Confere se existe vaga na Turma de Destino, Sobe Erro Caso Falhe if( !$objTurmaDestino->hasVagas() ) { throw new AlunoException( "Turma de Destino não tem vagas." ); } // 3. Confere se o Aluno pode ir a Turma De Destino, Sobe Erro Caso Falhe if( !$objTurmaDestino->podeReceberAluno( $this ) ) { throw new AlunoException( "Turma de Destino não é adequada ao Aluno" ); } // 4. Remove o Aluno da Turma de Origem $objTurmaOrigem->removeAluno( $this ); // 5. Adiciona o Aluno a Turma de Destino $objTurmaDestino->adicionaAluno( $this ); return $this; } } ?>

183

/** * AlunoModel é o modelo do aluno * * Este arquivo é um exemplo de como a documentação deve * ser. Para tal foi criado este modelo de alunos * como exemplo que terá nos comentários as anotações * necessárias as classes e atributos e métodos * * @author Perna Longa * @supplier Acme * @since 16/10/2009 * @licence GNU GENERAL PUBLIC LICENSE 2 GPLv2 * *------------------------------------------------------------------------* * Copyright (C) 2006 Instituto Nacional de Estudos e Pesquisas * Educacionais Anísio Teixeira <faleconosco@inep.gov.br> * * Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo * sob os termos da Licença Pública Geral GNU conforme publicada pela Free * Software Foundation; tanto a versão 2 da Licença, como (a seu critério) * qualquer versão posterior. * * Este programa é distribuí do na expectativa de que seja útil, porém, SEM * NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU * ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral * do GNU para mais detalhes. * * Você deve ter recebido uma cópia da Licença Pública Geral do GNU junto * com este programa; se não, escreva para a Free Software Foundation, * Inc., no endereço 59 Temple Street, Suite 330, Boston, MA * 02111-1307 USA. * * ------------------------------------------------------------------------* */ package sistemaEscola.aluno.model /** * Modelo com os dados do Aluno * * Essa é a classe responsável por ter os dados de cada aluno além * dos métodos necessários para se manipular o aluno juntamente com * as regras de negócio necessárias nestes casos. */ class AlunoModel extends AbstractModel { /** * Id do Aluno * */

184

protected Integer id; /** * Nome do Aluno */ protected String nome; /** * Data Nascimento do Aluno * */ protected Date dataNascimento; /** * Informa o Nome do Aluno * * @param nome * @return AlunoModel */ public AlunoModel setNome( String nome ) { this.nome = nome; return this; } /** * Obtem o Nome do Aluno * * @return Nome do aluno */ public function getNome() { return this.nome; } /** * Muda o Aluno de Turma * * Após fazer as devidas validações, remove o aluno da * Turma de Origem e o adiciona a Turma de Destino * * 1. Confere se o Aluno está na Turma de Origem, * Sobe Erro Caso Falhe * 2. Confere se existe vaga na Turma de Destino, * Sobe Erro Caso Falhe * 3. Confere se o Aluno pode ir a Turma De Destino, * Sobe Erro Caso Falhe * 4. Remove o Aluno da Turma de Origem * 5. Adiciona o Aluno a Turma de Destino * * @param TurmaModel turmaOrigem * @param TurmaModel turmaDestino

185

* @return eu */ public AlunoModel mudaAlunoDeTurma throws AlunoException ( TurmaModel turmaOrigem , TurmaModel turmaDestino ) { // 1. Confere se o Aluno está na Turma de Origem, Sobe Erro Caso Falhe if( !turmaOrigem.temAluno( this ) ) { throw new AlunoException( "Aluno não está na turma de Origem." ); } // 2. Confere se existe vaga na Turma de Destino, Sobe Erro Caso Falhe if( !turmaDestino.hasVagas() ) { throw new AlunoException( "Turma de Destino não tem vagas." ); } // 3. Confere se o Aluno pode ir a Turma De Destino, Sobe Erro Caso Falhe if( !turmaDestino.podeReceberAluno( this ) ) { throw new AlunoException( "Turma de Destino não é adequada ao Aluno" ); } // 4. Remove o Aluno da Turma de Origem turmaOrigem.removeAluno( this ); // 5. Adiciona o Aluno a Turma de Destino turmaDestino.adicionaAluno( this ); return this; } }

Um método com muitos passos em sua execução, costuma ser um indício de que este deve ser fragmentado em métodos menores e mais básicos.

7.5 Parâmetros
7.5.1 Tipar os elementos de entrada Sempre que possível, deve-se tipar os elementos nas entradas dos métodos e funções. Este tipo deve ser adequado aos métodos utilizados do parâmetro recebido. Caso o parâmetro seja tipado como uma Classe ou interface, deve-se utilizar apenas os métodos disponíveis

186

nesta Classe ou interface, salvo algum caso especial com o devido tratamento caso o método não exista. 7.5.2 Evitar Grande Quantidade de Parâmetros Quando um método passa a ter uma grande quantidade de parâmetros, sua chamada fica de difícil compreensão e manutenção. Para resolver tal problema, se recomenda encapsular os dados a serem enviados em objetos de entidade ou modelo ou em objetos específicos de transição, se necessário. Ao invés de:
<?php /** * Exemplo de Classe Abstrata com Um Numero muito grande de Atributos * */ abstract class AlunoPersistence extends AbstractPersistence { /** * Busca por Alunos a partir de uma consulta com vários filtros * * (...) As descrições dos parametros foram suprimidas para facilitar * a leitura deste guia * @return AlunoModel[] */ public static function obtemDadosDaConsulta( $intMatriculaDaTurma , $strNomeDaTurma , $intAnoTurma , $intMatriculaDoAluno , $strNomeDoAluno , Date $objDataDeMatriculaFiltroInicio , Date $objDataDeMatriculaFiltroFim , Date $objDataNascimentoFiltroInicio , Date $objDataNascimentoFiltroFim , $booAlunoAtivo , $booAlunoAprovado , $strCepCidadeAluno , $intIdCidadeAluno , $intIdEstadoAluno , $intIdPaisAluno ) { // codigo da consulta // } }

187

?> package sistemaEscola.aluno.persistence /** * Exemplo de Classe Abstrata com Um Numero muito grande de Atributos * */ abstract class AlunoPersistence extends AbstractPersistence { /** * Busca por Alunos a partir de uma consulta com vários filtros * * (...) As descrições dos parametros foram suprimidas para facilitar * a leitura deste guia * @return Alunos */ public AlunoModel[] obtemDadosDaConsulta( Integer matriculaDaTurma , String nomeDaTurma , Integer anoTurma , Integer matriculaDoAluno , String nomeDoAluno , Date dataDeMatriculaFiltroInicio , Date dataDeMatriculaFiltroFim , Date dataNascimentoFiltroInicio , Date dataNascimentoFiltroFim , Boolean alunoAtivo , Boolean alunoAprovado , String cepCidadeAluno , Integer idCidadeAluno , Integer idEstadoAluno , Integer idPaisAluno ) { // codigo da consulta // } }

188

Dar preferencia para:
<?php /** * Exemplo de Classe Abstrata com Um Numero muito grande de Atributos * */ abstract class AlunoPersistence extends AbstractPersistence { /** * Busca por Alunos a partir de uma consulta com vários filtros * * (...) As descrições dos parametros foram suprimidas para facilitar * a leitura deste guia * @return AlunoModel[] */ public static function obtemDadosDaConsulta( AlunoModel $objAluno , TurmaModel $objTurma , EnderecoModel $objEndereco , FiltroData $objDataMatricula , FiltroData $objDataFim ) { // codigo da consulta // } } ?>

package sistemaEscola.aluno.persistence /** * Exemplo de Classe Abstrata com Um Numero muito grande de Atributos * */ abstract class AlunoPersistence extends AbstractPersistence { /** * Busca por Alunos a partir de uma consulta com vários filtros * * (...) As descrições dos parametros foram suprimidas para facilitar * a leitura deste guia * @return Alunos */ public AlunoModel[] obtemDadosDaConsulta( AlunoModel aluno, TurmaModel turma, EnderecoModel endereco, FiltroData dataMatricula,

189

FiltroData dataFim) { // codigo da consulta // } }

Ou até:
<?php /** * Exemplo de Classe Abstrata com Um Numero muito grande de Atributos * */ abstract class AlunoPersistence extends AbstractPersistence { /** * Busca por Alunos a partir de uma consulta com vários filtros * * (...) As descrições dos parametros foram suprimidas para facilitar * a leitura deste guia * @return AlunoModel[] */ public function obtemDadosDaConsulta( ConsultaAluno $objConsultaAluno ) { // codigo da consulta // } } ?> package sistemaEscola.aluno.persistence /** * Exemplo de Classe Abstrata com Um Numero muito grande de Atributos * */ abstract class AlunoPersistence extends AbstractPersistence { /** * Busca por Alunos a partir de uma consulta com vários filtros * * (...) As descrições dos parametros foram suprimidas para facilitar * a leitura deste guia * @return Alunos */ public AlunoModel[] obtemDadosDaConsulta( ConsultaAluno consultaAluno ) { // codigo da consulta // } }

190

7.5.3 Utilizar Coleções ao Invés de Lista de Parâmetros Ao invés de:
<?php /** * Exemplo de Classe Abstrata com Um Numero muito grande de Atributos */ abstract class AlunoPersistence extends AbstractPersistence { /** * Adiciona Alunos as Turmas * * (...) As descrições dos parametros foram suprimidas para facilitar * a leitura deste guia */ public function adicionaAlunosATurmas( AlunoModel $objAluno , AlunoModel $objAluno2 , AlunoModel $objAluno3 , TurmaModel $objTurma , TurmaModel $objTurma2 , TurmaModel $objTurma3 , TurmaModel $objTurma4 ) { // codigo da consulta // } } ?>

package sistemaEscola.aluno.persistence; /** * Exemplo de Classe Abstrata com Um Numero muito grande de Atributos */ abstract class AlunoPersistence extends AbstractPersistence { /** * Adiciona Alunos as Turmas * * (...) As descrições dos parametros foram suprimidas para facilitar * a leitura deste guia */ public void adicionaAlunosATurmas( AlunoModel aluno, AlunoModel aluno2, AlunoModel aluno3,

191

TurmaModel turma, TurmaModel turma2, TurmaModel turma3, TurmaModel turma4) { // codigo da consulta // } }

Dar preferência para:
<?php /** * Exemplo de Classe Abstrata com Um Numero muito grande de Atributos */ abstract class AlunoPersistence extends AbstractPersistence { /** * Adiciona Alunos as Turmas * * @param AlunoModel[] $arrAlunos * @param TurmaModel[] $arrTurmas */ public function adicionaAlunosATurmas( array $arrAlunos , array $arrTurmas ) { // codigo da consulta // } } ?>

package sistemaEscola.aluno.persistence /** * Exemplo de Classe Abstrata com Um Numero muito * grande de Atributos */ abstract class AlunoPersistence extends AbstractPersistence { /** * Adiciona Alunos as Turmas * * (...) As descrições dos parametros foram suprimidas para facilitar * a leitura deste guia */ public void adicionaAlunosATurmas( AlunoModel[] alunos, TurmaModel[] turmas) { // codigo da consulta / / } }

192

7.6 Variáveis
As variáveis devem ter nomes significativos, descritivos, mas não abusivamente grandes. Os nomes devem ser em português salvo alguma referência a um termo conhecido em inglês como Design Patterns ou termos que ao serem traduzidos se confundem com o significado de negócio. Deve-se evitar o abuso no tamanho do texto, usando nomes com objetividade. Em linguagens fracamente tipadas, se recomenda o uso de cabeçalhos que definam o tipo da variável. Se deve evitar que uma variável possa receber valores de diferentes tipos.
<?php /** * Exemplo de Nomes de Variáveis * @param PessoaModel $objPessoa */ function mostraDataPessoa( PessoaModel $objPessoa ) { $objDataNascimento = $objPessoa->getdataNascimento(); print $objDataNascimento->getDataAsTemplate(); } ?>

/** * Exemplo de Nomes de Atributos */ abstract class exemplo { public static void mostraDataPessoa(PessoaModel pessoa) { Date dataNascimento = pessoa.getdataNascimento(); System.out.println(dataNascimento.getDataFormatoTela()); } }

7.7 Métodos


Os métodos devem ter nome em português, na 3ª pessoa do singular do presente do indicativo;

193



Os nomes dos métodos devem fazer uma referência aos tipos dos parâmetros de entrada e os tipos dos parâmetros de saída. Caso os parâmetros ou o retorno seja uma lista, pode-se utilizar plural para deixar isso claro;

  

Deve-se evitar nomes vagos que não deixam claro o que o método faz; Deve-se evitar nomes excessivamente grandes; Os cabeçalhos de tipo dos atributos, dos parâmetros e das variáveis, caso exista, não devem ser passados para os nomes dos métodos;



Utilizar preposições e pronomes em maiúsculo.

7.8 Wiki
O INEP disponibiliza Wiki
46

interno com informações sobre metodologias, definições,

planejamentos, plugins, links úteis, tutoriais e demais informações que são continuamente inclusas, sendo uma fonte valiosa para pesquisa.

7.9 Validações Automáticas
Para garantir a qualidade dos softwares gerados, durante o período de análise de qualidade, serão utilizadas ferramentas de controle validação automática do código. Recomenda-se utilizar alguma dessas ferramentas de validação de código durante o desenvolvimento e configurar a IDE utilizada para gerar código já dentro dos padrões, garantindo assim, que a validação do software será sempre bem sucedida. Dentre essas:
      

PHP_CodeSniffer - PHP PHP_Beautifier - PHP phpStylist - PHP phpCodeBeautifier - PHP Artistic Style - C, C++, C# e Java Indent - C e C++ Uncrustify - C, C++, C#, ObjectiveC, D, Java, Pawn e VALA
47 48 49 50 51 52 53

194



UniversalIndentGUI - C, C++, C#, Cobol, CSS, D, Fortran, HTML, JAVA, Javascript, JSP, Objective-C, Pawn, Perl, PHP, Python, Ruby, Shellscript, VALA, XML e XSL
54

7.10 Acesso a Banco de Dados
Os Bancos de Dados são a maneira mais recomendada e utilizada para se persistir as informações dos sistemas. Infelizmente quando a comunicação entre o sistema e o Banco de Dados não é feita da maneira adequada, torna-se possível o uso indevido do Banco de Dados. Nestes casos, corre-se o risco de acesso ou alteração indevido a informações restritas, injeção de SQL e até a destruição do Banco de Dados por parte do invasor.

7.10.1 Privilegiar o uso de Chamadas Parametrizadas O uso de Chamadas Parametrizadas ( Query Binds ) é uma das técnicas mais confiáveis para prevenir-se de SQL Injection . Essa técnica consiste em enviar de modo separado a
55

requisição SQL dos valores dos parâmetros desta requisição. Deste modo o valor do parâmetro informado pelo usuário não se mistura com o comando SQL, não podendo assim alterá-lo. Além do óbvio ganho de segurança, este modo de fazer requisições permite que o Banco de Dados reconheça a consulta, que não se mistura com os parâmetros, sem ter de interpreta-lá e gerar uma estratégia de execução a cada vez que a requisição for executada. O Banco de Dados precisa apenas aplicar a mesma consulta já conhecida com os novos parâmetros o que torna este processo mais rápido. Por fim, caso se considere necessário, pode-se transformar a requisição numa função ou numa view do Banco de Dados. Desde que a consulta continue recebendo os mesmo parâmetros na mesma ordem e gerando o mesmo resultado, a equipe de Banco de Dados poderá otimizar livremente a requisição, adaptando-a a realidade dos índices e da massa de dados existente.

195

<?php /** * (...) Cabeçalho suprimido para facilitar * a leitura */ /** * Exemplo de Query Binds pelo PHP * * @param string $strUsuarioNome * @param string $strSenha * @return integer */ function exemploDeAcessoBanco( $strUsuarioNome, $strSenha ) { $strUsuarioNome = (string)$strUsuarioNome; $strSenha = (string)$strSenha; $objBanco = new PDO('pgsql:dbname=database'); $objComando = $objBanco->prepare( " SELECT co_usuario FROM usuario WHERE no_usuario = :usuario AND ds_senha = :senha " ); $objComando->bindParam(':usuario', $strUsuarioNome ); $objComando->bindParam(':senha', md5( $strSenha ) ); $objResultado = $objComando->execute(); return (integer)$objResultado->co_usuario; } ?>

/** * (...) Cabeçalho suprimido para facilitar * a leitura */ import java.util.List; import javax.management.Query; import javax.persistence.EntityManager; import javax.persistence.Query;

196

import org.apache.commons.lang.StringUtils; // (...) /** * Exemplo de Query Binds para JPA */ abstract class exemploQueryBinds { // (...) public List<Usuario> getUsuarioPeloNome(String strNome) { String strConsulta = ""+ " SELECT "+ " u "+ " FROM "+ " Usuario u " + " WHERE " + " LOWER( Usuario.strNome ) = :nomeUsuario"; Query objComando = getEntityManager().createQuery(strConsulta); objComando.setParameter("nomeUsuario", StringUtils.lowerCase(strNome)); return objComando.getResultList(); } }

7.10.2 Seguir as Normas do Guia de Banco de Dados O guia de Banco de Dados tem o objetivo de apresentar regras específicas e orientações gerais (boas práticas) dos processos da área de Banco de Dados, além de definir um padrão de nomenclatura para os objetos de Banco de Dados e a documentação necessária para manter a qualidade dos metadados.

8. Requisitos não Funcionais
8.1 Questão de Compatibilidade com Navegadores
O software a ser desenvolvido deve ser compatível com os navegadores mais utilizados ( Internet Explorer , Mozilla Firefox , Apple Safari , Opera , Google Chrome ) em sua versão
56 57 58 59 60

atual e versão anterior em relação a data de fechamento da primeira sprint (iteração) salvo negociado com o cliente.

197

8.2 Performance
Muitos dos sistemas desenvolvidos no INEP apresentam uma complexidade computacional na manutenção da disponibilidade do serviço. É comum os sistemas terem uma grande quantidade de acessos simultâneos, mais de 10.000 acessos simultâneos, acessando e alterando uma grande quantidade de dados, mais de 1.000 cadastros por segundo, em cima de um Banco de Dados com uma grande massa de dados, acima de 1 Terabyte. Simultaneamente ao uso comum, a geração de relatórios complexos, podem ainda exigir uma grande quantidade de recursos das máquinas de Banco de Dados. Apesar disto, esses sistemas devem manter continuamente em funcionamento, com respostas rápidas ao seu usuário final e com confiabilidade nos serviços prestados. Para tal, é necessário um planejamento prévio de como lidar com esses problemas, sendo importante para isso conhecer o hardware disponível e utilizar a solução em software que melhor satisfaça as especificidades de cada projeto. É recomendado que, as versões em desenvolvimento tenham sua qualidade aferida através de Teste de Stress , com uma Massa de Dados de Teste , gerada com Generate Data por
61 62 63

exemplo, inserida automaticamente com o uso de bots para Firefox e Apache Jmeter .
67 68

64 65

e macros , como exemplo: iMacros
66

9. Gestão de Configuração
9.1 Controle de Versão
Deve-se utilizar ferramenta de controle de versão do INEP seguindo as diretrizes de uso desta conforme documentação específica. Sempre que possível informar nas mensagens (comentário ao fazer commit é obrigatório) da ferramenta de controle de versão qual a demanda que justifica tais alterações.

198

9.2 Ferramenta de controle de demandas
Deve-se manter atualizada a ferramenta de controle de demandas utilizada pelo INEP. Sempre que possível informando qual versão do sistema que contém a correção da demanda aberta pela cliente.

10. Recomendações específicas por Linguagem
10.1 Recomendações para desenvolvimento em Java
10.1.1 Convenção de Código O desenvolvimento Java, nos itens além dos aqui descritos, devem seguir as normas estabelecidas seguindo o Java Code Convetions - as Convenções para Código Java.
69

10.1.2 Framework Web - JBoss Seam - MECSeam O MECSeam é um extensão do framework JBoss Seam desenvolvida no INEP. Ele possuí
70

componentes visuais e não visuais, focado na produtividade e usabilidade de acordo com as necessidades dos projetos do INEP, facilitando assim o desenvolvimento de aplicações Web. Todo o desenvolvimento Web em Java deverá utilizar esse framework. 10.1.3 JUnit O JUnit
71 72 73

é um framework open-source, com suporte à criação de testes automatizados na

linguagem de programação Java. Esse framework facilita a criação de código para a automação de testes com apresentação dos resultados. Com ele, pode ser verificado se cada método de uma classe funciona da forma esperada, exibindo possíveis erros ou falhas podendo ser utilizado tanto para a execução de baterias de testes como para extensão. Com JUnit, o programador tem uma ferramenta que o ajudará a eliminar os erros de seu código de maneira mais atraente. Pois, se criou uma forma interessante de realizar testes onde é possível a criação de programas que realizem os testes pelo programador. É

199

utilizando esse conceito que JUnit permite deixar a fase de teste de unidades bem mais agradável ao programador. Deve-se buscar, ao se desenvolver os testes, abordar os mais variados cenários de execução. Alguns testes podem ser baseados nos Casos de Teste, nos Casos de Uso ou nos requisitos do sistema. Outros testes podem vir ainda a testar um cenário específico que deve gerar um retorno ou exceção em especial. Algumas ferramentas de análise de resultado de testes, podem informar, a partir do resultado do teste, quais testes não foram bem sucedidos, quais classes e métodos não foram testados e quais linhas nunca foram executadas em nenhum teste. Para se testar a classe Calculadora:
/** * Classe a ser testada */ public class Calculadora { static public int soma(int a, int b) { return a + b; } }

Deve-se criar a classe TestCalculadora:
/** * (...) */ import junit.framework.*; /** * (...) */ public class TestCalculadora extends TestCase { /** * Teste mais simples do metodo add * 1o e 2o número positivos */ public void testSoma() {

200

int num1 = 3; int num2 = 2; int total = 5; int sum = 0; sum = Calculadora.soma(num1, num2); assertEquals(sum, total); } /** * Teste do metodo add com o 1o número 0 */ public void testSomaZero() { int num1 = 3; int num2 = 0; int total = 3; int sum = 0; sum = Calculadora.soma(num1, num2); assertEquals(sum, total); } /** * Teste do metodo add com o 1o número negativo */ public void testSomaNegativoPrimeiro() { int num1 = -3; int num2 = 10; int total = 7; int sum = 0; sum = Calculadora.soma(num1, num2); assertEquals(sum, total); } /** * Teste do metodo add com o 2o número 0 */ public void testSomaZeroSegundo() { int num1 = 0; int num2 = 3; int total = 3; int sum = 0; sum = Calculadora.soma(num1, num2); assertEquals(sum, total); } /** * Teste do metodo add com o 2o número negativo */ public void testSomaNegativoSegundo() { int num1 = 10; int num2 = -3; int total = 7; int sum = 0;

201

sum = Calculadora.soma(num1, num2); assertEquals(sum, total); } /** * Teste do metodo add os dois números negativos */ public void testSomaNegativos() { int num1 = -10; int num2 = -3; int total = -13; int sum = 0; sum = Calculadora.soma(num1, num2); assertEquals(sum, total); } }

10.1.4 EJB O uso de EJB
74

- Enterprise Java Beans - deverá acontecer apenas se for necessário e

deverá ser feito na versão 3.0 ou superior. Um bom exemplo para o seu uso é a necessidade da validação de usuários em um servidor de LDAP, pois a regra de acesso será a mesma para as aplicações que necessitam desse requisito. Não é aconselhado a criação de entidades para reaproveitamento em outros projetos. Isso se deve ao fato que tabelas de sistemas legados possuem diversas colunas e relacionamentos que podem não ser necessários de acordo com projetos distintos. Com a criação de um EJB mapeando todas as colunas e relacionamentos, poderá ocorrer um desperdício de memória o que acaba impactando no desempenho da aplicação.

10.1.5 DROOLS O DROOLS é um sistema de BRMS - Business Rule Management System -- Sistema de
75 76

Gerenciamento de Regras de Negócio - que proporciona a possibilidade de expressar requisitos em forma de regras de produção. É então possível a alteração de regras de negócio sem alterar o código da aplicação.

202

10.1.6 JASPER REPORTS JasperReports é um framework open source para desenvolver relatórios em PDF, HTML,
77

XLS, RTF, ODT, CSV, TXT e arquivos XML. É totalmente escrito em Java e pode ser usado em uma variedade de aplicações Java habilitado para gerar conteúdo dinâmico. Seu principal objetivo é ajudar a criar a relatórios prontos para imprimir documentos de uma forma simples.

10.1.9 JPA O JPA - Java Persistence API - é uma especificação java que fornece um modelo de
78

persistência POJO para mapeamento objeto-relacional. O JPA originalmente foi projetado como parte da especificação JSR 220 para EJB3 e é implementado por vários frameworks ORM (object-relational mapping) como Hibernate, TopLink, EclipseLink, OpenJPA, porém também pode ser usado em aplicações Web, aplicações Cliente e também fora da plataforma Java EE, implementado também em frameworks como Spring e Jboss Seam. Mais informações em: http://java.sun.com/javaee/5/docs/tutorial/doc/bnbpz.html.

10.1.10 Guia de Arquitetura Java A equipe de desenvolvimento do Inep disponibiliza um Guia de Arquitetura Java, que detalha o padrão de arquitetura para o desenvolvimento de sistemas utilizando a linguagem Java dentro do Inep. O mesmo encontra-se em:
http://subversion.inep.gov.br/svn/documentos/DTDIE/Documentos_Metodologia/Guias/Guia_Arquitetura.pdf

10.2 Recomendações para desenvolvimento em PHP
10.2.1 Padrões de Projeto


Modularização

203

As classes devem ser agrupadas dentro de contextos lógicos compreensíveis. Isso pode ser feito através de camadas, caso mais comum, mas também através de módulos ou componentes auxiliares. Dentro do módulo se terá as classes que servem como meio de comunicação com o resto do sistema, enquanto as demais devem ser utilizadas apenas internamente ao módulo. É importante que a comunicação do módulo com o mundo exterior seja feita se utilizando uma interface de comunicação bem definida. Isso não só facilita os testes unitários, como possibilita que a manutenção, evolução e até troca do módulo por outro similar seja feito de maneira facilitada, mantendo a coesão do sistema e diminuindo o acoplamento necessário para isso.


Acesso Restrito a Pastas e Arquivos

Em produção, o PHP não deve ser utilizado em nenhum outro ambiente além do Apache em uma máquina Linux. O usuário do Apache não deve ter permissão de alterar os arquivos PHP disponíveis no site. A permissão de alteração deve ser restrita a alguma(s) pasta(s) especial(is) para este fim. Estas pastas não devem ter arquivos PHP. O usuário do Apache não deve ter acesso as pastas do sistema além das estritamente necessárias para a execução do sistema. Em sistemas em que a pasta pública se mantém isolada das demais pastas apenas esta pasta deve ser acessível pelo host do Apache. Em sistemas em que o bootstrap é um único arquivo "index.php", como no caso do Zend Framework, apenas este arquivo deve ser acessível pelo host do Apache, estando de preferência numa pasta isolada chamada public. Deve-se configurar o Apache de modo a não executar os arquivos PHP que não sejam o "index.php" como também para não retornar o conteúdo dos mesmos como texto. Salvo uma configuração de regras de acesso do Apache no htaccess previamente combinadas e aprovadas pelo cliente.

204



Constantes x Classes Abstratas

O uso de constantes é uma prática bastante comum nos sistemas PHP. O problema desta prática é que, com o aumento contínuo dos sistemas, os arquivos de constantes se tornam por demais grandes, gerando um excesso de carga na execução do sistema tornando-o assim mais lento. Este problema é facilmente resolvido se evitando o uso de constantes no sistema com o uso de classes abstratas que contenham as constantes relacionadas por contexto. Deste modo, a carga inteligente do sistema através do autoload evita a lentidão
79

pelo arquivo excessivamente grande, lendo apenas as informações necessárias para cada execução.

10.2.2 Mensagens de Erro Os sistemas desenvolvidos em PHP não devem gerar mensagens de erro de qualquer tipo ( E_FATAL, E_WARNING, E_NOTICE, E_STRICT, etc. ) sendo o tratamento destas necessário durante o desenvolvimento. Apenas alterar a configuração do PHP para que alguma(s) desta(s) mensagem(ns) não seja mostrada na tela não será considerada como uma solução aceitável. Para tal, recomenda-se que, nos demais ambientes fora produção, essas mensagens de erro sejam visíveis, sendo tratadas durante a fase de desenvolvimento. Para facilitar a rastreabilidade e conseqüente correção dos erros do sistema, recomenda-se converter as mensagens de erro geradas pelo PHP em exceções, sempre que possível. Para tal deve-se utilizar a função set_error_handler , conforme o manual do PHP orienta no item
80

ErrorException .
81

<?php function exception_error_handler( $intErrNum , $strErrText ,

205

$strErrFile , $intErrline ) { throw new ErrorException( $strErrText , 0 , $intErrNum, $strErrFile, $intErrLine ); }

set_error_handler("exception_error_handler"); ?>

10.2.3 Framework O desenvolvimento em PHP no INEP é feito se utilizando o Zend Framework com o PDO
82 84 83

como camada de abstração de Banco de Dados e o Smarty , quando considerado necessário, como camada de template. O PHPUnit é o framework a ser utilizado para o desenvolvimento de Teste Unitários. 10.2.4 Guia de Arquitetura PHP A equipe de desenvolvimento do Inep disponibiliza um Guia de Arquitetura PHP, que detalha o padrão de arquitetura para o desenvolvimento de sistemas utilizando a linguagem PHP dentro do Inep. O mesmo encontra-se em:
http://subversion.inep.gov.br/svn/documentos/DTDIE/Documentos_Metodologia/Guias/Guia_Arquitetura.pdf

10.2.5 Nomenclatura


Arquivos

206

Arquivos de classe devem ter o nome da classe concatenado com ".php". Arquivos templates que não forem classes devem ter um nome significativo e único. A nomenclatura deve seguir o padrão Camel Case .
85

Exemplos:

AlunoController.php; TelaInserirAluno.php


Variáveis As variáveis PHP além de seguirem todas as recomendações gerais de variáveis deste documento devem ter o prefixo indicativo de tipo conforme abaixo: Tipo Boolean Inteiro Float String Array Object Mixer Prefixo boo int flo str arr obj mix Exemplo $booFormado $intIdade $floSaldo $strNome $arrPessoas $objPessoa $mixEntrada



Constantes Constantes devem ser escritas em caixa alta se utilizando de "_" para separar as palavras. Exemplo:

<?php /** * (...) * Exemplo de Constante em Classe Abstrata */

207

abstract class ParametrosVoo { /** * Numero maximo de passageiros por voo */ const MAXIMO_DE_PASSAGEIROS_POR_VOO = 80; /** * Numero maximo de toneladas suportadas por voo */ const MAXIMO_DE_TONELADAS_POR_VOO = 100; /** * Maximo de Viajens em um aviao por dia */ const MAXIMO_DE_VIAGENS_DO_AVIAO_POR_DIA = 3; /** * Tempo maximo de voo em horas */ const TEMPO_MAXIMO_VOO_EM_HORAS = 18; /** * Capacidade maxima de toneladas de combustivel no tanque do aviao */ const CAPACIDADE_TANQUE_COMBUSTIVEL_EM_TONELADAS = 35; } ?>

10.2.6 Tags PHP Sempre Completas O PHP permite que arquivos que contenham apenas código PHP não precisem fechar a tag PHP no final do arquivo. Este guia recomenda que se feche todas as tags PHP que forem abertas. Recomenda-se um cuidado especial para não escrever acidentalmente fora das tags PHP pois isto pode gerar problemas na administração de cookies e sessão, além de escrever o conteúdo acidentalmente digitado na tela do usuário final.

Ao Invés:
<?php // Comandos PHP

208

ou
<? // Comandos PHP

Recomenda-se:
<?php // Comandos PHP ?>

10.2.7 Parênteses Os parênteses devem ser utilizados em todas as operações lógicas, sempre separados por um espaço dos elementos lógicos envolvidos. A tabulação de grandes condicionais deve ser feita em modelo dos blocos de código, similar a tabulação de um XML. Tal como no exemplo: Ao Invés:
<?php /** * (...) * Exemplo de Operação Lógica Ruim * * @param boolean $booAprovado * @param boolean $booPresente * @param boolean $booEmDia * @param boolean $booAlunoEspecial * @return boolean */ function exemploRuim( $booAprovado , $booPresente , $booEmDia , $booAlunoEspecial ) { return ( $booAprovado == $booPresente || $booPresente == $booEmDia && $booPresente !== $booAprovado || $booAprovado == $booAlunoEspecial ); } ?>

209

Recomenda-se:
<?php /** * (...) * Exemplo de Operação Lógica Bom * * @param boolean $booAprovado * @param boolean $booPresente * @param boolean $booEmDia * @param boolean $booAlunoEspecial * @return boolean */ function exemploBom( $booAprovado , $booPresente , $booEmDia , $booAlunoEspecial ) { return ( ( ( $booAprovado == $booPresente ) || ( $booPresente == $booEmDia ) ) && ( ( $booPresente !== $booAprovado ) || ( $booAprovado == $booAlunoEspecial ) ) ); } ?>

210

10.2.8 Arrays

Quanto a formatação dos Arrays, os Arrays podem ser escritos nas seguintes formas: Arrays Pequenos Sem Chave:
$arrPrimos = Array( 2 , 3 , 5 , 7 , 11 );

Arrays Pequenos com Chave:
$arrDobro = Array( 1 => 2 , 2 => 4 , 3 => 6 );

Arrays Grandes Sem Chave:
$arrPessoas = Array( "Joao Cabral de Melo Neto", "Graciliano Ramos", "Augusto dos Anjos" );

Arrays Grandes com Chave:
$arrClassificados = Array( 1 => "João" , 2 => "Maria" , 3 => "Pedro" , 4 => "Lucia" );

Deve-se evitar Arrays que contenham elementos de diferentes tipos, dando-se preferência a Arrays que se comportem como coleções de elementos. Evitar:
$arrSortido = Array( 1 => "João" , 2 => 123, 3 => new Casa(),

211

4 => new Carro() );

Recomenda-se:
$arrCarros = Array( new Carro( "vermelho" ) , new Carro( "verde" ) ); $arrFrequencias = Array( 94.10 , 97.70 , 100.9 ); $arrNomes = Array( "Joao" , "Maria" , "Jose" , "Pedro" );

10.2.9 Métodos Deve-se especificar o tipo dos parâmetros de entrada, sempre que possível. Evitar:
function exemplo( $objCasaDoUsuario , $arrPessoas ) { // (...) }

Recomenda-se
function exemplo( Casa $objCasaDoUsuario , array $arrPessoas ) { // (...) }

A passagem por referência para elementos de tipos simples não é aconselhável. Já objetos, nativamente, sempre são passados por referência. Evitar:
/** * @param string $strTexto * @return void */ function mudaTexto( &$strTexto ) { $strTexto .= " !!!"; }

212

Recomenda-se:
/** * @param string $strTexto * @return string */ function mudaTexto( $strTexto ) { $strRetorno = $strTexto . " !!!"; return $strRetorno; }

A passagem por referência em tempo de chamada é proibida. Exemplo:
$strTexto = "teste"; mudaTexto( &$strTexto ); // isso é proibido!

10.2.10 Espaçamento e Formatação


Um espaço após o "(", exceto no caso de "()"

<?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20; if( $intCondition < 100 ) { switch( $intCondition ) { case 1: { $intCondition = executaAcao1(); return true; break; } case 2: {

213

$intCondition = executaAcao2(); return false; break; } default: { $intCondition = acaoPadrao(); return null; break; } } } $intCondition = -1; return true; } ?>  Um espaço antes do ")", exceto no caso de <?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20; if( $intCondition < 100 ) { switch( $intCondition { case 1: { $intCondition return true; break; } case 2: { $intCondition return false; break; } default: { $intCondition return null;

"()"

)

= executaAcao1();

= executaAcao2();

= acaoPadrao();

214

break; } } } $intCondition = -1; return true; } ?>

Sem espaço após comandos ( if , foreach, while , etc. )
<?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20; if( $intCondition < 100 ) { switch( $intCondition { case 1: { $intCondition return true; break; } case 2: { $intCondition return false; break; } default: { $intCondition return null; break; } } } $intCondition = -1; return true; }

)

= executaAcao1();

= executaAcao2();

= acaoPadrao();

215

?>  Cases tabulados dentro do switch e com declaração <?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20; if( $intCondition < 100 ) { switch( $intCondition { case 1: { $intCondition return true; break; } case 2: { $intCondition return false; break; } default: { $intCondition return null; break; } } } $intCondition = -1; return true; } ?>  Quebra de linha após declaração <?php /** * * @param integer $intCondition

de bloco

)

= executaAcao1();

= executaAcao2();

= acaoPadrao();

e após fechamento de bloco

216

* @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20; if( $intCondition < 100 ) { switch( $intCondition { case 1: { $intCondition return true; break; } case 2: { $intCondition return false; break; } default: { $intCondition return null; break; } } } $intCondition = -1; return true; } ?>  Operador de referencia "&" colado nas variáveis <?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20;

)

= executaAcao1();

= executaAcao2();

= acaoPadrao();

217

if( $intCondition < 100 ) { switch( $intCondition { case 1: { $intCondition return true; break; } case 2: { $intCondition return false; break; } default: { $intCondition return null; break; } } } $intCondition = -1; return true; } ?>

)

= executaAcao1();

= executaAcao2();

= acaoPadrao();

 Comentário de uma linha espaçado do conteúdo <?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20; if( $intCondition < 100 ) { switch( $intCondition ) { case 1: { $intCondition = executaAcao1();

218

return true; break; } case 2: { $intCondition = executaAcao2(); return false; break; } default: { $intCondition = acaoPadrao(); return null; break; } } } $intCondition = -1; return true; } ?>  Sempre com Tags PHP longas e fechadas no <?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20; if( $intCondition < 100 ) { switch( $intCondition ) { case 1: { $intCondition = executaAcao1(); return true; break; } case 2: { $intCondition = executaAcao2(); return false; break;

final do arquivo

219

} default: { $intCondition = acaoPadrao(); return null; break; } } } $intCondition = -1; return true; } ?>  Os comandos true, false e null sempre em <?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20; if( $intCondition < 100 ) { switch( $intCondition { case 1: { $intCondition return true; break; } case 2: { $intCondition return false; break; } default: { $intCondition return null; break; } }

minúsculo

)

= executaAcao1();

= executaAcao2();

= acaoPadrao();

220

} $intCondition = -1; return true; } ?>  Alinhando os comandos de atribuições seguidos <?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20; if( $intCondition < 100 ) { switch( $intCondition { case 1: { $intCondition return true; break; } case 2: { $intCondition return false; break; } default: { $intCondition return null; break; } } } $intCondition = -1; return true; } ?> 

)

= executaAcao1();

= executaAcao2();

= acaoPadrao();

Tabulação de documentação de tags no estilo Pear

221

<?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) { // exemplo de comentário de uma linha $strMessage = "exemplo de string"; $strNome = "outro exemplo"; $intIdade = 20; if( $intCondition < 100 ) { switch( $intCondition { case 1: { $intCondition return true; break; } case 2: { $intCondition return false; break; } default: { $intCondition return null; break; } } } $intCondition = -1; return true; } ?>  Tags das anotações no estilo doxygen86 <?php /** * Exemplo de Comentario Descritivo de Bloco * @param integer $intCondition * @return boolean */ function example( &$intCondition ) {

)

= executaAcao1();

= executaAcao2();

= acaoPadrao();

222

// exemplo de $strMessage = $strNome = $intIdade =

comentário de uma linha "exemplo de string"; "outro exemplo"; 20;

if( $intCondition < 100 ) { switch( $intCondition { case 1: { $intCondition return true; break; } case 2: { $intCondition return false; break; } default: { $intCondition return null; break; } } } $intCondition = -1; return true; } ?>

)

= executaAcao1();

= executaAcao2();

= acaoPadrao();

10.2.11 Estruturas Algumas estruturas necessitam de um cuidado especial para evitar comportamentos indesejados. Dentre elas:


Foreach
o

Foreach de objetos ( recomendado )

foreach( $arrPessoas as $objPessoa ) { /** * @var $objPessoa PessoaEntity */

223

$objPessoa->setIdade( $objPessoa->getIdade() + 1 ); } o

Foreach de tipos simples sem alteração de valor ( recomendado )

foreach( $arrNomes as $strNome ) { print $strNome . " <br/>\n"; } o

Foreach de tipos simples com alteração de valor pela referencia. ( evitar )

foreach( $arrNomes as &$strNome ) { $strNome = strtoupper( $strNome ); } o

Foreach de tipos simples com alteração de valor pela chave ( recomendado )

foreach( $arrNomes as $intChave => $strNome ) { $arrNomes[ $intChave ] = strtoupper( $strNome ); } 

Switch
o

Para comparações de valor de uma mesma variável, recomenda-se o uso do switch em relação ao if / elseif.

o

Todos os cases do switch devem ter um break no final. O default deve ter um break no final também. Todos os switchs devem ter um caso default, mesmo que seja apenas para subir uma exceção.

o

o

o

Todos os cases do switch devem ser cercados por chaves. Todo switch deve ser cercado por chaves.

o

224

o

Pode-se colocar cases aninhados para um mesmo bloco entre chaves. Todo break deve ter um ";" no final. Exemplo:

o

switch( $objPessoa->getPerfil() ): { case "público": case "reprovado": { print "permissão negada"; break; } case "pendente": { print "permissão pendente"; break; } case "aprovado": { print "aprovado"; break; } default: { throw new ContextoException( "perfil inválido" ); } }

225

10.2.12 PHPUnit Para a criação de TDD no PHP, é recomendado o uso do PHPUnit . O PHPUnit se integra
87 88

bem com a maioria das IDEs para desenvolvimento PHP tais como Eclipse, NetBeans, ZendStudio, etc., além de ser uma ferramenta facilmente utilizável por linha de comando. Além de funcionar com classes de testes, tais como o JUnit, o PHPUnit permite executar testes que estejam descritos nas anotações dos métodos, classes e funções PHP. Assim as anotações de testes auxiliam tanto o desenvolvimento guiado por testes quanto a futura compreensão do código.
<?php /** * Arquivo de Exemplo de uso do PHPUnit em anotações */ /** * Classe a ser testada */ class Calculadora { /** * Soma o operando da direita com o operando da esquerda * * @assert( 1 , 1 ) == 2 * @assert( 5 , 0 ) == 5 * @assert( 0 , 5 ) == 5 * @assert( 5 , -5 ) == 0 * @assert( -5 , -5 ) == -10 * @assert( 0 , 0 ) == 0 * * @param double $dblOperandoDireita * @param double $dblOperandoEsquerda * @return double */ public function soma( $dblOperandoDireita , $dblOperandoEsquerda ) { return (double)$dblOperandoDireita + (double)$dblOperandoEsquerda; } /** * Divide o dividendo pelo * * @assert( 10 , 2 ) == * @assert( 0 , 2 ) == * @assert( 1 , 2 ) ==

divisor 5 0 0.5

226

* @assert( -10 , 2 ) == -5 * @assert( -10 , -2 ) == 5 * @assert( 10 , 0 ) throws CalculadoraException * @assert( -10 , 0 ) throws CalculadoraException * * @throws CalculadoraException * @param double $dblDividendo * @param double $dblDivisor * @return double */ public function divide( $dblDividendo , $dblDivisor ) { $dblDivisor = (double)$dblDivisor; if( $dblDivisor == 0 ) { throw new CalculadoraException( "não se pode dividir por zero" ); } return (double)$dblDividendo / $dblDivisor; } } ?>

Após a execução, relatórios podem ser obtidos com o sucesso e fracasso de cada teste, além do relatório de cobertura de código dos testes executados. Com os resultados obtidos a partir da execução do PHPUnit, existem ferramentas, como o PHPUnderControl , que geram
89

relatórios gerenciais para acompanhamento da qualidade dos testes e do código de um sistema.

227

228

10.3 Recomendações para desenvolvimento em Javascript
O Javascript tem sido intensamente utilizado para atender a demanda de maior interatividade em sistemas Web. Deste modo a complexidade dos módulos desenvolvidos em Javascript tem aumentado continuamente sendo necessários à aplicação das boas práticas e dos

229

cuidados recomendados neste documento. Dentre essas recomendações, a de se procurar componentes maduros e bem documentados e conhecidos antes de se criar um novo elemento merece um destaque especial. Assim, é importante saber quais são as soluções maduras e disponíveis no mercado antes de começar a se desenvolver.

Em Javascript é muito comum se encontrar duas soluções diferentes que tem condição de resolver um mesmo problema. Devido a característica de ser executado no lado do cliente, se carregar várias soluções apresenta alguns problemas extras, além de todos os já descritos no item sobre overdesigner, tornando a carga mais pesada, a compatibilidade mais difícil, a execução mais lenta e as atualizações mais arriscadas. Deste modo, é importante saber e conhecer os frameworks Javascript que já são utilizados no INEP e buscar priorizá-los em relação aos demais. Dentre os frameworks mais utilizados, tem-se:
 

Framework Prototype JQuery
91

90

Devido ao Framework Prototype ser um framework mais simples e leve, deve-se priorizar o seu uso em relação ao JQuery. O desenvolvimento em Javascript, deve seguir as recomendações cabíveis das boas práticas para PHP. A utilização de orientação objeto é uma prática recomendada sendo feito conforme o padrão do framework utilizado. Deve-se evitar carregar todas as classes do framework, utilizando uma carga inteligente e sob demanda, se possível. Existem bibliotecas mais leves que apenas disponibilizam uma coleção de funções consideradas úteis para o bom desenvolvimento. Utilizar as funções destas bibliotecas costuma acelerar o

230

desenvolvimento, além de já tratar comportamentos específicos das funções nativas em determinados navegadores ou versões. Dentre essas bibliotecas de funções recomenda-se:
 

PHP.JS

92

Framework Prototype

10.4 Recomendações para desenvolvimento em Cascate Style Sheet
10.4.1 Gerar páginas CSS bem formuladas As páginas HTML devem ser desenvolvidas com foco no conteúdo deixando a administração do estilo por parte do Cascade Style Sheet - CSS. O CSS deve ficar em arquivos separados
93

do HTML. Deve-se procurar utilizar os estilos já característicos do INEP e disponível na pasta pública, caso isso não seja possível, deve-se sempre verificar a viabilidade de se atualizar o estilo padrão do INEP para as novas necessidades. Os elementos de estilo devem sempre ser elementos padrões W3C
94

Existem ferramentas automáticas de validação de páginas CSS que serão utilizadas durante o período de testes e verificação de qualidade dos softwares. Recomenda-se utilizar as mesmas ferramentas durante o período de desenvolvimento, resolvendo assim os erros antes da entrega. Essas ferramentas são:
  

W3C CSS Validation Service Firefox W3C CSS validator CodeBurner for Firebug
96 97

95

10.4.2 Não utilizar Hacks de Estilo Hacks de Estilo CSS são comandos com erros estratégicos de grafia para que sejam interpretados por alguns navegadores como comandos válidos e ignorados por outros. Este artifício costuma ser utilizado para compensar um comportamento diferenciado de algum

231

navegador, normalmente causada por uma falha de renderização deste navegador ou pelo não cumprimento das normas da W3C. O problema desta estratégia é que ela torna o estilo CSS inválido segundo os padrões da W3C, não sendo assim uma prática aceitável dentro do desenvolvimento no INEP. Então, a solução recomendada para fazer as adaptações necessárias em um determinado navegador é fazer uma carga de estilo específico a este. Em páginas dinâmicas, isto pode ser feito com a inclusão de chamadas de estilos específicos no conteúdo do HTML, se consultando o nome do navegador e sua versão que são informados no cabeçalho da requisição. Em páginas estáticas pode-se utilizar os comentários condicionais do HTML. Exemplo:
<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg-flat.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="pt-BR" lang="pt-BR"> <head> <title>Como Fazer Controle de Estilo Sem Hacks CSS</title> </head> <body> Elementos Comum a todos os Navegadores Antes <br/> <!--[if IE ]> Internet Explorer <br/> <![endif]--> <!--[if IE 8 ]> Internet Explorer 8 <br/> <![endif]--> <!--[if lt IE 8 ]> Internet Explorer anterior ao 8 <br/> <![endif]--> <!--[if gt IE 5 ]> Internet Explorer posterior ao 5 <br/> <![endif]--> <!--[if !IE ]><![IGNORE[--><![IGNORE[]]> Navegador diferente do Internet Explorer <br/> <!--<![endif]--> Elemento Comum a todos os Navegadores Depois <br/> </body> </html>

232

10.5 Recomendações para desenvolvimento em HTML
As páginas HTML desenvolvidas para os projetos do INEP devem ser acessíveis aos mais diversos tipos de navegadores, conforme os Requisitos não Funcionais e Compatibilidade com Navegadores, descrito neste documento. Além disto estas devem estar em conformidade com as regras W3C
98 99

de páginas XHTML tal qual o exemplo abaixo:
100

<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="pt-BR" lang="pt-BR"> <head> <title> Exemplo de XHTML </title> </head> <body> <span> Exemplo de p&aacute;gina XHTML </span> </body> </html>

Além disso, é necessário que as páginas Web, geradas para projetos governamentais sejam acessíveis a usuários com as mais diversas desabilidades. Assim sendo, é necessário que a página XHTML gerada esteja em conformidade com as normas de acessibilidade. Em sistemas com páginas com muita interatividade, comunicação assíncrona, atualizações parciais de tela, etc. é importante disponibilizar uma versão mais simples da mesma funcionalidade, tornando possível o acesso aquela funcionalidade do sistema por parte de usuários que necessitam de leitores de texto ou que o acesso a Internet é feito através de uma conexão de baixa capacidade. Os leitores de páginas HTML para deficientes visuais, apesar dos bons resultados com páginas HTML bem formuladas, apresentam dificuldades com páginas com conteúdo rico. A página rica é muito útil para otimizar o acesso a informação e enriquecer a experiência de navegação do usuário final, quando este não necessita de leitores, nem dispõe de

233

desabilidades nesta área, além de ter disponível um acesso a Internet com uma banda de comunicação adequada para tal comunicação rica. Para tornar o sistema acessível e o mais adequada possível a todos os usuários, em seus mais diversos perfis, é essencial disponibilizar uma versão mais simples das páginas do sistema, que possibilitem o acesso aos recursos disponíveis, para todos aqueles que a página rica é inadequada. Esta e demais orientações de acessibilidade, podem ser encontradas no site da UAAG Brasil .
102 101

- User Agent Accessibility Guidelines e no Acessibilidade

Essas dentre outras exigências vem buscar atender as Recomendações de Acessibilidade para a Construção e Adaptação de Conteúdos do Governo Brasileiro na Internet , E-MAG .
103

Dentre essas recomendações as de nível 1 ­ de maior prioridade ­ e de nível 2 ­ de garantia de acessibilidade - devem ser sempre atendidas. As recomendações de nível 3, sempre que possível, devem também serem atendidas. Para aferir a qualidade nas páginas geradas, é recomendado utilizar ferramentas de validação de XHTML conforme abaixo:
      

W3C Markup Validation Service da Silva

104

Web Acessibility Evaluation Tool
106

105

Firefox Web Developer Firefox Html Validator Total Validator Ocawa
110 109

107

108

NOTAS:
1 http://www.governoeletronico.gov.br/anexos/egti-2008 2 http://www.servidor.gov.br/noticias/noticias08/arq_down/080519_IN_4.pdf

234

3 http://en.wikipedia.org/wiki/GRASP_(Object_Oriented_Design) 4 http://c2.com/cgi/wiki?GangOfFour 5 http://pt.wikipedia.org/wiki/Service-oriented_architecture 6 http://martinfowler.com/eaaCatalog/serviceLayer.html 7 http://pt.wikipedia.org/wiki/Diagrama_de_componentes 8 http://en.wikipedia.org/wiki/Business_Process_Modeling_Notation 9 http://pt.wikipedia.org/wiki/Diagrama_de_instalação 10 http://en.wikipedia.org/wiki/Test-driven_development 11 http://www.ibm.com/developerworks/java/library/j-eaed2/ 12 http://www.oxfordcc.co.uk/newsletters/003/softwaredevelopmentpractices.html 13 http://pt.wikipedia.org/wiki/Log_de_dados 14 http://en.wikipedia.org/wiki/Model-view-controller 15 http://msdn.microsoft.com/en-us/magazine/dd252940.aspx 16 http://betterexplained.com/articles/intermediate-rails-understanding-models-views-and-controllers/ 17 http://en.wikipedia.org/wiki/Data_access_object 18 http://en.wikipedia.org/wiki/Business_object_(computer_science) 19 http://en.wikipedia.org/wiki/Model-view-presenter 20 http://javafree.uol.com.br/artigo/871446/Apresentando-ModelViewPresenter-o-MVC-focado-na-visualizacao.html 21 ftp://www6.software.ibm.com/software/developer/library/mvp.pdf 22 http://msdn.microsoft.com/en-us/magazine/dd252940.aspx 23 http://msdn.microsoft.com/en-us/library/ee413740.aspx 24 http://pt.wikipedia.org/wiki/Padrões_de_projeto_de_software 25 http://en.wikipedia.org/wiki/Design_pattern_(computer_science)

235

26 http://www.cmcrossroads.com/bradapp/docs/patterns-intro.html 27 http://www.tonymarston.net/php-mysql/design-patterns.html 28 http://www.uml.org.cn/c%2B%2B/pdf/DesignPatterns.pdf 29 http://c2.com/cgi/wiki?GangOfFour 30 http://my.safaribooksonline.com/0131489062 31 http://en.wikipedia.org/wiki/GRASP_(Object_Oriented_Design) 32 http://www.javaworld.com/javaworld/jw-08-2003/jw-0801-toolbox.html 33 http://blog.cplusplus-soup.com/2006/12/revisiting-inheritance.html 34 http://www.jroller.com/sebastianKuebeck/entry/never_follow_rules_blindly 35 http://en.wikipedia.org/wiki/Program_optimization 36 http://www.itarchitect.co.uk/articles/display.asp?id=377 37 http://en.wikipedia.org/wiki/Disaster_recovery 38 http://www.softwarepublico.gov.br/ 39 http://www.governoeletronico.gov.br/anexos/instrucao-normativa-no-04 40 http://www.governoeletronico.gov.br/anexos/egti-2008 41 http://www.softwarepublico.gov.br/register/user-new 42 http://creativecommons.org/licenses/GPL/2.0/ 43 http://java.sun.com/j2se/javadoc/writingdoccomments/ 44 http://www.magnux.org/doc/GPL-pt_BR.txt 45 http://www.opensource.org/licenses/gpl-2.0.php 46 http://agilwiki.inep.gov.br/ 47 http://pear.php.net/manual/en/package.php.php-codesniffer.php 48 http://pear.php.net/package/PHP_Beautifier

236

49 http://phpstylist.sourceforge.net/ 50 http://www.waterproof.fr/products/phpCodeBeautifier/ 51 http://astyle.sourceforge.net/ 52 http://www.gnu.org/software/indent/ 53 http://uncrustify.sourceforge.net/ 54 http://universalindent.sourceforge.net/ 55 http://en.wikipedia.org/wiki/SQL_injection 56 http://www.microsoft.com/windows/Internet-explorer/default.aspx 57 http://www.mozilla.com/pt-BR/firefox/ 58 http://www.apple.com/safari/ 59 http://www.opera.com/ 60 http://www.google.com.br/chrome 61 http://en.wikipedia.org/wiki/Stress_testing_(software) 62 http://en.wikipedia.org/wiki/Test_data 63 http://www.generatedata.com/ 64 http://en.wikipedia.org/wiki/Botnet 65 http://en.wikipedia.org/wiki/Internet_bot 66 http://en.wikipedia.org/wiki/Macro_(computer_science) 67 https://addons.mozilla.org/pt-BR/firefox/addon/3863 68 http://jakarta.apache.org/jmeter/ 69 http://java.sun.com/docs/codeconv/ 70 http://seamframework.org 71 http://pt.wikipedia.org/wiki/JUnit

237

72 http://junit.org/ 73 http://junit.wikidot.com/ 74 http://java.sun.com/products/ejb/ 75 http://www.jboss.org/drools/ 76 http://en.wikipedia.org/wiki/Business_rule_management_system 77 http://jasperforge.org/projects/jasperreports 78 http://java.sun.com/javaee/technologies/persistence.jsp 79 http://php.net/manual/en/language.oop5.autoload.php 80 http://br.php.net/set_error_handler 81 http://www.php.net/manual/en/class.errorexception.php 82 http://framework.zend.com/ 83 http://www.php.net/manual/pt_BR/book.pdo.php 84 http://www.smarty.net/manual/pt_BR/ 85 http://pt.wikipedia.org/wiki/CamelCase 86 www.doxygen.org/ 87 http://en.wikipedia.org/wiki/Test-driven_development 88 http://www.phpunit.de/ 89 http://phpundercontrol.org 90 http://www.prototypejs.org/ 91 http://jquery.com/ 92 http://phpjs.org/ 93 http://pt.wikipedia.org/wiki/Cascading_Style_Sheets 94 http://www.w3.org/Style/CSS/

238

95 http://jigsaw.w3.org/css-validator/validator.html.pt-BR 96 https://addons.mozilla.org/pt-BR/firefox/addon/2245 97 https://addons.mozilla.org/pt-BR/firefox/addon/10273 98 http://www.w3.org/TR/xhtml1/ 99 http://www.w3.org/TR/xhtml11/ 100 http://pt.wikipedia.org/wiki/XHTML 101 http://www.w3.org/TR/WAI-USERAGENT/ 102 http://www.acessobrasil.org.br/ 103 http://www.governoeletronico.gov.br/acoes-e-projetos/e-MAG 104 http://validator.w3.org/ 105 http://wave.webaim.org/ 106 http://www.dasilva.org.br/ 107 https://addons.mozilla.org/pt-BR/firefox/addon/60 108 https://addons.mozilla.org/pt-BR/firefox/addon/249 109 http://www.totalvalidator.com/ 110 http://www.ocawa.com/pt/Pagina-inicial.htm

239

Encarte H ­ Guia de Arquitetura (para Java e PHP)

240

1. Introdução 1.1. Finalidade
Este documento pretende apresentar uma visão geral das arquiteturas de sistemas Java e PHP utilizadas no Inep. Ele deve ser usado como uma referência para construção de novos sistemas e fonte de consultas em relação ao padrão de arquitetura utilizada no Inep. O mesmo também deve servir como insumo para a elaboração do documento de arquitetura do projeto, artefato descrito na MGDS (Metodologia de Gestão e Desenvolvimento de Sistemas).

1.2. Escopo
O documento aplica-se aos sistemas do Inep (desenvolvidos internamente ou externamente), em que as linguagens de programação sejam Java e PHP.

1.3. Evolução deste guia
Este guia foi construído baseado nas experiências dos projetos anteriores do Inep e assim sendo pode e deve ser continuamente adequado / adaptado conforme as lições aprendidas e as evoluções tecnológicas que surgirem no mercado.

2. Representação da Arquitetura
A arquitetura de um sistema é o alicerce onde se funda o software. A partir dos modelos, camadas, abstrações e frameworks apresentados e sugeridos, o projetista e o desenvolvedor do sistema têm uma visão geral, técnica e conceitual da aplicação que será construída. A arquitetura define, entre outras coisas, onde implementar regras de negócios, onde e como persistir informações e as tecnologias que devem ser utilizadas. Cabe aos projetistas e desenvolvedores adaptar os requisitos funcionais do sistema às definições da arquitetura. Não faremos referência a projetos específicos, já que seu objetivo é definir uma arquitetura geral de desenvolvimento Java e PHP. Não é raro ainda, que alguns projetos venham a necessitar de mais camadas do que as aqui descritas, mas essa decisão deve ser feita juntamente com a equipe técnica do Inep, preferencialmente no início do projeto. O Guia de Arquitetura será divido em duas partes, sendo elas:  Parte I ­ Arquitetura Java Web;

241



Parte II ­ Arquitetura PHP.

3.

Metas e Restrições da Arquitetura
A arquitetura aqui definida, prima pela simplicidade e produtividade, fazendo uso de tecnologias que permitam a criação de softwares robustos, confiáveis e de fácil manutenção. Apesar das camadas descritas no documento, serem possíveis de serem implementadas em vários frameworks, o framework recomendado para o desenvolvimento das aplicações PHP é o Zend Framework (versão homologada pelo Inep), tendo em vista a maturidade desse framework no meio empresarial. Para aplicações Java acessadas via browser (aplicações WEB) deve ser utilizado o MECSeam, framework do Inep para aplicações WEB, baseado no Framework Seam (versão homologada pelo Inep). Ainda não possuímos um Framework para desenvolvimento de aplicações Desktop, caso exista alguma demanda para este tipo de aplicação, entre em contato com a equipe técnica do Inep. Por padrão, o Inep utiliza a versão 1.6 do Java (JEE). No desenvolvimento de WebServices, o padrão e-Ping deve ser respeitado, segue link de referência deste padrão: http://www.governoeletronico.gov.br/acoes-e-projetos/e-ping-padroes-deinteroperabilidade.

242

Parte I ­ Arquitetura Java Web

243

1. Visões 1.1. Visão Lógica

Os sistemas WEB estão logicamente divididos em 4 camadas com responsabilidades distintas, sendo elas: Apresentação, Controle, Negócios e Persistência. Os sistemas utilizam em sua implementação o framework MECSeam, extensão do framework Seam (http://seamframework.org/). Os usuários, através de algum navegador Internet (browser), acessam as páginas HTML geradas pelo servidor ao processar os arquivos XHTML da camada de apresentação, e executam as operações que desejam. As operações são submetidas às Actions, que reúnem as informações necessárias e as envia aos Managers. Os Managers realizam a operação solicitada acessando a camada de persistência para consulta ou persistência de dados. O JPA, através do provider selecionado (Hibernate, Toplink, etc.), usando as entities mapeadas, acessa o banco de dados e executa as operações solicitadas. Nas consultas, entities ou listas de entities são retornadas e tratadas pelas camadas intermediárias, que executam regras de negócios e preparam novas páginas que são enviadas aos navegadores.

244

Camada de Apresentação
A camada de apresentação representa o front-end da arquitetura. Seu núcleo é constituído por arquivos XHTML, que contêm componentes MECSeam, utilizando as tecnologias: JSF, Facelets, RichFaces, e Seam. Tecnologias da camada de apresentação do MECSeam:  JSF - Java Server Faces
   http://java.sun.com/javaee/javaserverfaces/ Facelets https://facelets.dev.java.net/ RichFaces http://www.jboss.org/jbossrichfaces/ Seam http://docs.jboss.com/seam/2.0.2.SP1/reference/en-US/html_single/

245

Camada de Controle
A camada de controle trabalha como ponto focal para tratamento de requisições vindas da camada de apresentação e provê acesso à camada de negócios. É implementada por meio de componentes Seam Javabeans denominados Actions. Tecnologias da camada de controle do MECSeam:  JSF - Java Server Faces


http://java.sun.com/javaee/javaserverfaces/
Seam http://docs.jboss.com/seam/2.0.2.SP1/reference/en-US/html_single/

Camada de Negócio
Na camada de negócio são implementadas as regras de negócio do sistema. É composta por componentes Seam Javabeans denominados Managers. Tecnologias da camada de negócio do MECSeam:
 Seam http://docs.jboss.com/seam/2.0.2.SP1/reference/en-US/html_single/

Camada de Persistência
Na camada de persistência ocorre a troca de informações entre a aplicação e o repositório de dados. É composta por entity beans anotados que representam tabelas do banco de dados. Tecnologias da camada de persistência do MECSeam:  Java Persistence API ­ JPA http://java.sun.com/javaee/technologies/persistence.jsp
 Seam http://docs.jboss.com/seam/2.0.2.SP1/reference/en-US/html_single/

1.2. Visão de Implantação
Os sistemas são executados em servidores de aplicações JEE (Java Platform Enterprise

246

Edition) e acessam bases de dados corporativas.

2.

Detalhamento da Arquitetura 2.1. Servidor de Aplicações JEE

Por padrão, o Inep utiliza o JBoss Application Server como servidor de aplicações JEE, versões 4.2_CP01 e a 4.3_CP06. Novas versões poderão ser utilizadas desde que previamente homologadas pelo Inep.

2.2.

IDE de Desenvolvimento

Por padrão, o Inep utiliza o Eclipse com o plugin Jboss Tools (http://www.jboss.org/tools/), o qual deverá ser utilizado a versão previamente homologada pelo INEP.

2.3.

Criação inicial do projeto

Para a criação de um novo projeto Seam deve ser utilizado o wizard do JBoss Tools.

2.4.

Empacotamento de Aplicações

As aplicações devem ser empacotadas no formato WAR (Web Archive). Se a aplicação fizer uso de EJBs empacotados como JAR (Java Archive) e outras tecnologias que necessitem de empacotamento diferente de WAR, os pacotes necessários devem ser

247

empacotados em um EAR (Enterprise Archive). O Seam provê mecanismos para criação de agendamentos de tarefas (tasks schedulers), porém, caso schedulers sejam necessários, deve-se usar o mecanismo fornecido pelo Jboss Server que permite controle pelo deployer (parada, início, mudança de horário, etc). Segue link de referência:
http://www.redhat.com/docs/manuals/jboss/jboss-eap-4.2/doc/Server_Configuration_Guide/Scheduling_Tasksorg.jboss.varia.scheduler.Scheduler_.html

2.5.

Publicação/Configuração das Aplicações

O Inep utiliza o Apache Continuum (http://continuum.apache.org/) como ferramenta de integração contínua, onde o empacotamento e publicação das aplicações no ambiente de desenvolvimento são automatizados por esta ferramenta. Os scripts devem ser criados utilizando o Apache Maven (http://maven.apache.org/) ou o Apache Ant (http://ant.apache.org/). Preferencialmente deve-se utilizar o Maven. Para a configuração das aplicações, não esquecer de alterar os parâmetros dos seguintes arquivos: web.xml: Parâmetro
facelets.REFRESH_PERIOD

Valor -1

Observação Indica que o Facelets não deve tentar recarregar páginas modificadas. A não utilização deste parâmetro gera um erro intermitente na aplicação quando a data do sistema está atrasada em relação à data do arquivo EAR publicado. Comente este parâmetro em ambiente de desenvolvimento para hot deploy das páginas.

facelets.DEVELOPMENT

false

248

components.xml: Elemento core:init Atributo/Valor debug="false"

2.6.

Estrutura de Diretórios Pacotes de Código Fonte Java

2.6.1.

A palavra "sistema", na lista abaixo, deve ser substituída pelo nome do sistema em questão. Lembrando que nomes de pacotes, de acordo com a Java Code Conventions, devem possuir apenas caracteres minúsculos. (http://java.sun.com/docs/codeconv/html/CodeConventions.doc8.html#367). src  br.gov.inep.sistema.action br.gov.inep.sistema.entity br.gov.inep.sistema.manager

2.6.2.

Arquivos da WEB

O diretório WebContent é a base para a criação do arquivo WAR. Dentro deste diretório é obrigatória a presença do diretório WEB-INF. Veja exemplo abaixo desta estrutura de diretórios.

249

250

2.6.3.

Visão dos Componentes Estruturais

2.6.3.1.

Detalhamento da Camada de Apresentação

Serão utilizados componentes JSF/Facelets/RichFaces/Seam e componentes customizados utilizando Facelets (MECSeam). A customização de componentes tem por objetivo substituir os componentes específicos das bibliotecas supracitadas de forma a abstrair os componentes utilizados e padronizar a utilização dos mesmos. A referência básica para a criação desses componentes pode ser encontrada no endereço: http://www.ibm.com/developerworks/java/library/j-facelets/. As entidades (Entities), que compõem a camada de persistência da aplicação, serão usadas como DTOs (Data Transfer Object) quando necessário. Assim, serão utilizados diretamente na camada de apresentação para capturar entrada de dados do usuário. Caso necessite de algum atributo que não faça parte de sua entidade, como por exemplo: intervalos de datas e telas de pesquisa, deverão ser criados atributos transientes (@Transient) ou como um atributo de sua classe Action. O Seam inovou o compartilhamento de objetos através do contexto de conversação, onde os objetos podem ser compartilhados entre as camadas com as anotações @In e @Out.

251

Exemplo:
@Out private Usuario usuario = new Usuario();

@In private FacesMessages facesMessages;

A camada de apresentação irá comunicar-se (invocar ações) com a camada de controle diretamente com componentes da camada de controle (Actions). Exemplo: <h:commandButton value="Salvar" action="#{minhaAction.meuMetodo()}"/> Se o método tiver que submeter um objeto que está presente na camada de apresentação, ele pode ser diretamente referenciado. Exemplo: <h:commandButton value="Salvar" action="#{minhaAction.meuMetodo(Objeto)}"/> O nome dos formulários (páginas) da camada de apresentação deve seguir a convenção de nomes da Sun para JSP. (http://java.sun.com/developer/technicalArticles/javaserverpages/code_convention/). Caso sua aplicação necessite de internacionalização (i18n) para a camada de apresentação esta informação deverá fazer uso de um arquivo específico para cada idioma. (http://docs.jboss.com/seam/2.0.2.SP1/reference/en-US/html_single/#d0e9126). Arquivos com conteúdo estático tais como: Javascript, CSS e imagens deverão ficar no servidor de conteúdo estático corporativo (http://public.inep.gov.br/), seguindo a organização de diretórios definida para o servidor. Exemplo: colocar os arquivos de imagens no diretório imagens.

2.6.3.2.

Detalhamento da Camada de Controle

252

A camada de controle deve ser implementada com componentes Seam JavaBeans e deve seguir a seguinte nomenclatura: 1. Para a classe: NomeDaClasseAction (ex: PesquisaUsuarioAction) ; 2. Para o nome do componente Seam: deve ser utilizado o mesmo nome da classe com a primeira letra em minúsculo (ex: pesquisaUsuarioAction); A escolha do escopo deverá ser adequada ao propósito do componente. Vale ressaltar que a escolha do escopo influencia de forma direta o consumo de memória e desempenho da aplicação. De maneira geral:  Se o componente controlador for servir apenas a uma requisição, deve-se utilizar o escopo Event;   Se o componente controlador for servir a várias requisições de uma mesma página, deve-se utilizar o escopo Page; Se o componente controlador for controlar múltiplas páginas, deve-se utilizar o escopo de conversation. (Observação: Sempre que for utilizado o escopo de conversation lembrar de finalizar a conversation quando a mesma não for mais necessária); Se o componente for controlar múltiplas páginas para múltiplas conversations, deve-se utilizar o escopo Session; Se o componente for usado por todos os usuários do sistema, sem alterações, deve-se utilizar o escopo Application.

 

Os componentes injetados (@In) nas Actions que serão necessários na camada de negócios devem ser passados por parâmetro. Os componentes de negócio serão disponibilizados nas Actions através da injeção dos Managers. Os Managers serão anotados com a anotação @AutoCreate, sendo assim, basta utilizarmos a anotação @In para injetarmos o componente de negócio no componente controlador (Action). Exemplo de componente controlador (Action) com injeção de componente de negócio:
@Name("minhaAction") public class MinhaAction { @In

253

private ComponenteManager componenteManager; ... }

2.6.3.3.

Detalhamento da Camada de Negócio

As classes/componentes Seam devem seguir a seguinte nomenclatura:  Para a classe: NomeDaClasseManager (Exemplo: EstudanteManager);  Para o nome do componente Seam: deve ser utilizado o mesmo nome da classe com a primeira letra em minúsculo (Exemplo: estudanteManager). Os Managers devem ser criados para entidades fortes, que representam pontos principais da aplicação. Exemplo: AlunoManager. Não se deve utilizar EJBs, a não ser que sejam realmente necessários, ou seja, havendo acesso remoto de outras aplicações ou de clientes desktop. Assim, a camada de negócio deve ser implementada com componentes Seam POJO, que dão maior agilidade no desenvolvimento e facilidade de manutenção. Deve-se utilizar transações gerenciadas pelo Seam, que funcionam da mesma forma para componentes EJB ou POJOs. As Actions podem acessar quantos Managers forem necessários. Assim,

VisualizarAlunoAction poderia recorrer ao AlunoManager para obter informações de alunos, e EscolasManager para obter os dados das escolas. O uso de componentes injetados na camada de negócio deve ser evitado. As Actions devem se comunicar com as Managers através dos métodos de acesso, passando os parâmetros necessários. O componente de negócio deve ser anotado com @AutoCreate para que no momento de sua utilização por componentes da camada de controle, não seja necessária a utilização da opção (create=true) na anotação de injeção @In. Exemplo de classe/componente de negócio:
@AutoCreate @Name("estudanteManager") public class EstudanteManager { public Estudante recuperaPorNome(String nome) {

254

return (Estudante) entityManager.createNamedQuery( "estudante.recuperaPorNome").setParameter("nome", nome) .getSingleResult(); } }

2.6.3.4.

Detalhamento da Camada de Persistência

Na camada de persistência, são utilizados Entity Beans (JPA) (http://java.sun.com/javaee/technologies/persistence.jsp). Sempre que necessário (no caso do banco de dados já existir e o modelo de objetos seguir o modelo de dados relacional) será realizada a engenharia reversa do banco de dados utilizando a ferramenta JBoss Tools (http://www.jboss.org/tools/) e customizados os atributos das classes conforme o padrão de nomenclatura para classes/atributos vigente. Maiores detalhes sobre a utilização do JBoss Tools para a execução da engenharia reversa, podem ser encontrados no endereço: http://docs.jboss.org/tools/2.1.0.GA/en/hibernatetools/html_single/index.html#d0e1037 Todas as entidades do sistema devem estender a classe BaseEntity (MECSeam) e sobrescrever o método getId() conforme descrito no exemplo que segue:
@MappedSuperclass public abstract class BaseEntity implements Serializable {

protected Long id;

public BaseEntity() { }

public void setId(Long id) { this.id = id; }

255

@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; final BaseEntity other = (BaseEntity) obj; if (id == null) { if (other.id != null) return false; } else if (!id.equals(other.id)) return false; return true; }

@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((id == null) ? 0 : id.hashCode()); return result; }

@Override public String toString() { return this.getClass().getName() + "[id=" + id + "]"; } }

O propósito da classe

BaseEntity é prover o atributo id e os métodos equals() e

256

hashcode() para todas as entidades do sistema. Como atualmente a coluna no BD definida como Primary Key (PK) não é definida com o mesmo nome para todas as tabelas do BD, é necessário definir o método getId() para todas as entidades que estendem de BaseEntity:
@Id @GeneratedValue(strategy = GenerationType.AUTO) @Column(name="NOME_DA_PK_NA_TABELA") public Long getId() { return id; }

Exemplo de classe de entidade:
@Entity @Name("aluno") public class Aluno extends BaseEntity {

private static final long serialVersionUID = 1L;

@Id @GeneratedValue(strategy = GenerationType.AUTO) @Column(name="NOME_DA_PK_NA_TABELA") public Long getId() { return id; }

...

}

Após a criação da Entidade, serão definidas regras de validação com a utilização do framework de validação Hibernate Validator (http://validator.hibernate.org/).

257

Além

das

anotações

padrões

do

Hibernate

Validator

(http://www.hibernate.org/hib_docs/validator/reference/en/html_single/#validatordefineconstraints-builtin), serão utilizadas anotações personalizadas (MECSeam) (http://www.hibernate.org/hib_docs/validator/reference/en/html_single/#validatordefineconstraints-own) como por exemplo: @CPF . Quando da criação de Hibernate Validators personalizados cujo valor a ser validado é do tipo String, devemos estender a classe AbstractHibernateStringValidator que já provê controle básico comum a validação de Strings e implementar o método validate (String valorAValidar) . Exemplo:
public abstract class AbstractHibernateStringValidator<A extends Annotation> implements Validator<A> {

public void initialize(A Annotation) { }

public boolean isValid(Object value) { if (isEmpty(value)) { return true; }

if (!(value instanceof String)) { return false; }

return validate(value.toString()); }

private boolean isEmpty(Object value) { if (value == null) { return true; }

258

if (value instanceof String && (value.toString()).trim().length() == 0) { return true; }

return false; }

protected abstract boolean validate(String value); }

Anotação de validação:
@ValidatorClass(CPFValidator.class) @Target( { ElementType.METHOD, ElementType.FIELD }) @Retention(RetentionPolicy.RUNTIME) @Documented public @interface CPF {

String message() default "CPF inválido"; }

Classe de validação:
public class CPFValidator extends AbstractHibernateStringValidator<CPF> {

@Override public boolean validate(String cpf) { return CPFUtils.validaCPF(cpf); } }

Quando a informação a ser validada não for do tipo String, deve-se criar a classe abstrata no padrão da classe AbstractHibernateStringValidator e estendê-la da mesma maneira descrita

259

acima. detalhes sobre o framework Hibernate Validator podem ser obtidos em: http://www.hibernate.org/hib_docs/validator/reference/en/html_single/ Vale lembrar que as anotações definidas nas Entidades podem (e devem) ser utilizadas diretamente na camada de apresentação, maiores detalhes dessa abordagem pode ser vistos em http://docs.jboss.com/seam/2.0.2.SP1/reference/en-US/html_single/#validation
Maiores

260

Parte II ­ Arquitetura PHP

261

1. Visão Lógica 1.1. Visão Cliente Servidor
Os sistemas PHP têm foco exclusivo para sistemas Web. O uso de PHP em aplicações desktop, apesar de existir no PHP-GTK, é recomendado apenas para uso experimental. Os sistemas Web que trabalham em cima do protocolo HTTP funcionam sobre a arquitetura Cliente ­ Servidor.

Os usuários, fazendo uso do navegador ou browser, interagem com o sistema com requisições HTTP que são processadas pelo Servidor. O servidor recebe a requisição do usuário e executa um evento no sistema. Após executar o evento,

262

o sistema monta dinamicamente uma página XHTML baseada na resposta do evento. Esta página é retornada ao usuário como resultado da requisição HTTP. O Navegador, ao processar os arquivos XHTML, acessa também as imagens, as folhas de estilo CSS, os arquivos de eventos client-side Javascript para montar uma tela que possibilita ao usuário novas interações com o sistema. As aplicações Web, ganharam uma nova qualidade de interação utilizando, em conjunto com as comunicações síncronas, comunicações assíncronas. Essas páginas que fazem o uso de comunicação assíncrona, buscando gerar maior interatividade são chamadas de RIA ­ Rich Internet Applications ou Internet Rica.

263

264

Ao se utilizar Javascript para fazer páginas ricas, as interações assincronas devem ser geridas pelo próprio Javascript. Esse método de comunicação é conhecido como Ajax - Asynchronous Javascript And XML. Fazendo uso deste tipo de tecnologia é possível desenvolver aplicações com as vantagens de uma aplicação Web e com qualidade de interação próxima às aplicações desktop.

1.2.

Visão Cliente

1.2.1. Comunicação por páginas XHTMLs
Na comunicação por páginas XHTMLs, as informações disponíveis na máquina do cliente são as páginas XHTMLs, os estilos CSS as imagens e os scripts Javascript. Esses elementos se referenciam entre si de modo a criar uma página Web onde o usuário possa vir a interagir.

A página XHTML deve se concentrar em mostrar a informação. As regras de estilos devem ficar nas folhas de estilo que são referenciadas pela página XHTML. O conteúdo Javascript deve se concentrar nos arquivos Javascript sendo as chamadas feitas no HTML.

A informação na página deve estar organizada de maneira lógica e seqüencial. As folhas de estilo CSS podem auxiliar a mostrar na página apenas a informação relevante, a organizar a informação do XHTML de modo mais agradável e guiar a organização visual do usuário. O layout deve ser flexível a várias resoluções.

265

O Javascript pode auxiliar em tornar o uso da aplicação mais rápido e intuitivo. Algumas interações podem ser previamente validadas pelo Javascript, evitando assim que requisições inconsistentes sejam feitas ao servidor. Como o processamento é local o tempo de resposta para tais requisições é mais rápido para o cliente. Filtros de campos obrigatórios, validação de CPF e CNPJ, confirmação de senha, e-mails inválidos dentre outros filtros similares podem ser feitos em Javascript para melhorar a qualidade de interação e velocidade do sistema. O resultado dessas interações deve, sempre que possível, gerar mensagens amigáveis ao usuário do sistema. As folhas de estilos CSS e as bibliotecas de Javascript podem ser reaproveitadas por várias páginas do sistema economizando banda de rede e acelerando o tempo de carga das páginas pelo cliente, além de facilitar a padronização do estilo e do comportamento dos componentes do sistema.

1.2.2. Comunicação por Elementos XMLs não XHTMLs
Alguns projetos demandam a criação de elementos que não se restringem aos componentes nativos do HTML (tabelas, listas, imagens, etc.). Para viabilizar a criação destes elementos, existem outras linguagens de marcação XML que provém diferentes formas de interação com o usuário. Dentre elas: o SVG para criação de apresentações vetoriais, VRML para criação de apresentações 3D e Flex para criação de apresentações em SWF. O Processamento do XML do Flex para a criação de um SWF deve ser feito no servidor, utilizando-se um interpretador SDK, sendo o SWF apenas enviado para o cliente.

1.2.3. Comunicação por Elementos não XMLs
É possível, e muitas vezes necessária, a criação de elementos não XMLs para atender a demanda de alguns projetos. Algumas aplicações mais recentes utilizam o Canvas em Javascript para criação desses componentes de interação personalizados, mas esse recurso apresenta algumas restrições de

266

compatibilidade em Navegadores Antigos. Para geração de outros tipos de arquivo, podem vir a serem necessárias outras funcionalidades, disponibilizadas com o uso de componentes desenvolvidos em PHP ou por meio de extensões, módulos compilados não nativos que podem ser integrados ao PHP, adicionando novas funcionalidades à linguagem. O uso de extensões tem a vantagem da velocidade de execução, da simplicidade da instalação e da independência de frameworks para funcionar. Em compensação, as extensões demandam uma adaptação do ambiente do servidor o que pode vir a acarretar problemas ao se colocar a aplicação em produção. Algumas extensões não funcionam em servidores Windows, outros exigem que alguma(s) aplicação (ões) seja (m) instalada (s) no servidor, etc. O uso de componentes apresenta a vantagem da flexibilidade, da clareza do funcionamento e da facilidade da manutenção e do desenvolvimento de novas funcionalidades. Em compensação os componentes em PHP costumam ser mais lentos que as extensões e tendem a apresentar uma dependência com algum Framework e com outros componentes em PHP. Algumas extensões foram incorporadas ao PHP em suas versões mais recentes, sendo então o seu uso recomendado em relação ao de componentes similares. Dentre as funcionalidades disponíveis em extensões PHP, vale ressaltar a geração de imagens pelo GD, geração de SWFs pelo Ming, controle de chaves de segurança com OpenSSL além dos plugins de Web Service necessários para o uso de Web Services. O XDebug é uma extensão muito útil para auxiliar ambientes de desenvolvimento mas não deve ser aplicado em ambientes de produção. Existem componentes desenvolvidos em PHP para a criação dos mais diversos formatos de saída. Para criação de PDFs, por exemplo existem o FPDF e o Html2Fpdf, dentre outros. Para criação de documentos Ms. Word, existe o LiveDocx, para criação de Planilhas Ms. Excel, o PHPExcel, etc. Muitos componentes podem ser encontrados em sites especializados em projetos de código aberto, dentre esses vale ressaltar o SourceForge, PhpClasses, Assembla, Zend Framework Components, dentre muitos outros. O uso de códigos de terceiros está sujeito a licença de uso desses códigos. Além disso, a responsabilidade pela qualidade do código utilizado é da empresa contratada, mesmo que não seja ela a criadora do mesmo. Ao utilizar um componente público a empresa contratada deve

267

validar a qualidade do mesmo e assegurar o funcionamento do mesmo no ambiente de produção do projeto. A maioria dos componentes disponibilizados não apresenta nenhuma garantia do fabricante, sendo obrigação da equipe que o utilizar atestar e validar a qualidade do mesmo, assumindo assim os riscos do seu mau funcionamento.

1.3.

Visão Servidor

O servidor recebe as requisições do cliente através de uma mesma página PHP, também conhecida como bootstrap que, conforme os parâmetros da requisição encaminham para a controladora específica. A controladora, fazendo uso das demais camadas necessárias gera o XHTML resultante que é enviado ao cliente para que o navegador monte a página de resultado.

2. Camadas
Nos design orientado a objetos, uma camada é um grupo de classes que tem as mesmas dependencias de módulos, em outras palavras, é um grupo de componentes reutilizáveis que são utilizados em circunstancias similares, com propósitos similares. Camadas costumeiramente se organizam numa arvore hierárquica, baseada nas relações de dependência entre elas. As depedencias mais comuns entre as camadas são herança, composição e agregação, mas outros tipos de dependência também podem ser utilizados. Camadas é um padrão arquitetônico descrito em muitos livros, como por exemplo, Pattern-Oriented Software Architecture. A arquitetura em camadas geralmente encapsula a complexidade técnica de um software de modo independente à lógica de negócio e assim provendo um menor acoplamento entre as funcionalidades de negócio e a infra-estrutura técnica subjacente. Uma arquitetura em camadas contribui para o melhor desenvolvimento de um software, possibilitando o teste e detecção de erros nas camadas adjacentes. Este recurso isola os componentes da arquitetura e os protege contra falhas em outras camadas. Esta prática permite o desenvolvimento de aplicativos de software a serem mais eficazes, divididos em equipes, com cada equipe trabalhando em uma camada diferente simultaneamente.

268

Arquitetura PHP em Camadas

As camadas propostas para a arquitetura PHP são: Apresentação, Controladora, Segurança, Negócio, Entidade, Persistência, Banco de Dados, Visão e Template. Sendo as Camadas de Apresentação e Banco de Dados não são em PHP mas são aqui representadas para facilitar a compreensão das demais.

269

Diagrama de Sequência das Camadas

270

Diagrama de Comunicação das Camadas

271

BPMn de Exemplo de Fluxo entre as Camadas

272

Resumo das Camadas:

· Apresentação Camada que monta as requisições e as envia ao servidor. Pode ser uma submissão de um formulário HTML, ou uma requisição por Ajax, uma requisição HTTP feita por uma Applet Java ou um SWF, etc. Essa camada é executada no cliente e, assim sendo, não executa código PHP. Apesar disto é o resultado do evento na controladora PHP que monta a próxima apresentação para o cliente.
·

Controladora

Camada responsável por converter os parâmetros recebidos pela requisição em entidades do sistema, chamar os objetos de negócio adequados para a execução daquele evento e encaminhar o resultado da execução do evento para a camada de visão, de modo que essa possa montar a tela de resultado adequadamente. Negócio Camada responsável pela lógica de negócio da aplicação. O controle de fluxos, filtros, restrições, condicionais, etc. Os métodos de negócio podem fazer referencias entre si. A camada de negócio pode chamar a camada de persistência quando considerar necessário.
·

Entidade

Camadas das classes responsáveis por representar no mundo OO às representações significativas distintas, sejam ou não objetos físicos. As entidades têm pouca ou nenhuma lógica de programação com atributos acessíveis por "getters" e "setter". São utilizados para trafegar as informações no sistema.
·

Persistência

Camada das classes que criam comandos de Banco de Dados a partir das Entidades. Também é responsável por converter o resultado de uma operação no banco de dados em uma ou mais Entidades.
·

Visão

Camada responsável por guardar as informações vindas da controladora para a montagem da página HTML e em montar a página HTML a partir dessas informações, utilizando o Template selecionado.
·

Template

273

Arquivos próximos de HTMLs com conteúdo dinamico que são utilizados pela Visão na criação das páginas XHTMLs resultantes.
·

Segurança

Camada responsável pelo controle de acesso às funcionalidades do sistema. Cada método da controladora pode informar qual é a permissão que ele requer. A segurança confere se o usuário tem tal permissão.
·

Banco de Dados ou SGDB

Programa externo acessado pela PHP que visa gerenciar o acesso, manipulação e organização dos dados utilizados pela aplicação. Recomenda-se o uso de alguma abstração para intermediar a comunicação entre o PHP e o Banco de Dados.
·

Web Service

Camada de Classes similares a controladoras mas que recebem as requisições de outros sistemas e retornam objetos e não telas.

2.1.

Controladora

274

Controladora é a camada que recebe as informações enviadas pelo sistema externo, converte-as em entidades dos sistemas e as envia para os objetos de negócio apropriados para o serviço desejado. Após isto, fazendo uso do retorno da operação, a controladora deve chamar a visão apropriada, interagindo com a mesma conforme necessário. A Controladora define qual será o Template utilizado pela visão para gerar a Apresentação desejada. A controladora pode também chamar a camada de segurança, para bloquear o acesso de usuário sem autorização.

275

2.2.

Negócio

276

Uma camada de lógica de negócio (BBL) contém a lógica de negócio da aplicação que deve ser acessível e independente às outras camadas, tais como persistência ou apresentação. Ao fazer isso, a lógica da aplicação suporta melhor mudanças ou substituições reduzindo o impacto sobre as demais camadas. Apenas os métodos que se desejem disponíveis para o acesso externo devem ser públicos. Os métodos públicos devem, preferencialmente, receber e retornar Entidades ou Coleções de Entidades. As classes de negócio são classes estáticas que não contém atributos próprios Todos os objetos instanciados são entidades ou variáveis temporárias dos métodos, exclusivas de seu escopo. A camada de Negócio também é chamada de Processos de Negócio ou Atividades de Negócio.

277

2.3.

Entidade

278

Uma entidade é algo que tem uma distinção, uma existência separada. Entidades são utilizadas em desenvolvimento de modelos de sistemas que mostram as comunicações e processos internos durante o processamento. Wikipédia As aqui chamadas de Entidades, são mais próximos de um Objeto de Transferência de Dados (DTO) ou Objeto de Valor (VO) do que de uma Entidade de Negócio (BE). Isto é, as Entidades visam à aplicação de um Padrão de Projeto onde esses objetos são o método pelo qual a informação trafega pelos subsistemas e camadas do software. São freqüentemente utilizados para fazer o mapeamento dos registros de tabelas do Banco de Dados. Algumas vezes, fazendo uso deste mapeamento, disponibilizam algumas operações padrões, fazendo chamadas as camadas de Persistência. Essa aplicação das Entidades é conhecida como Objeto de Acesso a Informação (DAO). As Entidades podem apresentar alguma lógica de negócio que possibilite o Padrão de Projeto de Carga Preguiçosa ­ Lazy Load, a entrada de uma mesma informação por diferentes formatos e a saída de uma mesma informação por diferentes formatos além dos métodos padrões de chamada a persistência, se existirem.

2.4.

Persistência

279

A persistência de dados, na computação, refere-se ao armazenamento não-volátil de dados. (...) Na Orientação a Objetos, chama-se de "objetos persistentes" aqueles que permanecem existindo mesmo após o término da execução do programa. Associados à persistência estão o gerenciamento dinâmico da memória e o armazenamento de objetos em bases de dados. Wikipedia A Persistência deve, a partir das Entidades, executarem os comandos necessários para que estas venham a ser persistentes. Isto é, gerar e executar os comandos SQL no Banco de Dados, para inserir, alterar e recuperar (CRUD) as Entidades. Os comandos SQL criados devem utilizar abstração de Banco de Dados, onde a PDO é a atualmente recomendada, controle transacional, com o uso de Prepared Statement para evitar SQL Injection. As Classes desta camada devem ser estáticas e seus métodos, sempre que possível, devem receber Entidades como parametro e retornar Entidades como resultado.

2.5.

Visão

280

Na arquitetura MVC a visão desenha o Modelo num formato apropriado para a interação com o usuário, tipicamente num formato apropriado para alguma interface com usuário. Várias visões podem existir de um mesmo modelo para atender a propósitos diferentes. Na arquitetura PHP proposta não existe a figura do Modelo pois este foi divido em Negócio e Entidade. O elemento necessário para a criação das novas interfaces com usuários, tradicionalmente páginas, em sistemas PHP, são as entidades que são então enviadas para a visão para que, a partir das informações destas entidades, venha a desenhar a página corretamente. A camada de Visão pode conter alguma complexidade que se faça necessária para a criação dos elementos de tela tais como menus, paginação, validações, etc. A camada de Visão pode se comunicar com a controladora obtendo assim mais informações que sejam necessárias para se desenhar a página de resultado. Nessas chamadas a Controladora pode chamar o Negócio que pode chamar a Persistência.

2.6.

Template

Os Templates não são tradicionalmente considerados uma camada da aplicação mas um conjunto de arquivos que vem a auxiliar a Visão na criação das páginas HTML. Os Templates são arquivos que lembram trechos de páginas HTML mas com trechos PHP para a criação dos conteúdos dinâmicos. Os Templates não devem ter a criação de novos métodos, funções ou classes. O código no template é exclusivamente para a saída de conteúdo HTML. Templates podem incluir outros Templates embora essa prática aplicada em muitos níveis costuma dificultar a manutenção do sistema. Uma visão também pode chamar vários Templates desde que o HTML resultante da operação de montagem seja um XHTML válido.

281

2.7.

Segurança

A Camada de Segurança é a camada responsável por avaliar se o usuário tem a permissão de acessar a funcionalidade desejada. Algumas implementações criam essa camada apenas como uma classe de Negócio mas é importante lembrar que a checagem da segurança deve ser feita antes de qualquer outra chamada de Negócio e que a controladora deve estar pronta para tratar caso o usuário esteja tentando fazer uma operação que não tenha permissão. Alguns controles de segurança extras podem e devem ser feitos dentro da camada de Negócio. Por exemplo, um usuário com o perfil professor pode ter a permissão de informar a nota dos seus alunos mas não deve poder informar a nota de alunos de outros professores. Deste modo, apesar do usuário ganhar a permissão de executar a operação "Informar nota de Aluno" pela camada de Segurança, a camada de negócio deve validar se a permissão também se aplica aquele caso, podendo também vir a gerar uma exceção por tentativa de operação a qual o usuário não tem a permissão de executar.

282

Deixar a checagem de segurança para a entrada de cada método do Negócio gera um problema de permissões em cascata. Um usuário além de precisar da permissão de um método de Negocio, precisaria da permissão de todos os métodos de Negócio que fossem chamados. Esse tipo de problema é de difícil detecção, difícil reprodução e acaba jogando para o cliente o controle de uma arvore de dependencias que ele desconhece. A camada de segurança gera um mecanismo de controle de permissão simples, confiável e flexível. Casos especiais podem e devem ser tratados dentro da camada de Negócio.

2.8.

Banco de Dados

O Banco de Dados ou Sistema Gerenciador de Bancos de Dados é uma aplicação externa ao PHP que executa os comandos solicitados pela Persistência, salvando, alterando, removendo e buscando os registros em sua estrutura. Os comandos feitos pela persistência devem ser coerentes ao comando que o Banco de Dados é capaz de interpretar. Para facilitar tal comunicação, existem abstrações de Banco de Dados, extensões ou componentes que recebem comandos escritos no padrão SQL e convertem num comando compreensível ao Banco de Dados utilizado. As regras de boas práticas para Banco de Dados devem ser seguidas nos comandos enviados ao Banco de Dados, assim como o controle de segurança de acesso ao Banco de Dados. Uma prática recomendada é a utilização de diferentes usuários de Banco de Dados para escrita ou leitura. Além disso, algumas aplicações utilizam diferentes usuários de Banco de Dados para atividades de diferentes perfis de usuário da aplicação. Essa prática aumenta a complexidade do controle transacional mas reduz o risco e impacto de um ataque contra o sistema.

283

2.9.

Web Service

A W3C define um "Web Service" como um sistema de software designado para suportar interações máquina-para-máquina com interoperabilidade numa rede. Também chamados de "Grandes Serviços Web", os Serviços Web trocam mensagens na Linguagem de Marcação Extensível (XML), através do padrão do Protocolo Simples de Acesso a Objetos (SOAP) , padrão este que se estabeleceu no meio corporativo. Em tais sistemas, existe freqüentemente uma descrição das operações oferecidas pelo serviço, escrita na Linguagem de Descrição de Serviços Web (WSDL). Esse documento não é necessário para a execução do serviço mas é para a geração automática do código cliente em diversas plataformas. Algumas organizações, tais como a WS-I definem como um Serviço Web a disponibilidade do serviço numa rede juntamente com o WSDL, necessariamente. O PHP apresenta nativamente alguns mecanismos que visam facilitar a utilização de Web Services nos projetos PHP, tanto para o desenvolvimento de clientes quanto de servidores. Para fazer uso de tais recursos recomendamos que as classes que forem
284

funcionar como Servidores Web Services venham a utilizar alguma forma de abstração de criação de WSDL como WsdlDocument. Recomenda-se que os métodos dos Webs Services sejam atômicos, com poucas mensagens de erro por execução e que utilizem os mesmos métodos dos negócios dos utilizados pelas controladoras.

3. Componentes e Modularidade 3.1. Coesão e Acoplamento

Em ciência da computação, acoplamento ou dependência é o nível o qual cada módulo do programa depende de outros módulos. O conceito de acoplamento é contrastado com a coesão. Quanto maior a coesão menor o acoplamento, e vice-versa. Coesão e Acoplamento foram temas muito discutidos por Larry Constantine e Edward Yourdon no famoso livro de 1976, Structured Design. Nesse livro, Larry Constantine inventou uma métrica para controle de qualidade de software baseada na coesão e no acoplamento. Esses conceitos foram inicialmente aplicados na programação estruturada e recentemente adaptados a programação orientada a objetos. Baixo acoplamento é freqüentemente um sinal de um software bem estruturado e de um bom design. Quando combinado com uma alta coesão, permite ao sistema uma alta legibilidade e alta manutenabilidade. Coesão é então uma medida de qualidade que pode ser extraída a partir de uma análise do código.

3.2.

Modularidade

Modularidade é o termo para o projeto de um sistema que é composto de várias partes que podem ser trocadas. Desta forma o sistema pode ser dividido em vários subsistemas (incluindo neste as diversas opções resultantes de trocas). Os sistemas podem ser processos ou produtos. Cada parte que pode ser trocada é um módulo. Componentes de Software é o termo utilizado para descrever o elemento de software que
285

encapsula uma série de funcionalidades. Um componente é uma unidade independente, que pode ser utilizado com outros componentes para formar um sistema mais complexo. Em programação orientada a objetos um componente é o objeto que implementa uma interface e é autônomo em relação a outros componentes do sistema. Isso aumenta a modularidade do sistema como um todo na manutenção dos componentes.

3.3.

Modularidade

Componentes permitem que novas funcionalidades sejam adicionadas ao sistema de maneira coesa e reduzindo o acoplamento com o restante do projeto. Esse tipo de organização possibilita a modificação da implementação de um componente tenha o menor impacto possível no restante do projeto. Para fins de camada os componentes são elementos de negócio mas não são necessariamente estáticos e costumam possuir Entidades próprias do seu contexto. Alguns exemplos de componentes:
            

Gerador de PDF; Gerador de Planilha Excel; Componente de Cache de Arquivos; Gerador de Log; Gerador de Estatísticas do Log; Gerador de Gráficos; Gerador de Caderno de Impressão; Gerador de Relatórios; Componente de Manipulação de Sessão; Gerador de Apresentação PPT; Gerador de Streaming de Vídeo; Componente para Redimensionar Imagem; Componente de Erro.

Nessa analise, a camada de Segurança e a camada de Web Service podem ser vistos como componentes. Pois são objetos similares aos objetos de Negócio, que interagem com os objetos de Negócio, que podem ter suas Entidades próprias e que tem um propósito claro e definido gerando um código coeso com o resto do sistema sem gerar um aumento desnecessário no acoplamento.
286

Os componentes podem ter uma dependência entre si. Além disso, alguns componentes interagem com alguns outros caso estejam disponíveis, mas não dependem da existência dos mesmos para funcionar adequadamente. O componente de Erro pode interagir com o componente de Log caso esse esteja disponível, mas pode continuar funcionando caso este não esteja instalado. O componente de Template pode utilizar o componente de Cache caso esse esteja disponível.

287

Encarte I ­ Guia de Segurança da Informação para Desenvolvimento de Sistemas

288

1. Introdução Este guia apresenta requisitos de segurança para implementação e observação no desenvolvimento de sistemas no âmbito do INEP. Possui cinco seções que abordam os requisitos segundo as seguintes dimensões:
     

Requisitos gerais de segurança de sistemas de informação; Processamento correto nas aplicações; Controles criptográficos; Segurança de arquivos do sistema; Segurança em processo de desenvolvimento e de suporte; Gestão de vulnerabilidades técnicas.

2. Requisitos gerais de segurança de sistemas de informação Requisitos de segurança devem ser identificados na fase de definição de requisitos e justificados, acordados e documentados como parte do backlog, devendo constar no Documento de Visão do software.

2.1 Diretrizes gerais As seguintes diretrizes devem ser seguidas para garantir que os requisitos de controles de segurança sejam atendidos em todos os sistemas:

a. A definição e especificação dos requisitos de segurança de um dado sistema devem ser modeladas e devidamente documentadas desde o início de seu desenvolvimento, ainda na fase de análise. b. Para cada sistema a ser desenvolvido, o INEP poderá definir uma ou mais ferramentas de testes automáticos de requisitos de segurança. O sistema a ser desenvolvido deve atender aos requisitos especificados na
289

parametrização da(s) ferramenta(s), os quais deverão ser estabelecidos no início do desenvolvimento. c. No caso de uso ou reuso de componentes de software desenvolvidos internamente ou por terceiros, os mesmos deverão obedecer aos controles de segurança estabelecidos nesta seção em particular e no guia em geral, bem como aos requisitos de segurança especificados na modelagem. d. Qualquer decisão de não-implementação de um ou mais dos controles estabelecidos neste guia deve ser justificada e aprovada pelo INEP, que analisará o fato segundo danos potenciais ao negócio. É reservado ao INEP a decisão quanto a não-implementação de controles. e. Recomenda-se implementar os processos de segurança nos estágios iniciais dos projetos dos sistemas de informação, onde os mesmos são economicamente mais vantajosos de implementar e manter do que aqueles incluídos durante ou após a implementação.

3. Processamento nas aplicações Com o intuito de prevenir a ocorrência de erros, perdas, modificação não autorizada ou mau uso de informações em aplicações, os seguintes controles devem ser implementados: a. Validação da entrada; b. Controle do processamento interno; c. Verificação de Integridade das mensagens; d. Validação da saída.

3.1 - Validação da entrada A entrada da aplicação deve ser validada para garantir que está correta e pertinente. Devem ser aplicadas checagens na entrada de transações de negócios, em dados permanentes que serão gravados em tabelas, dados de importação, dados originados de outras aplicações, etc.
290

Os seguintes controles devem ser implementados: a. Tratamento de entradas duplicadas ­ a mensagem de erro de duplicidade de chave primária deve ser prevista e tratada na codificação de maneira a informar ao usuário de forma clara o ocorrido; b. Tratamento de valores fora do domínio especificado ­ esses domínios devem ser especificados na fase de análise; caso não estejam definidos, o desenvolvedor deve cobrá-los do analista. Uma vez definidos, os domínios devem ser verificados e em caso de discrepância, a mensagem de erro deve ser clara quanto à irregularidade; c. Tratamento de caracteres inválidos ­ nos contextos onde existirem caracteres que possam ser, no momento de saída, interpretados como comandos, estes devem ter o devido tratamento. Exemplos: HTML injection, CSS injection e JavaScript injection; d. Dados incompletos ou faltantes ­ na ausência de definição de negócio, todos os campos devem ser considerados obrigatórios; o não preenchimento de um ou mais campos deve ser tratado com mensagem de erro clara quanto à irregularidade; e. Duplicidade de chaves secundárias ­ sempre que se tratarem de chaves secundárias o desenvolvedor deve lançar mão, juntamente com o analista, de uma ou mais das seguintes opções:
   

Transformar todos os caracteres em caixa alta; Evitar nomes com apenas a inicial; Em caso de endereços, verificar possibilidade de usar o CEP; Uso de listas de valores pré-definidos preferencialmente à digitação pelo usuário;



Utilização do auto-complete;

a. Volume de dados excedendo limites pré-estabelecidos ­ todos campos devem ter tratamento de número máximo de caracteres conforme definido no banco. O usuário deve ser impedido de exceder o limite máximo;
291

b. Nos casos definidos acima, deve haver redundância de procedimentos tanto na camada cliente como na servidor; c. Deve haver inspeção de cópias impressas de documentos de entrada para detectar quaisquer alterações que lhe comprometam a integridade (todas as mudanças em documentos de entrada devem ser aprovadas e revisadas); d. Devem ser estabelecidos procedimentos para tratar erros de validação, de forma que o usuário seja devidamente informado sobre todos os erros contidos na submissão de dados, e não somente avisado do primeiro erro ocorrido. Neste caso, o usuário deve ser reconduzido seqüencialmente aos pontos onde informou dados errôneos, para que tenha nova chance de preenchimento; e. Nos procedimentos de carga de dados, as pessoas envolvidas no processo deverão ser informadas ao Gerente do Projeto, tanto pela contratada, quanto pelo INEP, de forma que tais envolvidos tenham suas responsabilidades definidas; f. Outras verificações e validações de dados de entrada devem ser consideradas, para reduzir o risco de erros e prevenir ataques.

3.2 - Controle do processamento interno Devem ser incorporadas, nas aplicações, checagens de validação com o objetivo de detectar qualquer corrupção de informações, por erros ou por ações deliberadas. O projeto e a implementação das aplicações deve garantir que os riscos de falhas de processamento que levem à perda de integridade sejam minimizados (Por exemplo: mecanismo de rollback em caso de falha). As seguintes implementações deverão ser observadas: a. dados de controle incorretos ou não autorizados ­ as aplicações devem tratar adequadamente os casos em que forem informados dados de controle que não sejam válidos ao contexto ou que não sejam autorizados;

292

b. as aplicações deverão conter procedimentos para evitar que programas rodem na ordem errada ou continuem rodando após uma falha de processamento ­ o disposto neste item não se aplica a sistemas que possuírem tolerância a falhas ou nos casos em que houver possibilidade de recuperação futura da sessão, sem prejuízos ao processamento corrente; c. devem ser definidos e usados procedimentos apropriados para recuperação de falhas, para assegurar o processamento correto dos dados; d. dados de entrada gerados pelo próprio sistema (retro-alimentação) deverão ser validados; e. devem ser realizadas verificações de integridade, autenticidade ou qualquer outra característica de segurança, no caso de transferência/atualização de dados ou softwares entre computadores centrais e remotos; f. dados sensíveis ou críticos deverão receber implementação de técnicas de consistência e integridade (hash); g. devem ser implementadas verificações para garantir que os programas sejam rodados no tempo correto; h. deve ser criado um registro das atividades envolvidas no processamento (log).

3.3 - Integridade das mensagens Os requisitos para garantir a autenticidade e proteger a integridade das mensagens em aplicações devem ser identificados. Deve ser efetuada uma análise/avaliação dos riscos de segurança para determinar se a integridade das mensagens é requerida e para identificar o método mais apropriado de implementação (Por exemplo: hash, assinatura digital, dentre outros). A solução implementada deve ser formalizada junto ao gerente do projeto, para que tenha valor formal e para que soluções de infraestrutura sejam providenciadas.
293

3.4 - Validação da saída A saída das aplicações deve ser validada para assegurar que o processamento das informações armazenadas está correto e é apropriado às circunstâncias. A validação da saída deve incluir no mínimo: a. verificações de plausibilidade para testar se os dados de saída são razoáveis; b. fornecimento de informação suficiente para que um leitor ou um sistema de processamento subseqüente possa determinar a exatidão, completeza, precisão e classificação das informações; c. definição das responsabilidades de todo o pessoal envolvido no processo de saída de dados.

4. Controles criptográficos Os sistemas desenvolvidos para o uso do INEP devem garantir

Confidencialidade, Disponibilidade e Integridade das informações por eles processadas. Sempre que aplicável, os referidos sistemas deverão implementar controles criptográficos, em conformidade com a Política de Segurança da Informação do INEP. Diretrizes: a. Os controles criptográficos deverão tratar a informação observando sua classificação e criticidade; b. O nível de proteção deve ser identificado com base em uma prévia análise/avaliação de riscos, levando em consideração o tipo, a força e a qualidade do algoritmo de criptografia requerido; c. As diretrizes de criptografia também aplicam-se aos sistemas desenvolvidos para uso em celulares e PDAs; d. O uso de chaves deve ser solicitado ao responsável pelo gerenciamento das chaves no INEP, para que estas sejam geradas;
294

e. As chaves utilizadas deverão ser mantidas sob sigilo de acordo sob as recomendações contidas na norma ISO/IEC 11770; f. Em caso de perda da chave pelo usuário final ou pela equipe de desenvolvimento, o aplicativo deve prever troca de chaves; neste caso, o responsável pelo gerenciamento das chaves deve ser comunicado para que a referida chave não mais seja utilizada. g. Em caso de comprometimento ou dano causado às chaves, o aplicativo deve prever procedimento de recuperação. Além disso, o fato deve ser comunicado ao responsável pelo gerenciamento e o tratamento deve ser dado para que elas não mais sejam usadas; h. O uso da criptografia por uma aplicação deve contemplar a revogação e revalidação das chaves periodicamente; i. Em caso de uso de certificação digital, os sistemas desenvolvidos deverão observar a validade do mesmo, de forma a não comprometer a continuidade de negócio; os aplicativos deverão gerar alertas quanto à expiração a partir de um prazo definido pelo gestor; j. O uso de controles criptográficos deve observar a necessidade de desempenho e tempo de resposta requerida pela aplicação, de forma a não comprometer os referidos parâmetros. 5. Segurança de arquivos do sistema

Deve ser garantida a segurança de aplicativos nos ambientes de desenvolvimento, homologação, testes, produção e outros.

5.1 ­ Diretrizes: Para minimizar o risco de que arquivos do sistema sejam corrompidos, convém que as seguintes diretrizes sejam consideradas para controlar mudanças: a. a atualização de sistemas operacionais (ambiente), de aplicativos, bibliotecas e outros componentes da plataforma deve ser executada somente por administradores da infraestrutura do Inep e mediante autorização gerencial;
295

b. as aplicações em produção devem conter somente código executável e aprovado, jamais conter códigos em desenvolvimento, depuradores ou compiladores; c. sistemas operacionais e aplicativos devem ser implementados após testes extensivos e bem-sucedidos; é recomendável que os testes incluam: testes sobre uso, segurança, efeitos sobre outros sistemas, como também sobre uso amigável, e sejam realizados em ambientes separados, com a devida aprovação formal pela Equipe de Qualidade do Inep; d. a equipe de desenvolvimento deve assegurar que no ambiente operacional todas as bibliotecas e componentes requeridos pelos aplicativos tenham sido especificadas no Procedimento de Implantação (artefato da metodologia de gestão e desenvolvimento de sistemas) e estejam com sua versão atualizada; e. deve ser utilizado o sistema de controle de versão institucionalizado pelo Inep com o propósito de manter controle da implementação da aplicação e da documentação do sistema; f. deve ser elaborada estratégia de retorno às condições anteriores antes que mudanças sejam implementadas no ambiente; g. a equipe de desenvolvimento deve manter componentes e códigos de terceiros num nível apoiado por seus respectivos fornecedores e priorizar o uso de componentes de código aberto; h. ao transcorrer do tempo, fornecedores de software cessam o apoio a versões antigas. A equipe de desenvolvimento deve considerar este risco, e será responsabilizada caso utilize componentes sobre os quais não tenha completo domínio ou capacidade de manutenção e atualização; i. pacotes de correções de software devem ser aplicados tão somente quando implementarem novas funcionalidades ou puderem remover/reduzir instabilidades e vulnerabilidades de segurança. j. a solicitação pela atualização de sistemas operacionais deve ser feita quando existir um requisito plausível para tal.

296

k. as aplicações podem depender de softwares e componentes fornecidos externamente. Nesse caso, os referidos softwares e componentes devem ser monitorados e controlados para evitar mudanças não autorizadas, que podem introduzir fragilidades na segurança. l. para propósito de teste, devem ser utilizados bancos de dados, processos e documentos especificamente preparados para tal, de modo que não interfiram em processos ou prejudiquem informações sensíveis. m. os procedimentos de controle de acesso, aplicáveis aos aplicativos de sistema em ambiente operacional, também devem ser aplicados aos aplicativos de sistema em ambiente de teste; n. o acesso ao ambiente operacional, seja ele de produção, desenvolvimento ou homologação, deve ser estritamente controlado e auditado.

6. Segurança em processo de desenvolvimento e de suporte A segurança das aplicações e do ambiente deve ser mantida tanto no processo de desenvolvimento quanto no de manutenção. Para tal devem ser observadas as seguintes diretrizes:

6.1 ­ Controle de mudanças: a) Definição de responsável pelo controle de mudanças


Para cada sistema, o Gerente de Projetos do Inep será responsável por validar as solicitações de mudança bem como, alterações e submissões de manutenções corretivas e preventivas, melhorias e novas funcionalidades solicitadas pelo cliente. Ele deverá contar com o auxílio de um Analista de Processos do Inep, conforme a metodologia vigente no Inep. Portanto, o procedimento de mudança contará, no mínimo com as seguintes pessoas:

1. Cliente / demandante (representante da área de negócio);
297

2. Gerente de Projetos do Inep (responsável pelo sistema na área de tecnologia da informação); 3. Analista de Processos do Inep (auxilia o gerente de projetos do Inep nas fases de análise de viabilidade e impacto da solicitação de mudança).


Outras pessoas poderão ser agregadas aos comitês de acordo com as peculiaridades de cada sistema.

b. Requisição formal de mudança


Para casos de manutenção corretiva, preventiva ou adaptativa o cliente / demandante deve usar a ferramenta de gestão corrente (sistema de demandas) para fazer uma solicitação formal à área de TI. c) Mudanças de infraestrutura



Em caso de mudanças de infraestrutura que necessite envolver a Equipe de Infraestrutura do INEP, estas deverão ser comunicadas e negociadas com antecedência, incluindo definição de dia, horário e período de tempo para execução da mudança;



A equipe de desenvolvimento deve estar a postos para resolver possíveis problemas advindos da mudança;



Testes de regressão podem ser aplicados pela Equipe de Testes da Prestadora / Equipe de Qualidade do Inep, para identificar possíveis incompatibilidades entre a nova configuração e o(s) sistema(s) em desenvolvimento.

d) Autorização para mudanças


A autorização para execução da mudança pela prestadora será de responsabilidade do cliente/demandante, com o apoio do gerente de projetos do Inep;



A equipe gestora do sistema (gerente de projetos e analista de processos - do Inep), por sua vez , avaliará o impacto, o prazo e esforço para a solução das

298

demandas informados pela prestadora, como forma de determinar a precisão das estimativas repassadas, tomando o devido cuidado para que prazos mal estimados reflitam na qualidade e nos requisitos de segurança das aplicações, ou ainda, introduzam vulnerabilidades às aplicações em desenvolvimento e/ou produção.

6.2 ­ Melhores práticas no processo de desenvolvimento e suporte: a. De maneira geral, à equipe de desenvolvimento, deve ser aplicada a "Lei do Menor Privilégio", que consiste em atribuir-lhe estritamente os privilégios necessários, bloqueando o acesso àquilo que não precisará ou não será útil, tanto no ambiente operacional, quanto nos arquivos do sistema em desenvolvimento; b. O princípio da "Codificação pessimista" deve sempre ser observado. Este princípio consiste no fato de não caber ao desenvolvedor, por si só, realizar a análise de riscos e impacto de uma vulnerabilidade; portanto, deve, sempre que aplicável, implementar a melhor solução de segurança possível e pertinente, de modo que a aplicação esteja sempre protegida contra falhas; c. A codificação deve, sempre que possível, contemplar o uso comedido e responsável de memória e CPU, tanto do servidor de aplicação quanto do cliente, haja vista a quantidade de vulnerabilidades exploráveis pelo estouro ou sobrecarga de ambas.

7. Gestão de vulnerabilidades técnicas Os sistemas desenvolvidos no Inep deverão ser avaliados quanto à exposição da organização relacionada a vulnerabilidades técnicas dos sistemas. Deverão ser tomadas as medidas apropriadas para lidar com os riscos associados.

299

7.1 ­ Diretrizes a. Deve ser realizado, pela equipe de desenvolvimento da prestadora, inventário completo e atualizado dos ativos de informação de cada sistema, incluindo:
   

fornecedor de softwares que apóiem o desenvolvimento; versões; status atual de uso; distribuição (por exemplo, que softwares estão instalados e em que equipamentos);



a(s) pessoa(s) na organização responsável(is) pelos softwares.

a. Deverão ser atribuídas, dentro da equipe de desenvolvimento da prestadora, funções e responsabilidades associadas na gestão de vulnerabilidades técnicas, incluindo o monitoramento de vulnerabilidades, a análise/avaliação de riscos de vulnerabilidades, necessidade de aplicação de patches e acompanhamento dos ativos. O processo de gestão de vulnerabilidades técnicas deve ser monitorado com a finalidade de assegurar a eficácia e a eficiência aos processos de desenvolvimento/manutenção de sistemas; b. Caso sejam identificadas vulnerabilidades potencialmente relevantes, um prazo de reação deve ser definido e acordado com o Gerente de Projetos do Inep; c. Deverá ser criado, pela equipe de desenvolvimento da prestadora, um plano de resposta a incidentes no software contendo ações que deverão ser tomadas ao se identificar uma vulnerabilidade ou risco; d. No caso de patches de atualização que tratem de vulnerabilidade(s), deverão ser avaliados os riscos associados à sua instalação (convém que os riscos associados à vulnerabilidade sejam comparados com os riscos de instalação do patch); e. Patches deverão ser testados e avaliados antes de serem instalados para assegurar a efetividade e que não tragam efeitos que não possam ser tolerados;
300

f. Quando não existir um patch que trate uma vulnerabilidade, deve-se considerar o uso de outros controles, tais como:
 

desativar serviços ou potencialidades relacionadas à vulnerabilidade; adaptar ou agregar controles de acesso, por exemplo firewalls nas fronteiras da rede;

 

aumentar o monitoramento para detectar ou prevenir ataques reais; treinar e conscientizar os usuários sobre a vulnerabilidade.

301

Encarte J ­ Guia de Banco de Dados

302

1. Introdução
Este documento tem o objetivo de apresentar regras específicas e orientações gerais (boas práticas) dos processos da área de Banco de Dados, além de definir um padrão de nomenclatura para os objetos de Banco de Dados e a documentação necessária para manter a qualidade dos metadados.

2. Informações Relevantes
2.1 Auditoria Todas as tabelas terão dois campos adicionais, a saber: um campo com a informação do usuário responsável pela alteração e outro com a data/hora em que a operação foi realizada. Possíveis exceções deverão ser estudadas em conjunto com a área de banco de dados. Outros níveis de auditagem estão sob responsabilidade da equipe interna do INEP. 2.2 Padronização de charset Colocar charset das bases de dados como UTF-8. Possíveis exceções deverão ser tratadas em conjunto com a área de banco de dados. 2.3 Criação de usuários


A aplicação fará acesso ao banco de dados através de dois usuários: um com permissão de escrita e leitura, e outro somente com permissão de leitura. A aplicação não utilizará o owner dos objetos para acessar o banco de dados;



Em alguns casos serão criados os usuários de leitura e escrita para cada perfil do sistema, onde cada um desses usuários de banco poderá acessar somente os objetos do seu domínio.

303

3. Administração de Dados
Administração de Dados é a função responsável por desenvolver e administrar, de modo centralizado, as estratégias, procedimentos e práticas para o processo de gerência dos recursos de dados e aplicativos, incluindo planos para sua definição, padronização, organização, proteção e utilização. 3.1 Dicionário de Dados e Modelo Entidade Relacionamento (MER) Um dicionário de dados é uma coleção de metadados que contêm definições e representações de elementos de dados. O dicionário de dados é artefato obrigatório para a solicitação de criação de um banco de dados e o mesmo pode ser gerado de duas maneiras:
 

Através de um documento específico; ou Utilizando a ferramenta case definida pelo INEP. O modelo de dados deve ser preenchido devidamente, de modo que o dicionário de dados gerado pela ferramenta, venha atender ao padrão deste documento.

Todas as alterações no banco de dados, devem estar refletidas no dicionário de dados. O dicionário de dados deve contemplar uma descrição significativa das entidades e atributos do modelo. Deve-se evitar o uso de siglas nas descrições no dicionário de dados. O MER do projeto deve obedecer a 3 FN (forma normal). As exceções devem ser tratadas com a equipe de Banco de Dados. 3.2 Regras Obrigatórias na Implementação do Projeto


Será obrigatório no momento da codificação o uso do schema antes de qualquer chamada à um objeto de banco de dados (tabelas, procedures, funções, views, triggers, etc );

304



É obrigatória a utilização de variáveis de ligação nos comandos sql da aplicação.

3.3

Nomenclaturas e Estilos

Regras Gerais



As nomenclaturas/semânticas devem ser nomes ou palavras de Língua Portuguesa (Brasil);



Deve-se fazer o uso de nomenclatura com objetividade e clareza, evitando o uso de abreviações;



O nome do objeto deve ser escrito em letras maiúsculas (caixa alta) e no singular;



O nome do objeto não deve conter números, acentos, símbolos de pontuação e caracteres especiais, exceto casos especiais (vide Nomenclatura de Índices);



Em caso de nome composto, deve-se fazer o uso de underscore "_" como separador;



Não utilizar preposições/artigos (de, do, das, dos, um, etc) no nome dos objetos. Exemplo: FK_CASA_DA_PESSOA, PESSOA_TEM_CARRO, NO_DO_ALUNO, etc;



Os objetos de banco de dados que estão no mesmo contexto não deverão ter nomes iguais. Possíveis exceções deverão ser tratadas com a equipe de Banco de Dados.



Os nomes não deveram exceder o limite máximo de 30 caracteres.

3.3.1 Nomenclatura de Cluster O uso de cluster deve ser evitado, em caso de necessidade deve-se contactar a Administração de Banco de Dados. Sintaxe: CLT_NOME_CLUSTER
305

Onde: - CLT: iniciais da padronização. - NOME_CLUSTER: nome representativo do cluster desejado. 3.3.2 Nomenclatura de Database Link Sintaxe: NOME_DATABASE_REMOTO

Onde: - NOME_DATABASE_REMOTO: nome da base de dados remota.

O Database Link será sempre privado e sempre utilizará usuário nomeado. 3.3.3 Nomenclatura de Functions, Procedures e Packages Cada objeto terá seu prefixo conforme o seu tipo.


Function ­ O nome deverá conter o prefixo FNC, seguido do nome da função.

Sintaxe: FNC_NOME_FUNCAO

Onde: - FNC: iniciais da padronização; - NOME_FUNCAO: nome representativo da função desejada;

Exemplo: FNC_CORRIGE_DATA;



Procedure ­ O nome deverá conter o prefixo PRC, seguido do nome do procedimento;

Sintaxe: PRC_NOME_PROCEDIMENTO;

306

Onde: - PRC: iniciais da padronização; - NOME_PROCEDIMENTO: nome representativo do procedimento desejado; Exemplo: PRC_REMANEJA_ALUNO;



Package ­ O nome deverá conter o prefixo PKG, seguido do nome do pacote.

Sintaxe: PKG_NOME_PACOTE Onde: - PKG: iniciais da padronização; - NOME_PACOTE: nome representativo do pacote desejado.

Exemplo: PKG_IMPORTACAO. 3.3.4 Nomenclatura de Índice (Index)

Sintaxe: IDX_NOME_TABELA_NUMERO_SEQUENCIAL

Onde: - IDX: iniciais da padronização; - NOME_TABELA: nome da tabela para qual está sendo criado o índice; - NUMERO_SEQUENCIAL: número seqüencial de índice criado. Iniciando a seqüência com "01".

Exemplo: IDX_ALUNO_01.

3.3.5

Nomenclatura de Library

Sintaxe: LIB_NOME_LIBRARY

307

Onde: - LIB: iniciais da padronização; - NOME_LIBRARY: nome representativo da library desejada.

3.3.6

Nomenclatura de Role Sistema

Sintaxe: RL_NOME_PERFIL_NOME_PERMISSÃO Onde: - RL: iniciais da padronização; - NOME_PERFIL: nome do perfil de usuário do sistema que deve conter os privilégios da role; - NOME_PERMISSÃO: nome da permissão relacionada ao CRUD .
1

Exemplo: - RL_ALUNO_CONSULTA; - RL_ALUNO_ESCRITA.

3.3.7

Nomenclatura de Role Administrativa

Sintaxe: RL_DESCRITIVO_PRIVILÉGIO_ADMINISTRATIVO

Onde: - RL: iniciais da padronização; DESCRITIVO_PRIVILÉGIO_ADMINISTRATIVO: Descrição dos privilégios administrativos concedidos.

Exemplo: RL_VPD .
2

3.3.8

Nomenclatura de Sequence

Sintaxe: SEQ_NOME_COLUNA
308

Onde: - SEQ: iniciais da padronização; - NOME_COLUNA: nome da coluna desejada, sem o prefixo da coluna.

Exemplo: Nome da Coluna: ID_ALUNO Nome da Sequence: SEQ_ALUNO

3.3.9

Nomenclatura de Schema de Banco de Dados

Sintaxe: NOME_SCHEMA

Onde: - NOME_SCHEMA: nome representativo do esquema desejado;

Exemplo: ACERVO.

3.3.10 Nomenclatura de SnapShot (deprecated) Sintaxe: SNAP_NOME_SNAPSHOT

Onde: - SNAP: iniciais da padronização; - NOME_ SNAPSHOT: nome representativo do snapshot desejado.

3.3.11 Nomenclatura de Trigger Sintaxe: TRG_NOME_TRIGGER

Onde:
309

- TRG: iniciais da padronização; - NOME_TRIGGER: nome representativo da trigger desejada.

Exemplo: TRG_ATUALIZA_ALUNO

3.3.12

Nomenclatura de Type

Sintaxe: TP_NOME_TYPE

Onde: - TP: iniciais da padronização; - NOME_TYPE: nome representativo do type desejado.

3.3.13

Nomenclatura de View

Sintaxe: VW_NOME_VIEW

Onde: - VW: iniciais da padronização; - NOME_VIEW: nome representativo da visão desejada.

3.3.14

Nomenclatura de Materialized View

Sintaxe: MV_NOME_MATERIALIZED_VIEW

Onde: - MV: iniciais da padronização; - NOME_VIEW: nome representativo da visão materializada desejada.

310

3.3.15 Nomenclatura de Constraints Os nomes de constraints devem ser constituídos da seguinte maneira:


Check constraint:

Sintaxe: CK_NOME_TABELA_NUMERO_SEQUENCIAL Onde: - CK: iniciais da padronização; - NOME_TABELA: nome da tabela para qual está sendo criada a check constraint; - NUMERO_SEQUENCIAL: número seqüencial de check constraints criado. Iniciando a seqüência com "01". Exemplo: - CK_ALUNO_01



Foreign key: Para chave estrangeira cabem duas orientações.

Situação normal: Quando uma tabela recebe uma foreign key apenas uma vez.

Sintaxe: FK_NOME_TABELA_DESTINO_NOME_TABELA_ORIGEM Onde: - FK: iniciais da padronização; - NOME_TABELA_DESTINO: nome da tabela de destino que contém o identificador. - NOME_TABELA_ORIGEM: nome da tabela de origem que contém o identificador.

Exemplo:

- FK_TURMA_ALUNO: Relaciona a tabela turma e a tabela aluno.

311

Exceções: Quando uma tabela recebe a mesma foreign key mais de uma vez.

Sintaxe: FK_NOME_TABELA_DESTINO_NOME_ATRIBUTO_RELACIONADO Onde: - FK: iniciais da padronização; - NOME_TABELA_DESTINO: nome da tabela de origem que contém o identificador. - NOME_ATRIBUTO_RELACIONADO: nome do atributo que recebe a chave estrangeira.

Exemplo:

- FK_TURMA_USUARIO_ALTERACAO: Relaciona a tabela turma e a tabela usuario. A fk se dá no atributo co_usuario_alteracao da tabela turma, que armazena o código do usuário que realizou a última alteração no dado em questão; - FK_TURMA_USUARIO_INCLUSAO: Relaciona a tabela turma e a tabela usuário. A fk se dá no atributo co_usuario_inclusao da tabela turma, que armazena o código do usuário que incluiu o dado em questão;


Primary key:

Sintaxe: PK_NOME_TABELA Onde: - PK: iniciais da padronização; - NOME_TABELA: nome da tabela que contém a primary key. Exemplo: - PK_ALUNO: Chave primária da tabela aluno.

312



Unique key:

Sintaxe: UK_NOME_TABELA_NUMERO_SEQUENCIAL

Onde: - UK: iniciais da padronização; - NOME_TABELA: nome da tabela para qual está sendo criado o unique key. - NUMERO_SEQUENCIAL: número seqüencial de unique key criado. Iniciando a seqüência com "01". Exemplo: - UK_ALUNO_01: O atributo 1 da tabela é único. 3.3.16 Nomenclatura de Tabela Sintaxe: NOME_TABELA

Onde: - NOME_TABELA: nome da tabela, conforme regras gerais de nomenclatura definidas no item 3.3.

3.3.17 Nomenclatura de Tabela de Relacionamento Sintaxe: NOME_TABELA_ORIGEM_NOME_TABELA_DESTINO

Onde: - NOME_TABELA_ORIGEM: nome da tabela de origem onde contém o identificador. - NOME_TABELA_DESTINO: nome da tabela de destino que receberá o identificador.

Exemplo: - ALUNO_TURMA Relacionamento entre a tabela aluno e a tabela turma

313

3.3.18 Nomenclatura de atributos de tabela O nome da coluna deve ser prefixado pelo tipo de armazenamento do campo. Verificar o quadro a seguir. Atributo Número artificial, criado geralmente para a definição de chave primária (PK). Não tem significado semântico para a tabela Código (representação de um código de identificação, que tenha algum significado para o contexto da tabela). Normalmente é o campo chave da tabela) Data (modela datas dd/mm/yyyy) Descrição (descrição de um determinado objeto/situação/estado) Campos do tipo texto Campo booleano indicador de dois estados ( 0 = falso/false 1 = verdadeiro/true) Mídia (representação de uma mídia, imagem, som e vídeo) Número (representação de uma identificação numérica fixa) Quantidade (representação de uma quantificação, contagem) Valor (representação financeira) Nome (representação de um rótulo de identificação) Tipo (modela um indicador de mais de dois estados. Domínio complexo) Hora (modela hora hh:mi:ss) Sintaxe ID_nome_campo CO_nome_campo

DT_nome_campo DS_nome_campo TX_nome_campo IN_nome_campo

MD_nome_campo NU_nome_campo QT_nome_campo VL_nome_campo NO_nome_campo TP_nome_campo HR_nome_campo

3.3.18.1 Domínios pré-definidos Atributo Tipo/Tamanho Nome NO_PESSOA Caractere variável (150) Nome pessoa física, a nomenclatura deve variar de acordo com o contexto.
314

Descrição

Exemplo: NO_ALUNO. NO_IES Caractere variável (150) Documento Pessoal NU_CPF NU_CNPJ NU_RG CO_ORGAO_EMISSOR Caractere fixo (11) Caractere fixo (14) Caractere variável (20) Numérico (3) Número do Cadastro Nacional de Pessoa Física Número do Cadastro Nacional de Pessoa Jurídica Número do Registro Geral ­ Documento de identidade Código identificador do órgão emissor do documento de identidade, conforme tabela corporativa Data de emissão do documento e identidade Código da unidade da federação onde foi expedido o documento de identidade Número de Identificação Social - NIS (PIS/PASEP/NIT) Número do passaporte Nome da Instituição de Ensino Superior.

DT_EMISSAO_RG CO_UF_RG

Data (dd/mm/yyyy) Numérico (2)

NU_NIS

Caractere variável (11) Caractere variável (10) Endereço

NU_PASSAPORTE

CO_PAIS NO_PAIS CO_UF

Numérico (3) Caractere variável (50) Numérico (2)

Código identificador do país, conforme IBGE Nome do país Código identificador da unidade da federação, conforme IBGE Sigla da unidade da federação, conforme IBGE Nome da unidade da federação, conforme IBGE Código do município, conforme IBGE
315

SG_UF NO_UF CO_MUNICIPIO

Caractere fixo (2) Caractere variável (30) Numérico (12)

NO_MUNICIPIO CO_CEP NO_CIDADE NO_BAIRRO NO_LOGRADOURO DS_COMPLEMENTO NU_ENDERECO

Caractere variável (50) Caractere fixo (8) Caractere variável (50) Caractere variável (100) Caractere variável (100) Caractere variável (100) Caractere variável (20) Telefone

Nome do município, conforme IBGE Código do CEP do endereço Nome da cidade Nome do bairro Nome do logradouro Descrição do complemento do endereço Número do endereço

NU_DDI NU_DDD NU_TELEFONE NU_RAMAL

Numérico (7) Numérico (2) Numérico (10) Numérico (4) Dados Bancários

Número do DDI Número do DDD Número do telefone Número do ramal

CO_BANCO

Numérico (6)

Código identificador do banco, oriundo da tabela corporativa Número da agência bancária Digito verificador da agência Número da conta corrente Digito verificador da conta corrente

NU_AGENCIA NU_DV_AGENCIA NU_CONTA_CORRENTE

Numérico (4) Caractere fixo (1) Numérico (8)

NU_DV_CONTA_CORRENTE Caractere fixo (1) Internet NO_EMAIL NO_SITE Caractere variável (255) Caractere Variável (255) Auditoria CO_USUARIO_ALTERACAO Numérico (10)

Endereço do correio eletrônico Endereço da página da web

Código do usuário que fez a última alteração

316

DT_ULTIMA_ALTERACAO CO_USUARIO_INSERCAO DT_INSERCAO

Data (dd/mm/yyyy hh24:mi:ss) Numérico (10) Data (dd/mm/yyyy hh24:mi:ss)

Data e hora da última alteração Código do usuário que fez a inserção Data e hora da inserção

3.4 Padronização de cabeçalhos 3.4.1 Cabeçalhos de Views

/** * * * * * * * @date 16/06/2009 (data de criação da view) 1. Consulta 2. 3. tabela usuario Consulta Consulta (descrição detalhada tabela tabela da view) conta pendencia Consulta todos os usuários com pendências financeiras (descrição resumida da view)

* @author Thiago Henrique Ramos da Mata * @change Ricardo Duailibe Leitão ­ 25/08/2009 ­ Otimização da tabela temporária (alteração) * @see usuario (dependências) * @see conta (dependências) * * */ @example @see SELECT * FROM pendencia usuario_com_pendencia; (exemplo (dependências) de chamada)

3.4.2

Cabeçalhos de Functions

/** * Atualiza a data de configuração para a data atual. Chamando as

* * * * * 1.

atualizações de

necessárias (descrição

para

a resumida

nova da

data função)

configuração;

Atualiza 2.

os

status

dos a

períodos data

ativos de

(descrição

detalhada do

da

função) sistema

Atualiza

configuração

317

* *

3.

Adiciona

esta

alteração

no

histórico

* * *

@param @return @date bool

integer Retorna (data

Identificador true de em caso criação

do de da

usuário sucesso função)

16/06/2009

* @author Thiago Henrique Ramos da Mata

* @change Ricardo Duailibe Leitão ­ 25/08/2009 ­ Otimização da tabela temporária (alteração) * * * */ @example @see @see SELECT fnc_confere_data_configuracao fnc_atualiza_status_periodo fnc_atualiza_data_configuracao( 1 ); (exemplo (dependências) (dependências) de chamada)

3.4.3

Cabeçalhos de Procedures

/** * Atualiza a data de configuração para a data atual.

* * * * * * * 1.

Chamando de

as

atualizações

necessárias

para resumida

a da

nova

data

configuração;

(descrição

procedure)

Atualiza 2. 3.

os

status

dos a

períodos data esta

ativos de

(descrição

detalhada

da do

procedure) sistema histórico

Atualiza Adiciona

configuração alteração no

* *

@param @date

integer 16/06/2009 (data

Identificador de criação

do da

usuário procedure)

* @author Thiago Henrique Ramos da Mata

* @change Ricardo Duailibe Leitão ­ 25/08/2009 ­ Otimização da tabela temporária (alteração) * * * */ @example @see @see SELECT prc_confere_data_configuracao prc_atualiza_status_periodo prc_atualiza_data_configuracao( ); (exemplo (dependências) (dependências) de chamada)

3.4.4

Cabeçalhos de Packages

318

/** * Esse pacote contém as funções de controle de estatística

*

* @author Thiago Henrique Ramos da Mata

* @date 16/06/2009 (data de criação do pacote )

* @change Ricardo Duailibe Leitão ­ 25/08/2009 ­ Adição da função de desvio padrão (alteração) */

BODY

// recebe n parametros e retorna a media destes

function fn_media( refcursor valores ): integer;

// recebe n parâmetros e retorna o desvio padrão dentre eles

function fn_desvio_padrao( refcursor valores ): float;

(...)

4. Boas Práticas
4.1 Formatação de SQL

Os códigos escritos em SQL devem ser formados da seguinte forma:


Configurações Gerais

Indentação Parágrafo com 4 espaços em branco; Manter recuo inicial na primeira linha;

319

Remover espaço em branco desnecessários; Somente as palavras reservadas em caixa alta; Colocar os comentários entre /*.... */; Usar ' para caracteres literais;



Quebras de linha

Depois das vírgulas; Antes do "||"; 1 identificador por linha; Depois de Union, Minus, Union All, ... utilizar 2 quebras de linha; Antes das palavras reservadas do CASE (When, Then, Else, And/OR); Em sub-selects, antes do "(" e antes do ")"; Nas condições, antes do "(", antes do ")" e antes do AND/OR; Indentar as condições em parênteses;



Espaços em branco

Acrescentar um espaço em volta dos operadores (=, <>, <, >, +, -, *, /). Exemplo: WHERE a = b + c; Acrescentar um espaço depois das vírgulas . Exemplo: SELECT a, b, c; Acrescentar um espaço fora dos parênteses. Exemplo: SELECT MAX (numero) AS
320

maior;



Alinhamento

Alinhar as palavras chaves a esquerda; Não alinhar as vírgulas; Alinhar os pipes "||" no final da linha; Alinhar os alias; Alinhar os operadores e sinais de igualdade;

Exemplo de select formatado:
/*************************************************************/

/* Exemplo de SQL formatado. Fonte: http://www.sqlinform.com */

/*************************************************************/

SELECT price.col1 AS col1,

price.col2 AS col2,

price.col3 AS col3,

MAX (price.col4) AS col4,

MAX (price.col5) AS col5,

MAX (price.col6) AS col6,

MAX (price.col7) AS col7

321

FROM table_1 t1,

table_2 t2

WHERE col1 = col2

AND column_1 = small_column

AND column_3411 <= column_12_sup

AND col1 = 'Test Run'

AND column_4532 = c1.dert

UNION

SELECT price.col1 AS col1,

price.col2 AS col2,

price.col3 AS col3,

MAX (price.col4) AS col4,

MAX (price.col5) AS col5,

MAX (price.col6) AS col6,

/*******************

* This is a block *

* comment within a *

* SQL statement *

*******************/

MAX (price.col7) AS col7

322

FROM (SELECT store.column1,

CAST (store.column2 AS INTEGER) AS column2, -- inline comment

store.columnwe34r3 AS column3, -- inline comment

store.column4_prod AS column4, -- inline comment

store.column5_pre_prod_first AS column5, -- inline comment

SUBSTR (store.column6, 11, 1) AS column6, -- inline comment

store.column7 AS column7 -- inline comment

FROM (SELECT library.column1,

---------------------

-- This is a line --

-- comment in a --

-- SQL statement --

---------------------

library.column2,

library.column3 -- inline comment

,

CASE library.column4

WHEN cheap

THEN digits (library.column27) concat library.column28

ELSE 123456

END AS column4,

CASE library.column5

WHEN expensive

323

THEN digits (library.column27) concat library.column28

ELSE 123456

END AS library.column6,

CASE column7

WHEN free

THEN digits (library.column27) concat library.column28

ELSE 123456

END AS column7,

FROM (SELECT INTEGER (SUBSTR (onelibrarysales.column1, 11, 10)) AS column1,

SUBSTR (onelibrarysales.column2, 21, 10) AS column2,

onelibrarysales.column3,

onelibrarysales.column4,

SUBSTR (onelibrarysales.column5, 31, 6) AS column5,

SUBSTR (onelibrarysales.column6, 37, 2) AS column6,

SUBSTR (onelibrarysales.column7, 39, 6) AS column7,

FROM (SELECT alllibrarysales.column1,

alllibrarysales.column2,

MAX (alllibrarysales.column3) AS alllibrarysales.column3,

MAX (CHAR (alllibrarysales.column4, iso) concat CHAR (alllibrarysales.column5, iso) concat digits (alllibrarysales.column6) concat (alllibrarysales.column7)) AS column5

FROM

/*******************

* This is a block *

324

* comment within a *

* SQL statement *

*******************/

(SELECT libraryprod.column1,

libraryprod.column2,

libraryprod.column3,

libraryprod.column4,

/*******************

* This is a block *

* comment within a *

* SQL statement *

*******************/

libraryprod.column5,

libraryprod.column6,

libraryprod.column7

FROM (SELECT tv.column1,

tv.column2,

MAX (digits (tv.column3) concat digits (tv.column4)) AS librarymax

FROM db1.v_table1 tv

WHERE tv.column1 <> 'Y'

AND tv.column1 IN ('a',

'1'

/**************************************************/

325

/* The free online version only formats 100 lines */

/**************************************************/

Existem algumas ferramentas que formatam o SQL automaticamente, com base nos parâmetros de indentação desejado. A ferramenta SQLinFOrm é uma delas, que por sua vez possui uma versão gratuita para uso on-line e desktop

(http://www.sqlinform.com). 4.2
 

Outras
Evitar o uso de nomenclatura redundante. Exemplo: no_nome_aluno; As regras de chave estrangeira não devem ser desativadas ou removidas, inclusive nos casos de migração de dados ou tentativa de ganho de performance;

326

5. Diagrama de Atividades Internas

Figura 1 ­ Modelo de atividades internas

327

5.1
Finalidade

Descrição do fluxo de Atividades Internas
O solicitante deve gerar uma proposta de modelo entidade relacionamento conforme os requisitos levantados junto ao usuário. Este modelo deve ser construído na ferramenta case definida pelo INEP contendo o dicionário de dados. Prestadora Prestadora e Arquiteto de Sistemas do INEP. Guia de Banco de Dados; Ferramenta CASE de modelagem de dados; Subversion.

Gerar Proposta de Modelo

Responsável Participantes Insumos

Produtos / Resultados

Modelo Entidade Relacionamento (Preliminar).

Geração do Modelo Entidade Relacionamento de acordo com os requisitos do sistema;

1. Adicionar dicionário de dados com descrição das tabelas e de seus atributos;
Regra de roteamento Entender a necessidade real

Entender a Necessidade Real Finalidade Reunião de entendimento das necessidades do sistema que o modelo deve atender. A reunião deverá ser entre a área de infra-estrutura do INEP e a prestadora. Área de Infraestrutura do INEP Prestadora, Área de Infraestrutura do INEP e Arquiteto de Sistemas do INEP. Guia de Banco de Dados; Modelo Entidade Relacionamento (Preliminar). Produtos / Resultados Modelo Entidade Relacionamento (Preliminar).

Responsável Participantes Insumos

Nesta reunião será discutida a melhor forma de montagem do Modelo Entidade Relacionamento a partir da proposta apresentada.

1. A equipe de Infraestrutura do INEP apresentará sugestões de como este modelo deverá ficar.
Regra de roteamento Adequar o Modelo

328

Adequar Modelo Finalidade Responsável Participantes Insumos O modelo de dados será adequado conforme as necessidades levantadas pela área de infra-estrutura do INEP. Área de Infraestrutura do INEP Área de Infraestrutura do INEP. Guia de Banco de Dados; Modelo Entidade Relacionamento (Preliminar). Produtos / Resultados Modelo Entidade Relacionamento (Preliminar).

De acordo com as decisões tomadas na atividade anterior, a Área de Infraestrutura do INEP fará os ajustes necessários no Modelo Entidade Relacionamento. Regra de roteamento Padronizar conforme Guia do INEP

Padronizar conforme Guia do INEP Finalidade Responsável Participantes Insumos O modelo entidade relacionamento é adequado às regras e boas práticas contidas no Guia de Banco de Dados do INEP. Área de Infraestrutura do INEP Área de Infraestrutura do INEP Guia de Banco de Dados; Modelo Entidade Relacionamento (Preliminar). Produtos / Resultados Modelo Entidade Relacionamento (Preliminar).

Adequação dos nomes de tabelas e atributos de acordo com o Guia de Banco de Dados;

2. Utilização das regras de boas práticas contidas no Guia de Banco de Dados.
Regra de roteamento Homologar Adequações

Homologar Adequações Finalidade Responsável Participantes Insumos As adequações feitas pela equipe de infraestrutura são homologadas junto ao solicitante da demanda. Prestadora Prestadora, Área de Infraestrutura do INEP e Arquiteto de Sistemas do INEP. Guia de Banco de Dados; Modelo Entidade Relacionamento (Preliminar). Produtos / Resultados Modelo Entidade Relacionamento (Final)

329

Reunião para confirmar que o Modelo Entidade Relacionamento atende aos requisitos do sistema. Regra de roteamento Se as adequações são acordadas, os scripts com as alterações são gerados. Caso contrário, novas adequações serão feitas.

Criar Scripts Finalidade Responsável Participantes Insumos Produtos / Resultados Criação e agrupamento dos scripts que irão refletir as alterações realizadas no modelo entidade relacionamento. Área de Infraestrutura do INEP Área de Infraestrutura do INEP. Modelo Entidade Relacionamento (Final). Conjunto de Scripts SQL

O conjunto de scripts SQL é criado de acordo com as especificações do Modelo Entidade Relacionamento. Regra de roteamento Persistir no SGBD

Persistir no SGBD Finalidade Responsável Participantes Insumos Produtos / Resultados Aplicar (executar) os scripts gerados no ambiente relativo à fase sendo realizada. Área de Infraestrutura do INEP Área de Infraestrutura do INEP. Conjunto de scripts SQL Objetos de banco de dados criados

O conjunto de scripts SQL é executado no SGBD, criando assim os objetos de banco de dados. Regra de roteamento Fim.

NOTAS:
1 CRUD: create (inserção), read (leitura), update (alteração) e delete (exclusão) 2 VPD: Concede os privilégios administrativos do recurso virtual private database

330

Encarte K ­ Guia de Contagem de Pontos de Função do Inep

331

1 Introdução
Este documento tem como propósito apresentar o conjunto de regras de contagem de pontos de função vigentes no INEP, visando disciplinar a medição dos sistemas desenvolvidos/mantidos tanto por equipes internas quanto por equipes de terceiros, contratadas para prestar serviços ao Órgão.

Tais regras são aderentes ao Manual de Práticas de Contagem (CPM 4.2.1) do IFPUG e adequadas à Metodologia de Gestão e Desenvolvimento de Sistemas do INEP.

O presente documento está organizado da seguinte forma:



Capítulo 2 Aborda as definições e premissas levadas em consideração durante a elaboração deste documento, com o objetivo de uniformizar o entendimento de seu conteúdo.



Capítulo 3 Trata do processo de medição, apresentando um fluxo de trabalho e o correspondente detalhamento das atividades que o compõem.



Capítulos 4 e 5 Aborda a forma de medição das atividades de desenvolvimento e de manutenção de sistemas, esta última sendo abordada por duas vertentes distintas (projetos e serviços de manutenção).



Capítulo 6 Conceitua e esclarece a forma de tratamento das alterações de escopo ocorridas durante os projetos de desenvolvimento e de manutenção de sistemas.



Capítulo 7 Explicita os itens que não são passíveis de medição pela técnica de Análise de Pontos de função e os critérios utilizados para definição de sua forma de remuneração (no que se aplicar).



Capítulo 8 Esclarece a forma de abordagem a ser aplicada a projetos ou serviços cancelados.



Referências Contém as referências bibliográficas utilizadas durante a elaboração deste documento.

332

Quaisquer sugestões de modificações para este documento deverão ser submetidas ao Grupo de Métricas do INEP, que analisará a pertinência da inclusão, no presente documento, dos itens sugeridos.

2 Definições e Premissas
Estão disponíveis nesta seção todas as definições e premissas levadas em consideração durante a elaboração deste documento, que são de vital importância para a uniformização do entendimento de seu conteúdo.

APF (Análise de Pontos de Função) Método padrão para medir sistemas prontos e projetos de desenvolvimento e manutenção de sistemas sob a perspectiva do usuário.

CPM (Counting Pratices Manual) Manual de Práticas de Contagem de pontos de função, mantido pelo IFPUG.

IFPUG (International Function Point Users Group) Grupo Internacional de Usuários de Pontos de Função.

Medição de serviços Tem por objetivo apurar o tamanho funcional de projetos de desenvolvimento, manutenção e aplicações em produção.

Fronteira da aplicação É a interface conceitual que delimita o software que será medido e o mundo exterior (seus usuários).

ALI (Arquivo Lógico Interno) Grupo de dados (ou informações de controle) logicamente relacionados, identificado pelo usuário

333

e mantido dentro da fronteira da aplicação.

AIE (Arquivo de Interface Externa) Grupo de dados (ou informações de controle) logicamente relacionados, identificado pelo usuário, referenciado pela aplicação, mas mantido dentro da fronteira de outra aplicação. Deverão ser considerados na complexidade de um AIE apenas os itens de dados e os registros lógicos referenciados pela aplicação que está sendo contada.

RLR (Registro Lógico Referenciado) É um subgrupo de dados elementares reconhecidos pelo usuário dentro de um ALI ou AIE.

Code data e code table Fornece uma lista de valores válidos de um atributo. Normalmente, esses atributos são código, descrição e/ou atributos-padrão que descrevem o código, como por exemplo: abreviação-padrão, data efetiva, data de término e data de auditoria. Tanto a code table quanto o code data são implementações de requisitos técnicos, podendo influenciar o tamanho técnico do produto, mas não o seu tamanho funcional. A diferença entre os dois conceitos é que uma code table nunca é mantida pelo usuário através da aplicação, sendo que um code data muitas vezes o é. Entretanto, nenhum dos dois pode ser considerado um ALI, um AIE ou um RLR.

Processo Elementar É a menor unidade de atividade significativa para o usuário. Deve ser completo em si mesmo, independente, e deixar o negócio da aplicação em estado consistente.

Um processo elementar pode ser de três tipos distintos:  Entrada Externa (EE) Processo elementar que processa dados (ou informações de controle) vindos de fora da fronteira da aplicação. A principal intenção de uma EE é manter um ou mais ALI e/ou alterar o comportamento do sistema.  Consulta Externa (CE) Processo elementar que envia dados ou informações de controle para fora da fronteira da aplicação. A principal intenção de uma CE é apresentar informação ao usuário por meio de uma simples recuperação de dados ou informações de controle de um ALI ou AIE. A lógica

334

de processamento não deve conter fórmula matemática ou cálculo, criar dados derivados, manter um ou mais ALI e/ou alterar o comportamento do sistema.  Saída Externa (SE) Processo elementar que gera dados ou informações de controle que saem pela fronteira da aplicação. A principal intenção de uma SE é apresentar dados ao usuário através de outra lógica de processamento que não apenas a recuperação de dados ou informações de controle. A lógica de processamento deve conter formula matemática ou cálculo, criar dados derivados, manter um ou mais ALI e/ou alterar o comportamento do sistema.

Lógica de Processamento É caracterizada pelos requisitos especificamente solicitados pelo usuário para completar um processo elementar, podendo conter uma das seguintes ações:              Validações; Cálculos e fórmulas matemáticas; Conversão em valores equivalentes; Filtragem e seleção de dados com base em critérios específicos, na comparação de vários conjuntos de dados; Análise de condições para determinar quais se aplicam; Atualização de, pelo menos, um ALI; Referência a, pelo menos, um ALI ou AIE; Recuperação de dados ou informações de controle; Criação de dados derivados; Alteração do comportamento do sistema; Preparação e apresentação de informações para fora da fronteira; Capacidade de aceitar dados ou informações de controle que entrem pela fronteira; Reclassificação ou reorganização de um grupo de dados.

A determinação do tipo e da unicidade de um processo elementar ocorre pela lógica de processamento vinculada a tal processo, e cada processo elementar pode incluir múltiplas alternativas ou ocorrências das ações acima.

Fator de Ajuste Indica a funcionalidade geral fornecida ao usuário da aplicação. É baseado na avaliação de 14 características gerais de sistemas que classificam as funcionalidades gerais da aplicação a ser contada.

Para as contagens de pontos de função disciplinadas por este documento deve ser adotado o

335

valor 1 (um), a título de fator de ajuste, para todos os tipos de medições realizadas.

Item de dado É um campo único, reconhecido pelo usuário e não repetido.

Observação: Quando apresentadas em consultas em tela ou em relatórios, listas que contêm números de página e números de registros que não tenham significado para o negócio não devem ser consideradas como itens de dados. Logo, não irão influenciar a complexidade nem o tipo de transação. Esses literais são recursos computacionais oferecidos por soluções de mercado (ver figura abaixo).

Histórico Registro de informações necessárias para prestação de contas (a órgãos externos, superiores ou processos internos) ou por exigência do próprio cenário de negócio. Sua existência é justificada pelo negócio, que sofre os impactos e conseqüências em caso de ausência de histórico. Na maioria das vezes, é considerado registro lógico do ALI relacionado.

Para fazer parte do tamanho funcional, deve ser solicitado formalmente pelo cliente e deverá existir funcionalidade de consulta a tais dados.

Log Registro de eventos cujo objetivo é possibilitar a monitoração dos recursos, bem como a auditoria do ambiente tecnológico.

336

O log não deve ser mensurado ou ratificado se for gerado de forma automática pelo SGBD (ou por outro recurso tecnológico como, por exemplo, o servidor de transações), pertencendo, portanto, ao âmbito da tecnologia.

Registro de evento Monitoração de eventos associados à navegação e/ou ao acesso às funcionalidades do sistema, para fins estatísticos ou de obtenção de indicadores de uso do aplicativo.

Para fazer parte do tamanho funcional, deve ser solicitado formalmente pelo cliente e deverá existir funcionalidade de consulta a tais dados.

Trilha de auditoria Constitui-se de um registro de eventos históricos pré-definidos (log), destinado a ações de apuração de ocorrências, devendo identificar quem realizou a ação, quando, onde e o que foi realizado.

Para fazer parte do tamanho funcional, deve ser solicitada formalmente pelo cliente e deverá existir funcionalidade de consulta a tais dados.

Consultas com SQL dinâmico São consultas com múltiplos filtros e parâmetros, que permitem a obtenção de um universo variado de resultados.

Devem ser consideradas como funções transacionais do tipo CE ou SE, independentemente da quantidade de resultados que gerarem. Para que a complexidade seja determinada, deverá ser considerado o cenário mais abrangente, com todos os possíveis itens de dados e arquivos referenciados.

Integração com o sistema de segurança do INEP A integração com o sistema de segurança pode ser realizada de quatro maneiras distintas: 1. A aplicação somente efetua leitura no sistema de segurança para autenticação do usuário e recuperação do perfil. Neste caso, devem ser contados dois AIE, sendo um para usuário/pessoa e outro para perfil.

337

2. A aplicação efetua a leitura no sistema de segurança apenas para autenticação do usuário. Neste caso, deve ser contado apenas um AIE (usuário/pessoa). 3. A aplicação efetua a leitura no sistema de segurança para autenticação, recuperação do perfil do usuário e registra trilha de auditoria/evento. Neste caso, devem ser contados dois AIE (usuário/pessoa e perfil) e o ALI de auditoria/evento. 4. A aplicação desenvolve suas próprias telas de logon. Neste caso, a contagem deve ser de acordo com as regras de negócio da aplicação. Poderá haver outros casos diferentes dos citados acima, cuja contagem deve ser previamente acordada com o Órgão.

Migração (conversão de dados) O conceito de migração abordado neste tópico pressupõe que foi desenvolvido um novo sistema (ou funcionalidade) para substituir um(a) já existente e, para que o novo sistema (ou funcionalidade) possa começar a ser utilizado, é necessário que haja a extração de dados do antigo e a carga destes dados no novo sistema.

Dentro da própria contagem do projeto, devido a uma migração, devem ser contadas as EEs que povoarão (conversão e gravação) a base de dados do novo sistema e as CEs/SEs referentes a relatórios sobre a conversão dos dados solicitados pelo gestor.

Normalmente, em uma migração, há uma entrada externa para cada grupo de dados sendo migrado. Porém, isso não é uma regra e as EEs devem ser contadas conforme a visão do usuário. Essas EEs englobam: a extração/leitura dos dados do sistema antigo, conversões destes dados (se for o caso) e a carga dos dados no novo sistema.

Os arquivos onde se encontram os dados do sistema antigo não devem ser contados como AIEs. As extrações dos dados do sistema antigo não devem ser contadas como CEs nem SEs.

Critérios de ordenação e agrupamento A lógica de processamento "reordenar ou reagrupar um conjunto de dados" não causa impacto na identificação do tipo ou unicidade da função transacional.

Exemplo 1: Caso existam duas funcionalidades de "Listar Instituições de Ensino", sendo que a primeira ordena pelo Nome da Instituição e a segunda ordena pelo Código da Instituição, será considerado apenas um processo elementar.

Exemplo 2: Por outro lado, a funcionalidade para "Listar Instituições de Ensino" que esteja

338

somente em ordem alfabética e, em uma manutenção evolutiva, o cliente solicite que a lista também possa ser ordenada por UF, esta mesma funcionalidade será contada como ALTERADA. Há uma mudança em sua lógica de processamento para permitir um novo parâmetro de ordenação.

As mesmas considerações acima são aplicáveis também para o caso de agrupamento de dados.

3 Processo de Medição

A medição de pontos de função será disciplinada pelo fluxo de atividades representadas no mapa de processos abaixo.

Para detalhes sobre este processo, consulte a seção específica que detalha os Processos de Medição de PF da Metodologia de Gestão e Desenvolvimento de Sistemas.

339

4 Desenvolvimento de Sistemas
Um projeto de desenvolvimento caracteriza-se pela construção de novos sistemas.

A partir do aceite da OS e entrada em produção, todas as modificações aplicadas ao produto deverão ser tratadas como manutenção. Também deverão ser tratadas como manutenção as eventuais modificações necessárias em um sistema existente para que este possa receber um novo módulo.

A Metodologia de Gestão e Desenvolvimento de Sistemas do INEP prevê a divisão dos projetos de desenvolvimento em unidades menores chamadas Sprints. Para cada Sprint corresponderá uma Ordem de Serviço.

Para efeito de cálculo do prazo em projetos de desenvolvimento, deverá ser considerado o fator de produtividade correspondente a 13 horas por ponto de função, independentemente da tecnologia adotada.

Para efeito de cálculo do custo, os projetos de desenvolvimento deverão ser medidos em, no mínimo, dois momentos distintos:   Medição estimativa ­ para embasar a formalização (abertura) da Ordem de Serviço. Medição detalhada ­ após a homologação do sprint, para embasar o processo de pagamento.

A medição estimativa dar-se-á pela aplicação da técnica de contagem estimativa NESMA, na qual as funções de dados (ALIs e AIEs) são classificadas como de baixa complexidade, enquanto as funções transacionais (EEs, CEs e SEs) são classificadas como de média complexidade.

A medição detalhada dar-se-á pela aplicação da técnica de contagem documentada no guia CPM, acrescida, no que se aplicar, de itens tratados no presente Guia de Contagem de Pontos de Função.

A documentação da contagem (tanto estimativa quanto detalhada) deverá obedecer ao modelo de planilha de pontos de função para desenvolvimento de sistemas, disponível na Metodologia de Gestão e Desenvolvimento de Sistemas do INEP.

5 Manutenção de Sistemas
Este item tem como propósito descrever os diversos tipos de manutenções de sistemas realizadas no INEP, com vistas a esclarecer e disciplinar a forma de tratamento de cada projeto no âmbito da

340

medição em pontos de função.

A Metodologia de Gestão e Desenvolvimento de Sistemas do INEP prevê a classificação da manutenção com base na quantidade estimada de pontos de função (PFs):  Manutenções cuja estimativa seja superior a 100 PFs deverão ser tratadas como um projeto, de forma análoga a um projeto de desenvolvimento, porém com as especificidades da manutenção. Deste ponto em diante, as manutenções estimadas em mais de 100 PFs serão denominadas "Projeto de Manutenção".  Manutenções estimadas em até 100 PFs deverão ser tratadas de forma simplificada, para garantir a agilidade no atendimento a demandas pequenas. Deste ponto em diante, as manutenções estimadas em até 100 PFs serão denominadas "Serviço de Manutenção".

5.1 Tipos de manutenção
Tanto os projetos quanto os serviços de manutenção poderão contemplar um ou mais dos itens a seguir:      Inclusão de funcionalidades; Alteração ou exclusão de funcionalidades; Adequações de regras de negócio provocadas por mudanças na legislação; Conversão (migração) de dados para carga inicial do sistema; Mudança de plataforma tecnológica ­ necessidade de migração de uma aplicação existente para outra plataforma. Exemplo: uma aplicação em Delphi que precise ser redesenvolvida em Java (do modo como está, sem mudança nos requisitos funcionais); Atualização de plataforma tecnológica ­ necessidade de adaptação de uma aplicação existente para executar em versões mais atuais de outra plataforma. Exemplos: atualização/mudança de framework de desenvolvimento, de sistema operacional, de SGBD ou de navegador web (do modo como está, sem mudança nos requisitos funcionais); Melhoria de aplicativos ­ necessidade de reconstrução de aplicativos para resolver problemas de banco de dados (normalização de tabelas, remoção de registros duplicados), de código-fonte (reescrita, refatoração), de aderência a padrões de Governo Eletrônico (EPING e E-MAG), sem mudança nos requisitos funcionais; Mudança de padrão visual ­ necessidade de adaptação dos aplicativos para refletir mudanças realizadas pela área de comunicação social no padrão visual do INEP, sem mudança nos requisitos funcionais. Correção de erros ­ um erro é caracterizado por funcionamento inesperado, motivado por defeitos não identificados pela equipe de testes (antes da entrega ao cliente) ou pelo cliente (quando da homologação da aplicação).









341

Não serão tratados como erros aqueles problemas reportados pelo cliente e que, após verificação, forem apurados como sendo mudanças nos requisitos homologados. Esses casos serão tratados como alteração de escopo e seguirão os trâmites previstos na Metodologia de Gestão e Desenvolvimento de Sistemas do INEP, com medição disciplinada pelo item 6 do presente documento.

5.2 Tipos de medição e cálculo do esforço
Para efeito de cálculo do prazo em projetos de manutenção, deverá ser considerado o fator de produtividade correspondente a 13 horas por ponto de função, independentemente da tecnologia adotada.

Para efeito de cálculo do custo, os projetos e serviços de manutenção serão medidos em, no mínimo, dois momentos distintos:   Medição estimativa ­ para embasar a formalização (abertura) da Ordem de Serviço; Medição detalhada ­ após a homologação da manutenção, para embasar o processo de pagamento.

A medição estimativa dar-se-á pela aplicação da técnica de contagem estimativa NESMA, na qual as funções de dados (ALIs e AIEs) são classificadas como de baixa complexidade, enquanto as funções transacionais (EEs, CEs e SEs) são classificadas como de média complexidade.

A medição detalhada dar-se-á pela aplicação da técnica de contagem documentada no guia CPM, acrescida, no que se aplicar, de itens tratados no presente Guia de Contagem de Pontos de Função.

O esforço será calculado através da aplicação de um percentual sobre o tamanho funcional do projeto ou serviço de manutenção, conforme a tabela abaixo, exceto para os itens não mensuráveis, tratados no item 7 do presente documento.

Tipo Inclusão de funcionalidade Alteração de funcionalidade Exclusão de funcionalidade

% dos PFs 100% 60% 25%

342

Conversão de dados Mudança de plataforma tecnológica Atualização de plataforma tecnológica Melhoria de aplicativos Mudança de padrão visual Correção de erros

30% 80% 40% 50% 10% 25%

As correções de erros que ocorrerem dentro do período de garantia não incorrerão em ônus em pontos de função.

Todas as manutenções deverão ser documentadas de acordo com os templates apropriados, disponíveis na Metodologia de Gestão e Desenvolvimento de Sistemas do INEP, visando apoiar a contagem de pontos de função da demanda.

A documentação da contagem deverá obedecer ao modelo de planilha de pontos de função para manutenção de sistemas, disponível na Metodologia de Gestão e Desenvolvimento de Sistemas do INEP.

6 Alteração de Escopo
Alteração de escopo é a mudança solicitada pelo cliente durante a execução de atividades de desenvolvimento de novo sistema ou de manutenção em um sistema existente.

6.1 Tipos de medição
As alterações de escopo deverão ser medidas em dois momentos distintos:   Medição estimativa ­ para embasar a autorização para execução da mudança. Medição detalhada ­ para embasar o processo de pagamento.

Tanto a medição estimativa como a medição detalhada serão obtidas pela aplicação da técnica de contagem detalhada, acrescida, no que couber, de itens tratados no Guia de Contagem de Pontos de Função do Inep.

A documentação da contagem estimativa da alteração de escopo deverá ser realizada na seção "Estimativa em pontos de função" da própria solicitação de mudança que originou a medição.

343

A documentação da contagem detalhada da alteração de escopo deverá ser realizada nas áreas apropriadas do modelo de planilha de pontos de função específico para o tipo de demanda atendida (desenvolvimento ou manutenção de sistemas). Tal modelo está disponível na Metodologia de Gestão e Desenvolvimento de Sistemas do INEP.

6.2 Bônus
Será pago um adicional de esforço a ser aplicado sobre o tamanho funcional da Solicitação de Mudança, a título de bônus, para cobrir o retrabalho ocasionado pela mudança em questão.

Com base nessa premissa, a fórmula para o cálculo dos pontos de função da alteração de escopo será a seguinte:

PFs da Mudança = PFs do Tamanho Funcional x PFs de Bônus

A aplicação de tal bônus ocorrerá SOMENTE para as mudanças requisitadas e aprovadas após a entrada em homologação da implementação do requisito original. Essa operação será disciplinada pela tabela a seguir, na qual os percentuais representam um acréscimo sobre o esforço dispendido na funcionalidade em atividades de desenvolvimento ou de manutenção de sistemas, conforme descrito nos itens 4 e 5 deste documento.

Natureza da Mudança Inclusão de Requisito Alteração de Requisito Exclusão de Requisito

PFs de Bônus (%) 0%
(1)

50% 25%

(1) Por tratar-se de inclusão de funcionalidade até então inexistente, o esforço a ser considerado não contempla retrabalho, não cabendo, portanto, aplicação de bônus.

O bônus (quando houver) será apurado quando da medição final da Ordem de Serviço, devendo ser documentado nas planilhas adequadas, de acordo com o tipo de demanda atendida

(desenvolvimento ou manutenção de sistemas).

344

Exemplos: 1. Supondo que a inclusão de uma funcionalidade "Consultar Instituição de Ensino" tenha sido solicitada pelo cliente:

Consultar Instituição de Ensino Antes da Mudança Complexidade -Tamanho Funcional Acréscimo Fórmula de Cálculo 3 PF 0% 3 PF x 0% de acréscimo 0 pontos de função PF 0 Depois da Mudança Complexidade Simples PF 3

Bônus a ser pago pela mudança

2. Supondo que a alteração de uma funcionalidade "Consultar Instituição de Ensino" tenha sido solicitada pelo cliente:

Consultar Instituição de Ensino Antes da Mudança Complexidade Simples Tamanho Funcional Acréscimo Fórmula de Cálculo 4 PF 50% 4PF x 50% de acréscimo 2 pontos de função PF 3 Depois da Mudança Complexidade Média PF 4

Bônus a ser pago pela mudança

3. Supondo que a exclusão de uma funcionalidade "Consultar Instituição de Ensino" tenha sido solicitada pelo cliente:

Consultar Instituição de Ensino

345

Antes da Mudança Complexidade Simples Tamanho Funcional Acréscimo Fórmula de Cálculo 3 PF 25% PF 3

Depois da Mudança Complexidade Média PF 3

3PF x 25% de acréscimo 0,75 pontos de função

Bônus a ser pago pela mudança

7 Itens não mensuráveis
Para calcular o esforço de atividades que não são passíveis de pontuação pela técnica da Análise de Pontos de Função será adotada a tabela de itens não mensuráveis conforme abaixo.

Os itens não mensuráveis serão convertidos em pontos de função para obtenção do tamanho do serviço. A medição é não cumulativa dentro da mesma funcionalidade, ou seja, caso uma funcionalidade possua itens mensuráveis e itens não mensuráveis (uma alteração no processo elementar e uma alteração de mensagens na mesma tela, por exemplo), apenas os itens mensuráveis deverão ser contados.

Os itens não mensuráveis serão apurados somente quando da realização da contagem final de pontos de função, devendo ser documentados na área apropriada do modelo de planilha de pontos de função específico para o tipo de demanda atendida (desenvolvimento ou manutenção de sistemas). Tal modelo está disponível na Metodologia de Gestão e Desenvolvimento de Sistemas do INEP.

346

# 1

Descrição TELAS ­ LEIAUTE

Pontuação 5% PF do

Contemplam as alterações referentes exclusivamente aos leiautes de telas, processo mudança de posição de campos em telas, relatórios ou leiaute de arquivos, elementar divisão de telas e/ou relatórios, sem que haja alteração em elementos de principal dados, arquivos referenciados ou informações de controle.

Serão considerados 5% do total de pontos de função do processo elementar principal da tela. Este percentual é não cumulativo, ou seja, caso duas ou mais alterações de layout sejam realizadas na mesma tela, o percentual será aplicado apenas uma vez.
Além disso, caso haja alteração no tamanho funcional do processo elementar, será considerado somente este para pontuação. 2 TELAS ­ ESTILO Contemplam as alterações exclusivamente nos leiautes de telas, no que se refere ao estilo, como por exemplo: mudança de cor, fonte (tipos de letras, maiúsculas/minúsculas) ou alteração de logomarca, sem que haja alteração em elementos de dados, arquivos referenciados ou informações de controle. Alterações deste tipo não serão consideradas na contagem de pontos de função. 3 MENUS Contemplam a necessidade de adição ou reestruturação de menus de navegação estáticos. Alterações deste tipo não serão consideradas na contagem de pontos de função, uma vez que a maior parte dos itens de menu estão contemplados na chamada de funções transacionais mensuráveis ou de páginas estáticas, contempladas pelo item 12 desta tabela. 0 PF 0 PF

347

4

CAMPOS DE BANCO DE DADOS

5%

PF

da de

Contemplam a inclusão, alteração ou exclusão de campos em tabelas, sem função que tenha havido mudança na funcionalidade (não sendo necessidade de dados. negócio e não tendo impacto na lógica de processamento). Contempla também mudança nas características do campo (tamanho, tipo,

nomenclatura). Serão considerados 5% do total de PF da função de dados. 5 RESTRIÇÕES E GATILHOS EM BANCO DE DADOS 5% PF da de

Contemplam a inclusão, alteração ou exclusão de constraints e triggers em função banco de dados, sem que tenha havido mudança na funcionalidade (não dados sendo necessidade de negócio e não tendo impacto na lógica de alterada. processamento). Serão considerados 5% do total de PF da função de dados alterada. 6 MENSAGENS

10% de 1 PF

Contemplam a necessidade de alterações de mensagens de retorno ao por grupo de usuário, desde que não acessem ALI ou AIE. Será considerado 10% de 1 ponto de função, por grupo de mensagens de um mesmo processo elementar. 7 PARÂMETROS DE PROCESSAMENTO 5% PF do mensagens.

Contemplam a necessidade de alteração dos valores dos parâmetros, sem processo que a lógica de processamento tenha sido alterada. (Exemplo: ajustar filtro elementar para recuperar dados entre 0 e 50 ao invés de valores entre 10 e 50). Serão considerados 5% do total de pontos de função do processo elementar principal da tela. principal

8 FORMA DE ORDENAÇÃO Contempla a mudança de ordenação de crescente para decrescente, ou vice-versa.
Serão considerados 5% do total de pontos de função do processo elementar alterado.

5% PF do processo elementar alterado

348

9

CODE DATA

20% PF da de ou

Contempla a necessidade de criação, alteração e exclusão de tabelas CODE função DATA mantidas pelo usuário e respectivas funcionalidades na aplicação. Serão considerados 20% do valor das funções de dados e/ou transacionais, caso fossem mensuráveis no tamanho funcional do projeto. 10 TABELAS NÃO MANTIDAS PELO USUÁRIO Contemplam tabelas que não são consideradas arquivos lógicos, arquivos de interface externa ou registros lógicos, não sendo mantidos pelo usuário. Por exemplo, tabelas temporárias, code tables não mantidas pelo usuário, tabelas de log não reconhecidas pelo usuário, dados de controle não reconhecidos pelo usuário, tabelas utilizadas para auxílio da tecnologia (sumários ou resumos). Dados deste tipo não serão considerados na contagem de pontos de função. 0 PF dados

transacionais

11 PROGRAMAS AUXILIARES Também conhecidos como apurações especiais, contemplam dois conceitos:  Rotinas auxiliares desenvolvidas pelos técnicos para alterar campos em determinados registros de tabelas do sistema a pedido do cliente (deve ser ressaltado que não se trata de um caso de defeito, e sim, uma alteração pontual, geralmente em registros apontados pelo cliente). Geração de relatórios e/ou arquivos, solicitados pelo cliente para identificar determinados registros na base para posterior acerto, ou geração de arquivos para popular massa de teste (que serão utilizados uma única vez).

50% de 1 PF



Serão considerados 50% de 1 ponto de função por programa auxiliar. 12

PÁGINAS ESTÁTICAS Contemplam a alteração, inclusão ou exclusão de páginas estáticas na aplicação, ou seja, que não possuem dados que atravessam a fronteira da aplicação.
Serão considerados 10% de 1 ponto de função por página alterada, incluída ou excluída.

10% de 1 PF

Caso seja identificado algum item não contemplado na tabela acima, deverá ser encaminhada

349

solicitação fundamentada ao Grupo de Métricas do INEP, que analisará a pertinência da inclusão, na referida tabela, de um novo item não mensurável.

8 Medição de projetos/serviços cancelados
A Metodologia de Gestão e Desenvolvimento de Sistemas do INEP prevê todas as fases necessárias à produção e entrega de software. No entanto, poderá haver situações em que, por razões adversas, um projeto ou serviço de manutenção tenha seu desenvolvimento interrompido, desencadeando a necessidade de apuração da quantidade de esforço até então dispendido, para fins de pagamento à prestadora.

Para esses casos, deverá ser realizada a contagem detalhada de todos os itens já executados (implementados em forma de código-fonte), para posterior validação e aceite pelo Inep.

Referências
IFPUG. Counting practices manual version 4.2.1, Princeton Junction, 2005.

VAZQUEZ, Carlos Eduardo, SIMÕES, Guilherme Siqueira, MACHADO, Renato. Análise de pontos de função: medição, estimativas e gerenciamento de projetos de software (cartão de referência). São Paulo: Érica, 2008.

Contagem antecipada de pontos de função (NESMA early FPA counting). Disponível em http://www.fattocs.com.br/traduzido/earlyfpa.asp#bm_Estimated_function_point_count. 13/10/2009. Acesso em

350

Encarte L ­ Modelo de Declaração de Propriedade Intelectual

(Declaração de propriedade intelectual, a ser apresentada juntamente com a proposta técnica)

Declaração de Propriedade Intelectual

Ao Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira ­ Inep Ref.: Edital Nº [ nnn ]/2010.

DECLARO, para os devidos fins, que todos os produtos e toda a propriedade intelectual advindos da prestação dos serviços pela empresa [razão social da empresa licitante], inscrita no CNPJ sob [CNPJ da empresa licitante], estabelecida na [endereço da empresa licitante], relativos ao Edital supracitado, serão de propriedade exclusiva do Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira ­ Inep.

[Cidade] ­ [UF], [dd/mm/aaaa].

[Nome do Representante da Empresa Licitante] [Cargo] / Telefone

351

Encarte M ­ Modelo de Planilha de Custos e Formação de Preços

Número do Processo: Licitação Nº Dia ______/______/______ às ____:_____ horas.

Discriminação dos serviços (dados referentes à contratação): 1. Data de apresentação da proposta (dia/mês/ano) 2. Município ­ Unidade Federativa 3. Ano do acordo, convenção ou sentença normativa em dissídio coletivo 4. Tipo de serviço 5. Unidade de medida 6. Quantidade (total) a contratar (em função da unidade de medida) 7. Número de meses da execução contratual

MÃO-DE-OBRA Mão-de-obra vinculada à execução contratual 1. Tipo de serviço 2. Tipo de serviço 3. ... 4. Tipo de serviço Quantidade de empregados necessários para a execução do serviço Quantidade de empregados necessários para a execução do serviço Quantidade de empregados necessários para a execução do serviço

Dados complementares para a composição dos custos referentes à mão-de-obra 5. Salário mínimo oficial vigente 6. Categoria profissional (vinculada à execução contratual) 7. Data-base da categoria (dia/mês/ano)
352

Nota: Informar os valores unitários por empregado I ­ REMUNERAÇÃO A ­ Salário Mensal B ­ Adicional Noturno C ­ Adicional de Periculosidade D ­ Adicional de Insalubridade E ­ Outros (especificar) TOTAL DA REMUNERAÇÃO 0,00% 0,00% 0,00% R$ R$ R$ R$ R$ R$

II ­ INSUMOS DE MÃO-DE-OBRA (*) A - Transporte B ­ Auxílio Alimentação (vales, cesta básica, etc) C ­ Uniformes / Equipamentos D ­ Assistência Médica E ­ Seguro de Vida F ­ Treinamento / Capacitação / Reciclagem G ­ Auxílio Funeral H ­ Outros (especificar) TOTAL DE INSUMOS DE MÃO-DE-OBRA R$ R$ R$ R$ R$ R$ R$ R$ R$

(*) O valor informado deverá ser o custo real do insumo (descontado o valor eventualmente pago pelo empregado).

ENCARGOS SOCIAIS E TRABALHISTAS Quadro com detalhamento de encargos sociais e trabalhistas. Notas (1) Esta tabela poderá ser adaptada às características do serviço contratado, inclusive adaptando rubricas e suas respectivas provisões e/ou estimativas, desde que devidamente
353

justificado. (2) As provisões constantes desta planilha poderão não ser necessárias em determinados serviços que não necessitem da dedicação exclusiva dos trabalhadores da CONTRATADA para com o Inep.

GRUPO A 01 ­ INSS 02 ­ SESI ou SESC 03 ­ SENAI ou SENAC 04 ­ INCRA 05 ­ Salário Educação 06 ­ FGTS 07 ­ Seguro Acidente do Trabalho 08 ­ SEBRAE Total do GRUPO A GRUPO B 09 ­ Férias 10 ­ Auxílio Doença 11 ­ Licença Maternidade 12 ­ Licença Paternidade 13 ­ Faltas Legais 14 ­ Acidente de Trabalho 15 ­ Aviso Prévio Trabalhado 16 ­ 13º Salário Total do GRUPO B GRUPO C 17 ­ Aviso Prévio Indenizado 18 ­ Indenização Adicional 0,00% 0,00% R$ R$
354

0,00% 0,00% 0,00% 0,00% 0,00% 0,00% 0,00% 0,00%

R$ R$ R$ R$ R$ R$ R$ R$ R$

0,00% 0,00% 0,00% 0,00% 0,00% 0,00% 0,00% 0,00%

R$ R$ R$ R$ R$ R$ R$ R$ R$

19 ­ Indenização (nas rescisões sem justa causa) Total do GRUPO C GRUPO D 20 ­ Incidência dos encargos do GRUPO A sobre os itens do GRUPO B GRUPO E 21 ­ Incidência dos encargos do GRUPO A sobre o item 17 do GRUPO C VALOR DOS ENCARGOS SOCIAIS (valor por extenso) (0,00%)

0,00%

R$ R$

0,00%

R$

0,00%

R$ R$

VALOR DA MÃO DE OBRA (Remuneração + Reserva Técnica + Encargos Sociais) (valor por extenso) (0,00%)

R$

DEMAIS CUSTOS I ­ DEMAIS COMPONENTES (incidentes sem valor de custo) A ­ Despesas Administrativas/Operacionais B ­ Previsão de Lucro Total dos Demais Componentes (valor por extenso) 0,00% 0,00% R$ R$ R$

355

TRIBUTOS Nota: O valor referente a tributos é obtido aplicando-se o percentual sobre o valor do faturamento. II ­ TRIBUTOS A ­ Tributos Federais (ISSQN, COFINS, PIS/PASEP), exceto IRPJ e CSLL B ­ Tributos Estaduais/Municipais (especificar) C ­ Outros tributos (especificar) Total de Tributos (valor por extenso) 0,00% 0,00% 0,00% R$ R$ R$ R$

INFRAESTRUTURA A SER DISPONIBILIZADA NO AMBIENTE DO INEP

III ­ INFRAESTRUTURA PARA USO DA MÃO-DE-OBRA VINCULADA À EXECUÇÃO CONTRATUAL NAS DEPENDÊNCIAS DO INEP A ­ Estações de Trabalho B ­ Impressoras e Suprimentos C ­ Licenças de sistemas operacionais e aplicativos D ­ Licenças de software antivírus E ­ Insumos diversos Total de Infraestrutura (valor por extenso) R$ R$ R$ R$ R$ R$

QUADRO RESUMO DA REMUNERAÇÃO DA MÃO-DE-OBRA Notas (1) D = A + B + C. (2) O valor da reserva técnica é obtido multiplicando-se o percentual sobre o subtotal da mão356

de-obra principal. I ­ MÃO-DE-OBRA VINCULADA À EXECUÇÃO CONTRATUAL (VALOR POR EMPREGADO ­ Valor Unitário) A ­ REMUNERAÇÃO B ­ ENCARGOS SOCIAIS C ­ INSUMOS DE MÃO-DE-OBRA D ­ SUBTOTAL E ­ RESERVA TÉCNICA Total de Mão-de-obra (valor por extenso) 0,00% 0,00% R$ R$ R$ R$ R$ R$

357

QUADRO RESUMO DO VALOR MENSAL DOS SERVIÇOS

II ­ VALOR MENSAL TOTAL REFERENTE À MÃO-DE-OBRA VINCULADA À EXECUÇÃO CONTRATUAL A ­ Mão-de-obra (vinculada à execução dos serviços) B ­ Insumos diversos (materiais / equipamentos / máquinas) C ­ Demais componentes D ­ Tributos E ­ Valor Mensal dos Serviços F ­ Valor por Unidade de Medida G ­ Valor Global da Proposta (*) R$ R$ R$ R$ R$ R$ R$

(*) Valor mensal dos serviços multiplicado pelo número de meses do contrato.

VALOR DO SERVIÇO Valor Unitário do Ponto de Função = R$ ______________,_____ ( valor por extenso ). Valor Global da Proposta = R$ ______________,_____ ( valor por extenso ).

Local e data

____________________________________________ Assinatura do Representante e Carimbo da Empresa

358

Encarte N ­ Modelo de Declaração de Proteção contra o Trabalho do Menor

Declaração de Proteção contra o Trabalhador do Menor

Modalidade de Licitação

Número

Declaramos, sob as penas da lei, em atendimento ao previsto no inciso XXXIII do art. 7º da Constituição Federal, que não empregamos menor de 18 anos em trabalho noturno, perigoso ou insalubre,

( ) nem menor de 16 anos. ( ) nem menor de 16 anos, salvo na condição de aprendiz, a partir de 14 anos.

Brasília, xx de xx de xxxx

____________________________________________________ RAZÃO SOCIAL CNPJ

NOME DO REPRESENTANTE LEGAL E ASSINATURA

359

Encarte O ­ Modelo de Declaração de Pleno Conhecimento e Atendimento às Exigências de Habilitação

Declaração de Pleno Conhecimento e Atendimento às Exigências de Habilitação

Modalidade de Licitação

Número

Declaramos sob as penas da lei, especialmente em face do disposto no inc. V do artigo 27 da Lei no 8.666/93 o pleno conhecimento e atendimento às exigências de habilitação, cientes das sanções factíveis de serem aplicadas a teor do art. 86 do mesmo diploma.

Brasília, xx de xx de xxxx

____________________________________________________ RAZÃO SOCIAL CNPJ

NOME DO REPRESENTANTE LEGAL E ASSINATURA

Observações: emitir em papel que identifique a licitante.
360

Encarte P ­ Modelo de Declaração de Inexistência de Fatos Impeditivos

Declaração de inexistência de fatos impeditivos a ser apresentada juntamente com os Documentos de Habilitação.

Declaração de Inexistência de Fatos Impeditivos

Modalidade de Licitação

Número

DECLARO, sob as penalidades da Lei, que quanto à empresa abaixo qualificada, interessada em participar do Pregão nº 11/2010, inexiste até a presente data, qualquer fato impeditivo à habilitação para participar da licitação em apreço, estando ciente da obrigatoriedade de declarar ocorrências posteriores ao Inep. Nome (Razão Social): CNPJ: Telefone e Fax: Contato: Endereço: CEP:

Local e Data.

___________________________________________ [Nome do Representante da Empresa Emitente] Cargo

361

Encarte Q ­ Modelo de Apresentação da Proposta de Preços

Carta de Apresentação da Proposta de Preço

Ao Pregoeiro/Equipe de Apoio do Inep Referente ao Edital Pregão Eletrônico Nº 11/2010

Prezados Senhores,

Apresentamos a V.Sª, nossa proposta para a execução dos serviços técnicos de desenvolvimento e manutenção de sistemas para o Inep na área de tecnologia da informação, pelo preço mensal de R$___________ (_____________), perfazendo um valor total anual de R$___________ (_____________), nos termos do Edital, da Planilha de Custos e das Planilhas de Apoio para a Formação de Preços, em anexo. O prazo de validade de nossa proposta é de 60 (sessenta) dias corridos, contados da data da abertura da licitação. Declaramos que estamos de pleno acordo com todas as condições estabelecidas no Edital e seus anexos, bem como aceitamos todas as obrigações e responsabilidades especificadas no TERMO DE REFERÊNCIA. Caso nos seja adjudicado o objeto da licitação, comprometemos-nos a assinar o Contrato no prazo determinado no documento de convocação, e para esse fim fornecemos os seguintes dados: Razão Social: ______________________________________________________ CNPJ: _____________________ Endereço: _________________________________________________________
362

Telefone/Fax: _______________ CEP: ____________________ Cidade: ____________________ UF: __________ Banco: __________________ Agência: _______________ nº C/C: ____________

Dados do Representante Legal da Empresa para assinatura do Contrato: Nome: ____________________________________________________________ Endereço: _________________________________________________________ CEP: __________________ Cidade: ________________________ UF: ________ CPF: ________________________ Cargo/Função: ________________________ RG nº: _______________________________ Expedido por: _________________ Naturalidade: ____________________ Nacionalidade: ______________________

Local e Data.

___________________________________________ [Nome do Representante da Empresa Emitente] Cargo

1. Planilha de Custos Valor Unitário (R$) APF Desenvolvimento e manutenção de sistemas

Código Natureza do serviço

Quantidade de pontos por função 20.000

Valor Global (R$)

363

PREÇO GLOBAL DOS SERVIÇOS POR ANO: O Preço Global Anual para execução do contrato é de: R$ _______,___ (por extenso). Declaramos que, nos preços cotados, estão incluídas todas as despesas que, direta ou indiretamente, fazem parte da prestação dos serviços, tais como gastos da empresa com suporte técnico e administrativo, impostos, seguro, taxas, ou quaisquer outros que possam incidir sobre gastos da empresa, sem quaisquer acréscimos em virtude de expectativa inflacionária e deduzidos os descontos eventualmente concedidos.

Local e Data.

___________________________________________ [Nome do Representante da Empresa Emitente] Cargo

364

2. Planilhas de Apoio para a Formação de Preços Observação: incluir a Planilha de Custos e Formação de Preços, conforme modelo do Anexo XIII para cada um dos perfis de serviço.

Local e Data. ___________________________________________ [Nome do Representante da Empresa Emitente] Cargo

365

Encarte R ­ Modelo de Relatório Mensal de Ordens de Serviço

Relatório de Ordens de Serviço do Mês de [Nome do mês] Contrato Nº [nº do contrato] Nome do Sistema {nome do sistema} {nome do sistema} {nome do sistema} Tipo da OS {desenvolvimento} {manutenção} {garantia} Nº da OS {nnnnnn} {nnnnnn} {nnnnnn} Período de Apuração: de [dd/mm/aaaa] a [dd/mm/aaaa] Data do Aceite {dd/mm/aaa} {dd/mm/aaa} {dd/mm/aaa} Tamanho (em PFs)* {nnnnnnn} {nnnnnnn} 0 Valor (em R$) {nnn,nn} {nnn,nn} 0,00

Totais: (*) PFs = Pontos de Função

{nnnnnnn} PFs

R$ {nnn,nn}

366

MINISTÉRIO DA EDUCAÇÃO INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA ­ INEP DIRETORIA DE GESTÃO E PLANEJAMENTO COORDENAÇÃO-GERAL DE RECURSOS LOGÍSITICOS, AQUISIÇÕES E CONVÊNIOS SRTVS Quadra 701, Bloco M, Asa Sul, Ed. Sede do Inep, 2º Andar. CEP: 70340-909 CNPJ. 01.678.363/0001-43 (61) 2022-3236 / 3240 / 3235 ­ Fax. 2022-3249 e-mail: pregao@inep.gov.br

PREGÃO ELETRÔNICO Nº 11/2010 DTDIE/INEP

ANEXO "II"

DECLARAÇÃO DE ELABORAÇÃO INDEPENDENTE DE PROPOSTA

367

MINISTÉRIO DA EDUCAÇÃO INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA ­ INEP DIRETORIA DE GESTÃO E PLANEJAMENTO COORDENAÇÃO-GERAL DE RECURSOS LOGÍSITICOS, AQUISIÇÕES E CONVÊNIOS SRTVS Quadra 701, Bloco M, Asa Sul, Ed. Sede do Inep, 2º Andar. CEP: 70340-909 CNPJ. 01.678.363/0001-43 (61) 2022-3236 / 3240 / 3235 ­ Fax. 2022-3249 e-mail: pregao@inep.gov.br

MODELO DE DECLARAÇÃO DE ELABORAÇÃO INDEPENDENTE DE PROPOSTA Pregão Eletrônico nº DTDIE / INEP (------------------------------), como representante devidamente constituído de (identificação completa da licitante ou consórcio), doravante denominada (licitante/consórcio), para o fim do disposto no item (completar) do Edital (completar com identificação do edital), declara, sob as penas da lei, em especial o art. 299 do Código Penal Brasileiro, que: a) A proposta apresentada para participar da (identificação da licitação), foi elaborada de maneira independente (pelo licitante/consórcio), e o conteúdo da proposta não foi, no todo ou em parte, direta ou indiretamente, informado, discutido ou recebido de qualquer outro participante potencial ou de fato da (identificação da licitação), por qualquer meio ou qualquer pessoa; b) A intenção de apresentar a proposta elaborada para participar da (identificação da licitação) não foi informada, discutida ou recebida de qualquer outro participante potencial ou de fato da (identificação da licitação), por qualquer meio ou qualquer pessoa; c) Que não tentou, por qualquer meio ou qualquer pessoa, influir na decisão de qualquer outro participante potencial ou de fato da (identificação da licitação) quanto à participar ou não da referida licitação; d) Que o conteúdo da proposta apresentada para participar da (identificação da licitação) não será, no todo ou em parte, direta ou indiretamente, comunicado ou discutido com qualquer outro participante potencial ou de fato da (identificação da licitação) antes da adjudicação do objeto da referida licitação; e) Que o conteúdo da proposta apresentada para participar da (identificação da licitação) não foi, no todo ou em parte, direta ou indiretamente, informado, discutido ou recebido de qualquer integrante de (órgão licitante) antes da abertura oficial das propostas; e f) Que está plenamente ciente do teor e da extensão desta declaração e que detém plenos poderes e informações para firmá-la. ----------------, em-----de--------------------------de------_______________________________________ (representante legal do licitante/consórcio, no âmbito da licitação, com identificação completa) 11/2010

368

MINISTÉRIO DA EDUCAÇÃO INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA ­ INEP DIRETORIA DE GESTÃO E PLANEJAMENTO COORDENAÇÃO-GERAL DE RECURSOS LOGÍSITICOS, AQUISIÇÕES E CONVÊNIOS SRTVS Quadra 701, Bloco M, Asa Sul, Ed. Sede do Inep, 2º Andar. CEP: 70340-909 CNPJ. 01.678.363/0001-43 (61) 2022-3236 / 3240 / 3235 ­ Fax. 2022-3249 e-mail: pregao@inep.gov.br

PREGÃO ELETRÔNICO Nº 11/2010 DTDIE/INEP

ANEXO "III"

MINUTA DE CONTRATO

369

MINISTÉRIO DA EDUCAÇÃO INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA ­ INEP DIRETORIA DE GESTÃO E PLANEJAMENTO COORDENAÇÃO-GERAL DE RECURSOS LOGÍSITICOS, AQUISIÇÕES E CONVÊNIOS SRTVS Quadra 701, Bloco M, Asa Sul, Ed. Sede do Inep, 2º Andar. CEP: 70340-909 CNPJ. 01.678.363/0001-43 (61) 2022-3236 / 3240 / 3235 ­ Fax. 2022-3249

M I N U T A DO CONTRATO
PROCESSO N.º 23036.000324/2010-16 CONTRATO QUE ENTRE SI CELEBRAM, DE UM LADO, O INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA - INEP E, DE OUTRO, A EMPRESA ................, PARA OS FINS QUE ESPECIFICA.

CONTRATO Nº

/2010.

O INSTITUTO NACIONAL DE ESTUDOS E PESQUISAS EDUCACIONAIS ANÍSIO TEIXEIRA - INEP, Autarquia Federal vinculada ao Ministério da Educação, conforme a Lei nº 9.448/97, inscrito no CNPJ/MF sob o nº 01.678.363/0001-43, com sede no SRTVS Quadra 701, Bloco M, Asa Sul, Ed. Sede do Inep, Brasília-DF, neste ato representado por seu Presidente, Sr. JOAQUIM JOSÉ SOARES NETO, nomeado pela Portaria CC/PR nº 634/09, publicada no Diário Oficial de 04/01/2010, portador da Carteira de Identidade nº 514.041, SSP/SP, CPF nº 355.925.271-34, residente e domiciliado nesta capital, na qualidade de CONTRATANTE, e de outro lado, a ......................, na qualidade de CONTRATADA, como passa a ser doravante designada, inscrita no CNPJ/MF sob o n° .................., sediada na ......................CEP ............, cidade de............., representada por seu ............., ........................, ....................., .............., portador da carteira de identidade n° ........... ­ ......., e CPF/MF n° .............., resolvem celebrar o presente Contrato, com amparo no processo nº 23036.003095/2009-58, com fundamento na Lei nº 10.520, de 17 de julho de 2002, pelo Decreto nº 3.555, de 8 de agosto de 2000, alterado pelos Decretos nº 3.693, de 20 de dezembro de 2000 e nº 3.784, de 6 de abril de 2001, Decreto nº 5.450, de 31 de maio de 2005, Lei Complementar nº 123, de 2006, Decreto nº 6.204/2007, Lei nº 8.078/90 ­ Código de Defesa do Consumidor, IN-MPOG nº 02, de 30 de abril de 2008, e suas alterações posteriores, IN-MPOG nº 4, de 19 de maio de 2008, IN-MPOG nº 01, de 20 de janeiro de 2010, e demais legislações correlatas, aplicando-se subsidiariamente, no que couber, as disposições da Lei nº 8.666, de 21 de junho de 1993, com suas alterações, e pelas Cláusulas e condições seguintes:

370

CLÁUSULA PRIMEIRA ­ DO OBJETO Constitui objeto do presente instrumento a contratação de prestação de serviços técnicos de Tecnologia da Informação, compreendendo o desenvolvimento e manutenção de sistemas de informação, de acordo com as especificações, padrões técnicos de desempenho e qualidade estabelecidos pelo INEP, mediante ordens de serviço dimensionadas pela métrica de pontos de função, em regime de fábrica de software, limitada ao quantitativo máximo de 20.000 (vinte mil) pontos de função anuais, sem garantia de consumo mínimo, conforme quantidade e especificações mínimas do Termo de Referência e seus Encartes que integram desde logo este Contrato e proposta da Contratada datada de ___/___/___. CLÁUSULA SEGUNDA ­ DA VINCULAÇÃO Vincula-se ao Edital do Pregão Eletrônico n° 11/2010 ­ DTDIE/INEP, nos termos do Processo nº 23036.000324/2010-16, bem como à Proposta da CONTRATADA datada de... de ............ de 2010. CLÁUSULA TERCEIRA ­ DO LOCAL DE EXECUÇÃO DOS SERVIÇOS Os serviços serão executados nas instalações do Inep, no Setor de Rádio e TV Sul, Quadra 701, Bloco M, Edifício Sede do Inep, em Brasília ­ DF. Eventualmente, o Inep poderá solicitar a execução de serviços fora de suas instalações, no ambiente da CONTRATADA. CLÁUSULA QUARTA ­ FORMA DE EXECUÇÃO DOS SERVIÇOS A forma de execução deste contrato será a execução indireta, com medição por resultados. Parágrafo Primeiro ­ Os serviços serão remunerados com base no preço unitário do ponto de função da CONTRATADA, multiplicado pelo total de pontos de função da Ordem de Serviço. Parágrafo Segundo ­ Todas as regras de condução da execução dos serviços estão descritas na Metodologia de Gestão e Desenvolvimento de Sistemas do Inep, anexa ao Termo de Referência. CLÁUSULA QUINTA ­ DA TRANSFERÊNCIA DE TECNOLOGIA Ao término do contrato, seja por decurso de vigência ou por rescisão antecipada, a CONTRATADA fica obrigada a promover a transição contratual com transferência de tecnologia e técnicas empregadas, sem perda de informações, capacitando, se solicitado, os técnicos do Inep ou os da nova pessoa jurídica que continuará a execução dos serviços.

371

CLÁUSULA SEXTA ­ DAS OBRIGAÇÕES DAS PARTES As partes são obrigadas a cumprir fielmente o presente contrato. Parágrafo Primeiro ­ ALÉM DE OUTRAS OBRIGAÇÕES PREVISTAS NESTE CONTRATO, O INEP OBRIGA-SE A: a) Permitir ao pessoal técnico da CONTRATADA, desde que identificado e incluído na relação de técnicos autorizados, o acesso às dependências do Órgão, respeitadas as normas de segurança vigentes; b) Disponibilizar instalações físicas, ramais telefônicos, mobiliário e a infraestrutura tecnológica aos profissionais da CONTRATADA, quando a execução dos serviços desta contratação for realizada nas instalações do Inep, à exceção das subalíneas i, ii, iii, iv e v descritos na alínea b, Parágrafo Segundo desta Cláusula; c) Notificar a CONTRATADA quanto a defeitos ou irregularidades verificados na execução dos serviços objeto deste Contrato, bem como quanto a qualquer ocorrência relativa ao comportamento de seus técnicos, quando em atendimento, que venha a ser considerado prejudicial ou inconveniente para o Inep; d) Comunicar à CONTRATADA a necessidade de substituição de qualquer profissional que seja considerado inadequado para o exercício da função; e) Efetuar os pagamentos devidos à CONTRATADA, na forma convencionada, dentro do prazo previsto, desde que atendidas às formalidades necessárias, após a aceitação dos serviços faturados; f) Verificar a regularidade da situação fiscal e dos recolhimentos sociais trabalhistas da CONTRATADA, conforme determina a Lei, antes de efetuar o pagamento devido; g) Promover a fiscalização do contrato, sob os aspectos quantitativos e qualitativos, anotando em registro próprio as falhas detectadas e exigindo as medidas corretivas necessárias, bem como acompanhar o desenvolvimento do contrato, conferir os serviços executados e atestar os documentos fiscais pertinentes, podendo ainda sustar, recusar, mandar fazer ou desfazer qualquer procedimento que não esteja de acordo com os termos contratuais; h) Comunicar tempestivamente à CONTRATADA irregularidades detectadas na execução dos serviços; as possíveis

i) Emitir, antes da execução de qualquer serviço, sua respectiva Ordem de Serviço (OS); j) Homologar os serviços prestados de acordo com os requisitos preestabelecidos nas OS, atestando as respectivas faturas; k) Fornecer à CONTRATADA, em tempo hábil, as informações necessárias e relevantes à consecução dos serviços a serem executados, bem como a

372

documentação técnica e operacional de todos desenvolvidos, descritos no Termo de Referência;

os

sistemas

já

l) Especificar e estabelecer normas e diretrizes para a execução dos serviços ora contratados, definindo as prioridades, regras, bem como os prazos e etapas para cumprimento das obrigações; m) Aplicar as penalidades previstas para o caso de não cumprimento de cláusulas contratuais ou aceitar as justificativas apresentadas pela CONTRATADA; n) Comunicar, por escrito, à CONTRATADA, as modificações realizadas na MGDS e seus anexos ou no ambiente computacional do Inep, que impliquem em mudanças no desenvolvimento e manutenção de aplicativos, e estipular prazos para adequação. Parágrafo Segundo ­ ALÉM DE OUTRAS OBRIGAÇÕES PREVISTAS NESTE CONTRATO, A CONTRATADA OBRIGA-SE A: a) Designar um profissional de seu quadro para atuar como Preposto nas dependências do Inep, com a responsabilidade pela gestão dos aspectos administrativos, legais e técnicos do contrato, relacionando-se diretamente com o Gestor do Contrato e com os Gerentes de Projetos do Inep; b) Disponibilizar, nas instalações fornecidas pelo Inep, a seguinte infraestrutura para seus profissionais atuarem nos serviços desta contratação: i. Uma estação de trabalho completa para cada profissional alocado, com configuração de hardware e software adequada às necessidades dos serviços desta contração e compatível com o ambiente computacional do Inep citado no Encarte D do Termo de Referência; ii. Impressoras, com os respectivos suprimentos, em quantidades adequadas ao tamanho da equipe de profissionais e dimensionadas para atender à demanda necessária de impressão; iii. Softwares e licenças, necessários ao desempenho das atividades relacionadas aos serviços desta contratação (quando não for utilizado software gratuito), que deverão ser disponibilizados em conformidade com o padrão do ambiente computacional do Inep e em compatibilidade com as ferramentas utilizadas no Órgão; iv. Licenças de antivírus para cada estação de trabalho do mesmo fabricante e versão utilizada na rede corporativa de dados do Inep; v. Equipe de suporte de hardware e software, capaz de manter essa infraestrutura completamente operacional, de forma a garantir o desempenho satisfatório da equipe técnica alocada aos serviços deste Contrato.

373

c) Responsabilizar-se pelo pagamento das faturas dos ramais telefônicos disponibilizados aos seus profissionais alocados aos serviços desta contratação; d) Selecionar, designar e manter em sua equipe profissionais cuja qualificação esteja em conformidade com os requisitos definidos no Termo de Referência, no item Qualificação profissional para a prestação dos serviços; i. Os profissionais deverão ser contratados obrigatoriamente pelo regime da CLT, de forma a assegurar-se os benefícios trabalhistas decorrentes.

e) Apresentar, para cada profissional alocado aos serviços desta contratação, os currículos e comprovantes de formação, de capacitação e de certificação técnica (se obrigatória), conforme previsto no Termo de Referência, no item Qualificação profissional para a prestação dos serviços; f) Capacitar a equipe técnica alocada aos serviços desta contratação sempre que se fizer necessário, considerando a evolução tecnológica ou mudança de tecnologia realizada pelo Inep em seu ambiente computacional; g) Cumprir integralmente as especificações e prazos definidos na OS, garantindo a qualidade dos produtos e serviços entregues e mantendo a conformidade com a MGDS do Inep; h) Manter consistência entre os modelos de dados desenvolvidos e o modelo de dados corporativo do Inep; i) Solicitar autorização prévia do Inep antes de utilizar recursos de software que necessitem de aquisição de licença de uso ou antes de utilizar ferramentas cuja versão seja diferente daquelas previstas e em uso no Inep; j) Não instalar equipamentos de rede, como, por exemplo, roteadores e switches, nas dependências do Inep; k) O Inep terá ampla liberdade de atualizar seu ambiente computacional, segundo sua necessidade e conveniência administrativa, cabendo, nestes casos, à CONTRATADA manter a compatibilidade, evoluindo e adaptando-se à respectiva mudança, às suas expensas, sem quaisquer custos adicionais para o Inep e dentro do prazo estipulado; l) Adequar-se, dentro do prazo estipulado pelo Inep, às modificações realizadas na MGDS e seus anexos, que impliquem em mudanças no desenvolvimento e manutenção de aplicativos; m) Garantir a execução dos serviços sem interrupção, substituindo, caso necessário, sem ônus para o Inep, qualquer técnico que tenha faltado ao serviço ou que esteja em gozo de férias, auxílio doença, auxílio maternidade ou qualquer outro benefício legal;

374

n) Cumprir as atividades inerentes ao contrato com técnicos altamente especializados, assumindo total e exclusiva responsabilidade pelo cumprimento integral do objeto desta contratação; o) Admitir, administrar, coordenar e avaliar, sob sua responsabilidade, os técnicos necessários à prestação dos serviços desta contratação, obrigando-se também por todos os tributos, impostos, encargos (trabalhistas ou não), incluindo toda e qualquer verba rescisória, além de todas as taxas que se apliquem ao seu ramo de atuação; p) Apresentar, em conjunto com a fatura de serviços mensais, os comprovantes de regularidade da situação fiscal, conforme determina o inciso XIII do art. 55 da Lei nº 8.666/93; q) Informar ao Inep, para efeito de controle de acesso às dependências do Órgão, o nome e o respectivo número da carteira de identidade dos empregados que farão parte da equipe técnica alocada aos serviços desta contratação, bem como ocorrências de afastamento definitivo e as substituições em casos de falta, ausência legal ou férias; r) Substituir qualquer um dos técnicos alocados aos serviços desta contratação, cuja atuação, permanência ou comportamento tenham sido julgados prejudiciais e inconvenientes à execução dos serviços ou às normas do Inep; s) Encaminhar, sempre que houver substituição de um profissional da equipe técnica, o currículo e os comprovantes de formação, de capacitação e de certificação técnica (se obrigatória) do profissional substituto, mantendo a conformidade com os requisitos definidos no Termo de Referência, no item Qualificação profissional para a prestação dos serviços; t) Prestar as informações e os esclarecimentos solicitados, no prazo máximo de 48 (quarenta e oito) horas, a contar da solicitação feita pelo Gestor do Contrato no Inep; u) Responder por quaisquer prejuízos que seus empregados ou preposto causarem ao Inep ou a terceiros, decorrentes de ação ou omissão culposa, procedendo imediatamente os reparos ou indenizações cabíveis e assumindo o ônus e a responsabilidade decorrente; v) Aceitar, nas mesmas condições contratadas, os acréscimos ou supressões que se fizerem necessários, até o limite de 25% (vinte e cinco por cento) do valor atualizado do contrato; w) Levar imediatamente ao conhecimento do Gestor do Contrato no Inep qualquer fato extraordinário ou anormal que ocorrer na execução dos serviços contratados; x) Responsabilizar-se sobre todos os atos de seus técnicos, relacionados ao manuseio de arquivos de dados, sistemas computadorizados, software e equipamentos de propriedade do Inep; y) Não transferir a outrem, no todo ou em parte, o objeto da presente contratação;
375

z) Sob pena de rescisão contratual, não caucionar ou utilizar o contrato para qualquer operação financeira, sem prévia e expressa anuência do Inep; aa)Manter, durante toda a vigência do contrato, as condições de habilitação e de qualificação exigidas no processo licitatório; bb)Ao término do contrato, seja por decurso de vigência ou por suspensão/cancelamento, promover a transição contratual com transferência de tecnologia e técnicas empregadas, sem perda de informações, capacitando, se solicitado, os técnicos do Inep ou da nova pessoa jurídica que continuará a execução dos serviços. CLÁUSULA SÉTIMA ­ DO VALOR O INEP pagará à CONTRATADA o valor global de R$ XXXX,XX (XXX), sendo o valor do ponto de função de R$ XXXX,XX (XXXX). CLÁUSULA OITAVA ­ DOS CRÉDITOS ORÇAMENTÁRIOS Os recursos para atender as despesas decorrentes do presente Contrato, no exercício de 2010, estão consignados no Orçamento do INEP, correndo à conta do Programa de Trabalho 021112, Fonte de Recursos 0112, Natureza de Despesa 339039, tendo sido emitida a Nota de Empenho nº ____2010NE_____, de xx/xx/xx, no valor de R$ _________ (_______) em favor da Contratada. CLÁUSULA NONA ­ DO REAJUSTE Os valores estipulados neste Contrato são fixos e irreajustáveis. CLÁUSULA DEZ ­ DAS CONDIÇÕES E PRAZO DE PAGAMENTO Para a realização do pagamento, a Contratada deverá atender às exigências do art. 36 da IN SLTI nº 2/2008, além de fazer constar da nota fiscal/fatura emitida, sem rasura, em letra legível, o nome do banco, o número da agência e da respectiva conta bancária. Parágrafo Primeiro ­ O pagamento será realizado em moeda corrente, mediante emissão de ordem bancária para crédito em conta da licitante vencedora, até o 5º dia útil do mês subsequente ao do aceite da nota fiscal/fatura. Parágrafo Segundo ­ Para realização do pagamento será necessária a apresentação de Nota Fiscal pela Contratada, devidamente atestada pela Diretoria de Tratamento e Disseminação de Informações Educacionais - DTDIE. Parágrafo Terceiro ­ No caso de incorreção no documento de cobrança, este será restituído à CONTRATADA para as correções solicitadas. O prazo de pagamento será contado a partir da data da regularização do serviço ou do documento fiscal, a depender do evento, não respondendo o INEP por quaisquer encargos resultantes de atrasos na liquidação dos pagamentos correspondentes. Parágrafo Quarto ­ O pagamento será realizado através de ordem Bancária, ao
376

Banco e em conta e agência bancária a ser especificada pela CONTRATADA. Parágrafo Quinto ­ Respeitadas as condições previstas nos parágrafos precedentes deste Contrato, em caso de atraso de pagamento, motivado pelo INEP, o valor devido deverá ser acrescido de atualização financeira, e sua apuração se fará desde a data de seu vencimento até a data do efetivo pagamento, em que os juros de mora serão calculados à taxa de 0,5% (meio por cento) ao mês, ou 6% (seis por cento) ao ano, mediante aplicação das seguintes formulas: I = (TX /100) 365 EM = I x N x VP, onde: I = Índice de atualização financeira; TX = Percentual da taxa de juros de mora anual; EM = Encargos moratórios; N = Número de dias entre a data prevista para o pagamento e a do efetivo pagamento; VP = Valor da parcela em atraso. Parágrafo Sexto ­ Este Contrato se adequará de pronto às condições que vierem ser estabelecidas pelo Poder Executivo ou Legislativo. Parágrafo Sétimo ­ A irregularidade Fiscal da CONTRATADA ensejará a suspensão do pagamento, limitada a 30 (trinta) dias a contar do recebimento da notificação pela CONTRATADA, após o que, em não havendo regularização, o contrato poderá ser rescindido de pleno direito Parágrafo Oitavo ­ O INEP não acatará a negociação de duplicatas com bancos ou outras instituições financeiras. Parágrafo Nono ­ Em cumprimento ao estabelecido na legislação em vigor, a Coordenação-Geral de Orçamento, Finanças e Contabilidade do INEP reterá na fonte os tributos pertinentes às áreas federal, estadual, distrital ou municipal, e previdenciários que incidirem sobre os pagamentos que efetuar a pessoa jurídica, conforme o caso. I Caso a CONTRATADA seja optante pelo Sistema Integrado de Pagamento de Impostos e Contribuições das Microempresas e Empresas de Pequeno Porte ­ SIMPLES, deverá apresentar, juntamente com a Nota Fiscal/Fatura, a devida comprovação, a fim de evitar a retenção na fonte dos tributos e contribuições, em conformidade com a Lei nº 9.317, de 1996, e com a Lei Complementar nº 123, de 2006. Parágrafo Décimo ­ Poderá ser deduzida do valor da Nota Fiscal/Fatura, multa
377

imposta pelo INEP, se for o caso. Parágrafo Décimo Primeiro ­ Antes de efetuar qualquer pagamento será verificada a regularidade da CONTRATADA junto ao Sistema Unificado de Cadastro de Fornecedores ­ SICAF, SIAFI e CADIN, mediante consulta "on line", cujos documentos serão anexados ao processo de pagamento. CLÁUSULA ONZE­ DA VIGÊNCIA DO CONTRATO A vigência deste contrato será de 12 (doze) meses, prorrogáveis por iguais e sucessivos períodos, limitada a sessenta meses, conforme previsto no inciso II do art. 57, da Lei nº 8.666/1993. CLÁUSULA DOZE ­ DAS SANÇÕES ADMINISTRATIVAS Mensalmente, de acordo com a Nota Mensal de Avaliação (NMA) obtida, conforme subitem 6.2 do Termo de Referência, e garantida prévia defesa à Contratada, o Inep aplicará as seguintes penalidades: I - Sempre que a NMA for maior ou igual a 6,0 e menor que 8,0 ­ a Contratada receberá advertência; II - Sempre que a NMA for menor que 6,0 ­ a Contratada receberá multa de 2% (dois por cento) sobre o valor faturado no mês de sua aplicação, após o que será zerado o contador de advertências; III - Sempre que a Contratada acumular duas advertências, receberá multa de 2% (dois por cento) sobre o valor faturado no mês de sua aplicação; IV - Quando a Contratada receber quatro multas no decorrer de um ano, estará caracterizada a inexecução contratual, ensejando a sua rescisão. Parágrafo Primeiro ­ As deduções de valores relativos a multas serão efetuadas na fatura do mês subsequente à apuração da NMA que motivou a aplicação da penalidade financeira. Parágrafo Segundo ­ Se, ao término do contrato, após o pagamento da última fatura, ainda houver penalidade financeira a aplicar, o valor de tal penalidade será descontado da garantia contratual. Parágrafo Terceiro ­ Os primeiros noventa dias após a emissão da primeira Ordem de Serviço do contrato serão considerados como período de adaptação e ajustes. Nesse período, a Nota Mensal de Avaliação (NMA) será calculada para fins de histórico, porém não incidirão penalidades. Parágrafo Quarto - Em caso de inexecução parcial ou total do objeto contratado, o Inep poderá aplicar as seguintes penalidades: a) Multa de 10% (dez por cento) sobre o valor dos serviços não prestados, sem embargo de indenização dos prejuízos porventura causados ao Inep pela inexecução parcial ou total do contrato. A aplicação desta
378

multa independe da multa moratória eventualmente aplicada ou em fase de aplicação, sendo aplicável cumulativamente. b) Suspensão do direito de licitar e de contratar com a Administração Pública, pelo prazo de até 05 (cinco) anos, garantido o direito prévio da citação e da ampla defesa, enquanto perdurarem os motivos determinantes da punição ou até que seja promovida a reabilitação perante a própria autoridade que aplicou a penalidade. Essa penalidade também será aplicada ao licitante, que convocado dentro do prazo de validade da sua proposta, não celebrar o contrato, deixar de entregar a documentação exigida para o certame, apresentar documentação falsa, ensejar o retardamento da execução do seu objeto, não mantiver a proposta, falhar ou fraudar na execução do objeto pactuado, comportarse de modo inidôneo ou cometer fraude fiscal. Parágrafo Quinto ­ A multa por inexecução contratual e a suspensão do direito de licitar e de contratar com a Administração Pública poderão ser aplicadas juntamente com as dos incisos I, II, III e IV, descritas no caput desta Cláusula, facultada a defesa prévia do interessado, no respectivo processo, no prazo de 05 (cinco) dias úteis. Parágrafo Sexto ­ Se a multa for superior ao valor da garantia prestada, além da perda desta, responderá a Contratada pela sua diferença, a qual será descontada dos pagamentos devidos pela Administração ou, quando for o caso, cobrada judicialmente. Parágrafo Sétimo ­ As penalidades serão obrigatoriamente registradas no SICAF, e, no caso de suspensão de licitar, o licitante deverá ser descredenciado por igual período, sem prejuízo das multas previstas no Edital e das demais cominações legais Parágrafo Oitavo ­ As multas aplicadas poderão ser descontadas da garantia prevista no contrato, ou dos pagamentos, ou recolhidas à conta Única do Tesouro Nacional em favor do Inep, no prazo de 10(dez) dias corridos contados a partir do recebimento da notificação, ou ainda, se for o caso, poderão ser cobradas judicialmente, nos termos dos parágrafos 2º e 3º, do art. 86 da Lei 8.666/93. Parágrafo Nono ­ As multas não têm caráter indenizatório e seu pagamento não eximirá a empresa contratada de ser acionada judicialmente pela responsabilidade civil derivada de perdas e danos junto ao INEP, decorrentes das infrações cometidas. Parágrafo Décimo ­ Mesmo em caso de rescisão, será aplicada a penalidade cabível. CLÁUSULA TREZE ­ DA FISCALIZAÇÃO Independente dos sistemas de acompanhamento e supervisão exercidos diretamente pela CONTRATADA para os níveis de atendimento dos serviços contratados, o Inep, por meio da Coordenação-Geral de Sistemas de Informação, exercerá supervisão e acompanhamento da execução do contrato e dos serviços
379

prestados, utilizando servidor designado para este fim. Parágrafo Primeiro ­ A execução das Ordens de Serviço será monitorada e fiscalizada pela equipe de Gerentes de Projetos do Inep, formada por servidores da CGSI, cuja responsabilidade é o atendimento às áreas de negócio do Órgão no que diz respeito ao desenvolvimento e à manutenção de sistemas de informação. Parágrafo Segundo ­ Entre as diversas funções de acompanhamento e supervisão a serem exercidas pelo Inep, destacam-se: avaliação da qualidade dos serviços realizados, homologação dos produtos gerados, validação de contagens de pontos de função e demais atividades de controle previstas na Metodologia de Gestão e Desenvolvimento de Sistemas do Inep. Parágrafo Terceiro ­ A ação ou omissão total ou parcial da fiscalização do Inep, não eximirá a CONTRATADA de responsabilidade na execução do contrato. CLÁUSULA QUATORZE ­ DA RESCISÃO A inexecução total ou parcial deste Contrato enseja a sua rescisão, com as conseqüências contratuais e as previstas em lei ou regulamento. Parágrafo Primeiro ­ Este Contrato poderá ser rescindido unilateralmente pelo INEP, nos termos do inciso I, do art. 79 da Lei nº 8.666/93, mediante notificação expressa, sem que caiba qualquer tipo de ressarcimento, exceto o direito de receber o estrito valor correspondente aos equipamentos fornecidos e aos serviços efetivamente prestados, desde que estejam de acordo com as prescrições pactuadas do Termo de Referência. Parágrafo Segundo - O Contrato poderá, ainda, ser rescindido pelo INEP, independentemente de aviso judicial, ou extrajudicial, nos seguintes casos: a) Decretação de falência, recuperação judicial ou extrajudicial ou dissolução da CONTRATADA; b) Alteração do contrato social ou a modificação da finalidade ou da estrutura da CONTRATADA, que, a juízo do INEP, prejudique a execução deste Contrato; c) Cometimento reiterado de faltas, anotadas na forma do § 1º, art. 67, da Lei n.º 8.666/93; d) Transferência dos direitos e/ou obrigações deste Contrato, sem prévia e expressa autorização do INEP; e) No interesse do INEP, mediante comunicação com antecedência de 30 (trinta) dias, e o pagamento dos serviços realizados até a data comunicada no aviso de rescisão. CLÁUSULA QUINZE ­ DA GARANTIA CONTRATUAL Como garantia da execução plena do seu objeto e fiel cumprimento do presente Contrato, a CONTRATADA prestará garantia no valor de R$ __________(_________), correspondente a 5% (cinco por cento) do valor global do Contrato, na forma do art. 56, § 1°, da Lei n° 8.666/93.

380

Parágrafo Primeiro ­ A garantia referida nesta Cláusula poderá ser utilizada para indenizar o INEP por danos de qualquer natureza, resultantes da inexecução parcial ou total, ou execução imperfeita do Contrato. Parágrafo Segundo ­ Se o valor da garantia for utilizado em pagamento de qualquer obrigação, inclusive indenização ao INEP ou a terceiros, ou reduzido em termos reais por desvalorização da moeda, de forma que não mais represente 5% (cinco por cento) do valor global do Contrato, a CONTRATADA se obriga a fazer a respectiva reposição, no prazo máximo de 72 (setenta e duas) horas, a contar da data em que for notificada pelo INEP. Parágrafo Terceiro ­ Não ocorrendo a hipótese de que tratam os parágrafos anteriores, a garantia será liberada e/ou restituída à CONTRATADA, após a comprovação do cumprimento e aceitação definitiva do objeto deste contrato. CLÁUSULA DEZESSEIS ­ DA GARANTIA A Contratada deverá garantir os serviços pelo período de 1 (um) ano após o aceite definitivo da Ordem de Serviço, conforme o item 4 do Termo de Referência. CLÁUSULA DEZESSETE - DA PUBLICAÇÃO A publicação do presente Contrato, por extrato, no Diário Oficial da União, será providenciada pelo INEP até o quinto dia útil do mês seguinte ao de sua assinatura, para ocorrer no prazo de 20 (vinte) dias a partir daquela data, nos termos do Parágrafo Único do art. 61 da Lei nº 8.666/93. CLÁUSULA DEZOITO ­ DISPOSIÇÕES FINAIS Parágrafo Primeiro ­ A anulação do procedimento licitatório induz à do contrato (art. 29, §1°, do Decreto n. 5.450, de 2005 c/c ar. 49 e parágrafos, Lei nº 8.666/93). Parágrafo Segundo ­ Aos casos omissos, aplicar-se-ão as demais disposições constantes da Lei nº 10.520, de 17 de julho de 2002, dos Decretos nºs. 3.555, de 8 de agosto de 2000, 3.693, de 20 de dezembro de 2000, 5.450, de 31 de maio de 2005, 3.784, de 6 de abril de 2001, IN-MPOG nº 02, de 30 de abril de 2008, e suas alterações posteriores, IN-MPOG nº 4, de 19 de maio de 2008, Lei Complementar nº 123/2006, Decreto nº 6.204/2007, Lei nº 8.078 de 11/09/1990,e subsidiariamente a Lei nº 8.666/93 e suas alterações posteriores. Parágrafo Terceiro - Todas as despesas relativas à execução do Objeto, tais como: mão-de-obra, materiais, equipamentos, ferramentas, fretes, transportes horizontais e verticais, impostos, taxas, emolumentos, leis sociais, etc., bem como providências quanto à legalização do mesmo perante os Órgãos Públicos correrão por conta da Contratada. Parágrafo Quarto - As disposições e especificações contidas no Termo de Referência serão parte integrante do contrato, devendo ser observadas e atendidas em sua plenitude, cabendo a aplicação de penalidades no descumprimento de qualquer dos seus itens.

381

Parágrafo Quinto - Todos os serviços deverão ser realizados com a programação prévia e autorização do INEP, de modo a não interferir em suas atividades normais. Parágrafo Sexto - A existência de Fiscalização não diminui ou atenua a responsabilidade da Contratada pela execução de qualquer serviço. CLÁUSULA DEZENOVE ­ DO FORO Fica eleito o Foro da Justiça Federal, Seção Judiciária do Distrito Federal, excluindo-se qualquer outro, por mais privilegiado que seja, para dirimir quaisquer questões oriundas do presente Contrato que não possam ser resolvidas pela via extrajudicial. E, por estarem assim justos e contratados, assinam o presente Instrumento, em 2 (duas) vias, de igual teor e forma, para todos os fins de direito, na presença das duas testemunhas abaixo identificadas, que a tudo assistiram e que também o subscrevem. Brasília-DF., de de 2010.

JOAQUIM JOSÉ SOARES NETO Presidente do INEP

Nome do Representante Legal pela EMPRESA CONTRATADA

Testemunhas _____________________________ Nome: RG: CPF: Nome: RG: CPF:

382

